<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (33,033 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (11 samples, 0.03%)</title><rect x="10.0" y="1603.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (25 samples, 0.08%)</title><rect x="10.5" y="1603.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="1614.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (20 samples, 0.06%)</title><rect x="10.6" y="1587.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="1598.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (16 samples, 0.05%)</title><rect x="10.7" y="1571.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (11 samples, 0.03%)</title><rect x="10.8" y="1555.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.8" y="1566.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (11 samples, 0.03%)</title><rect x="10.8" y="1539.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.8" y="1550.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.03%)</title><rect x="11.5" y="1603.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.5" y="1614.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.03%)</title><rect x="11.5" y="1587.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.5" y="1598.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (10 samples, 0.03%)</title><rect x="11.5" y="1571.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.5" y="1582.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.02%)</title><rect x="11.5" y="1555.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.5" y="1566.0"></text>
</g>
<g>
<title>[no_Java_frame] (21 samples, 0.06%)</title><rect x="11.9" y="1603.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="14.9" y="1614.0"></text>
</g>
<g>
<title>[not_walkable_Java] (20 samples, 0.06%)</title><rect x="12.7" y="1603.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="15.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.03%)</title><rect x="13.0" y="1587.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="16.0" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.02%)</title><rect x="13.1" y="1571.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="16.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.20%)</title><rect x="13.4" y="1603.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.4" y="1614.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.05%)</title><rect x="13.9" y="1587.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.9" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.05%)</title><rect x="14.0" y="1571.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="17.0" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.05%)</title><rect x="14.0" y="1555.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.0" y="1566.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.05%)</title><rect x="14.0" y="1539.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="17.0" y="1550.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.05%)</title><rect x="14.0" y="1523.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="17.0" y="1534.0"></text>
</g>
<g>
<title>futex_wait (16 samples, 0.05%)</title><rect x="14.0" y="1507.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="17.0" y="1518.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.05%)</title><rect x="14.0" y="1491.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.0" y="1502.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.04%)</title><rect x="14.0" y="1475.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.0" y="1486.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.04%)</title><rect x="14.1" y="1459.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.1" y="1470.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.04%)</title><rect x="14.1" y="1443.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="17.1" y="1454.0"></text>
</g>
<g>
<title>open64 (23 samples, 0.07%)</title><rect x="15.0" y="1587.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="18.0" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.07%)</title><rect x="15.0" y="1571.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.0" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.07%)</title><rect x="15.0" y="1555.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.0" y="1566.0"></text>
</g>
<g>
<title>sys_openat (22 samples, 0.07%)</title><rect x="15.0" y="1539.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.0" y="1550.0"></text>
</g>
<g>
<title>do_sys_open (22 samples, 0.07%)</title><rect x="15.0" y="1523.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.0" y="1534.0"></text>
</g>
<g>
<title>do_filp_open (20 samples, 0.06%)</title><rect x="15.0" y="1507.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="18.0" y="1518.0"></text>
</g>
<g>
<title>path_openat (19 samples, 0.06%)</title><rect x="15.0" y="1491.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="18.0" y="1502.0"></text>
</g>
<g>
<title>link_path_walk (8 samples, 0.02%)</title><rect x="15.1" y="1475.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="18.1" y="1486.0"></text>
</g>
<g>
<title>[unknown_Java] (316 samples, 0.96%)</title><rect x="15.8" y="1603.0" width="11.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.8" y="1614.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (13 samples, 0.04%)</title><rect x="16.3" y="1587.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.3" y="1598.0"></text>
</g>
<g>
<title>Interpreter (61 samples, 0.18%)</title><rect x="16.9" y="1587.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.9" y="1598.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.12%)</title><rect x="19.4" y="1587.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="22.4" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (29 samples, 0.09%)</title><rect x="19.6" y="1571.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.6" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (25 samples, 0.08%)</title><rect x="19.7" y="1555.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="22.7" y="1566.0"></text>
</g>
<g>
<title>[vdso] (25 samples, 0.08%)</title><rect x="19.7" y="1539.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="22.7" y="1550.0"></text>
</g>
<g>
<title>itable stub (38 samples, 0.12%)</title><rect x="22.4" y="1587.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="25.4" y="1598.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (27 samples, 0.08%)</title><rect x="24.3" y="1587.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="27.3" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.07%)</title><rect x="24.4" y="1571.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.4" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.07%)</title><rect x="24.4" y="1555.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.4" y="1566.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.05%)</title><rect x="24.6" y="1539.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.6" y="1550.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.05%)</title><rect x="24.6" y="1523.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.6" y="1534.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.05%)</title><rect x="24.6" y="1507.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.6" y="1518.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.04%)</title><rect x="24.8" y="1491.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.8" y="1502.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.04%)</title><rect x="24.8" y="1475.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.8" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.04%)</title><rect x="24.8" y="1459.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.8" y="1470.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (14 samples, 0.04%)</title><rect x="25.9" y="1587.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.9" y="1598.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (12 samples, 0.04%)</title><rect x="26.5" y="1587.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.5" y="1598.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (35 samples, 0.11%)</title><rect x="27.3" y="1603.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="30.3" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.09%)</title><rect x="27.5" y="1587.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.5" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.09%)</title><rect x="27.5" y="1571.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.5" y="1582.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.07%)</title><rect x="27.7" y="1555.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="30.7" y="1566.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.06%)</title><rect x="27.8" y="1539.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="30.8" y="1550.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.06%)</title><rect x="27.8" y="1523.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="30.8" y="1534.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.05%)</title><rect x="27.8" y="1507.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="30.8" y="1518.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.04%)</title><rect x="27.9" y="1491.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.9" y="1502.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.04%)</title><rect x="27.9" y="1475.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="30.9" y="1486.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.04%)</title><rect x="27.9" y="1459.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.9" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (122 samples, 0.37%)</title><rect x="29.5" y="1603.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (105 samples, 0.32%)</title><rect x="29.8" y="1587.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.8" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (105 samples, 0.32%)</title><rect x="29.8" y="1571.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.8" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (105 samples, 0.32%)</title><rect x="29.8" y="1555.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.8" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (105 samples, 0.32%)</title><rect x="29.8" y="1539.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.8" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (30 samples, 0.09%)</title><rect x="29.8" y="1523.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.8" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/recovery/ResilientOutputStreamBase.flush (30 samples, 0.09%)</title><rect x="29.8" y="1507.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.8" y="1518.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (30 samples, 0.09%)</title><rect x="29.8" y="1491.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.8" y="1502.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (28 samples, 0.08%)</title><rect x="29.9" y="1475.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.9" y="1486.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (27 samples, 0.08%)</title><rect x="29.9" y="1459.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.9" y="1470.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (27 samples, 0.08%)</title><rect x="29.9" y="1443.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.08%)</title><rect x="30.0" y="1427.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="33.0" y="1438.0"></text>
</g>
<g>
<title>__write (25 samples, 0.08%)</title><rect x="30.0" y="1411.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="33.0" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.07%)</title><rect x="30.0" y="1395.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="33.0" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.07%)</title><rect x="30.0" y="1379.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.0" y="1390.0"></text>
</g>
<g>
<title>sys_write (23 samples, 0.07%)</title><rect x="30.1" y="1363.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="33.1" y="1374.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.07%)</title><rect x="30.1" y="1347.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.1" y="1358.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.06%)</title><rect x="30.1" y="1331.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.1" y="1342.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.06%)</title><rect x="30.1" y="1315.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="33.1" y="1326.0"></text>
</g>
<g>
<title>ext4_file_write_iter (19 samples, 0.06%)</title><rect x="30.1" y="1299.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.1" y="1310.0"></text>
</g>
<g>
<title>__generic_file_write_iter (17 samples, 0.05%)</title><rect x="30.1" y="1283.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.1" y="1294.0"></text>
</g>
<g>
<title>file_update_time (9 samples, 0.03%)</title><rect x="30.1" y="1267.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.1" y="1278.0"></text>
</g>
<g>
<title>generic_update_time (9 samples, 0.03%)</title><rect x="30.1" y="1251.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="33.1" y="1262.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.03%)</title><rect x="30.1" y="1235.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.1" y="1246.0"></text>
</g>
<g>
<title>ext4_dirty_inode (9 samples, 0.03%)</title><rect x="30.1" y="1219.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.1" y="1230.0"></text>
</g>
<g>
<title>generic_perform_write (7 samples, 0.02%)</title><rect x="30.5" y="1267.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.5" y="1278.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (75 samples, 0.23%)</title><rect x="30.9" y="1523.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.9" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (75 samples, 0.23%)</title><rect x="30.9" y="1507.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.9" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (28 samples, 0.08%)</title><rect x="30.9" y="1491.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.9" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (28 samples, 0.08%)</title><rect x="30.9" y="1475.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.9" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (22 samples, 0.07%)</title><rect x="31.1" y="1459.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.1" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (15 samples, 0.05%)</title><rect x="31.4" y="1443.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.4" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (12 samples, 0.04%)</title><rect x="31.4" y="1427.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.4" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (12 samples, 0.04%)</title><rect x="31.4" y="1411.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.4" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (12 samples, 0.04%)</title><rect x="31.4" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.4" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (45 samples, 0.14%)</title><rect x="31.9" y="1491.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.9" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (45 samples, 0.14%)</title><rect x="31.9" y="1475.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.9" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (40 samples, 0.12%)</title><rect x="32.1" y="1459.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.1" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (39 samples, 0.12%)</title><rect x="32.1" y="1443.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.1" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (28 samples, 0.08%)</title><rect x="32.1" y="1427.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.1" y="1438.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (28 samples, 0.08%)</title><rect x="32.1" y="1411.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.1" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (28 samples, 0.08%)</title><rect x="32.1" y="1395.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.1" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initialize (16 samples, 0.05%)</title><rect x="32.3" y="1379.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.3" y="1390.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeDefaultCentury (12 samples, 0.04%)</title><rect x="32.4" y="1363.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.4" y="1374.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (8 samples, 0.02%)</title><rect x="32.8" y="1379.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.8" y="1390.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (8 samples, 0.02%)</title><rect x="32.8" y="1363.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.8" y="1374.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.format (9 samples, 0.03%)</title><rect x="33.1" y="1427.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.1" y="1438.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (9 samples, 0.03%)</title><rect x="33.1" y="1411.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.1" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (7 samples, 0.02%)</title><rect x="33.2" y="1395.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.2" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (7 samples, 0.02%)</title><rect x="33.2" y="1379.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.02%)</title><rect x="33.6" y="1587.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.6" y="1598.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main.main (78 samples, 0.24%)</title><rect x="34.4" y="1603.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.4" y="1614.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.main (78 samples, 0.24%)</title><rect x="34.4" y="1587.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.4" y="1598.0"></text>
</g>
<g>
<title>scala/App.main$ (78 samples, 0.24%)</title><rect x="34.4" y="1571.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.4" y="1582.0"></text>
</g>
<g>
<title>scala/App.main (78 samples, 0.24%)</title><rect x="34.4" y="1555.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.4" y="1566.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (77 samples, 0.23%)</title><rect x="34.4" y="1539.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.4" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (77 samples, 0.23%)</title><rect x="34.4" y="1523.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.4" y="1534.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (77 samples, 0.23%)</title><rect x="34.4" y="1507.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.4" y="1518.0"></text>
</g>
<g>
<title>scala/App$$Lambda$1/874088044.apply (77 samples, 0.23%)</title><rect x="34.4" y="1491.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.4" y="1502.0"></text>
</g>
<g>
<title>scala/App.$anonfun$main$1$adapted (77 samples, 0.23%)</title><rect x="34.4" y="1475.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.4" y="1486.0"></text>
</g>
<g>
<title>scala/App.$anonfun$main$1 (77 samples, 0.23%)</title><rect x="34.4" y="1459.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.4" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/AbstractFunction0.apply$mcV$sp (77 samples, 0.23%)</title><rect x="34.4" y="1443.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="1454.0"></text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp$ (77 samples, 0.23%)</title><rect x="34.4" y="1427.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.4" y="1438.0"></text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp (77 samples, 0.23%)</title><rect x="34.4" y="1411.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.4" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$delayedInit$body.apply (77 samples, 0.23%)</title><rect x="34.4" y="1395.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.4" y="1406.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.delayedEndpoint$io$bernhardt$akka$rapid$Main$1 (77 samples, 0.23%)</title><rect x="34.4" y="1379.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.4" y="1390.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.start (77 samples, 0.23%)</title><rect x="34.4" y="1363.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.4" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.startClusterSystem (77 samples, 0.23%)</title><rect x="34.4" y="1347.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.4" y="1358.0"></text>
</g>
<g>
<title>scala/Option.map (77 samples, 0.23%)</title><rect x="34.4" y="1331.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.4" y="1342.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$$$Lambda$691/792488644.apply (77 samples, 0.23%)</title><rect x="34.4" y="1315.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.4" y="1326.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$startClusterSystem$1 (77 samples, 0.23%)</title><rect x="34.4" y="1299.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (76 samples, 0.23%)</title><rect x="34.4" y="1283.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (76 samples, 0.23%)</title><rect x="34.4" y="1267.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (76 samples, 0.23%)</title><rect x="34.4" y="1251.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.&lt;init&gt; (8 samples, 0.02%)</title><rect x="34.4" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.start (68 samples, 0.21%)</title><rect x="34.7" y="1235.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start (68 samples, 0.21%)</title><rect x="34.7" y="1219.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start$lzycompute (68 samples, 0.21%)</title><rect x="34.7" y="1203.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree2$1 (68 samples, 0.21%)</title><rect x="34.7" y="1187.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.7" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.init (62 samples, 0.19%)</title><rect x="34.7" y="1171.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.7" y="1182.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.init (62 samples, 0.19%)</title><rect x="34.7" y="1155.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.7" y="1166.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.createOrNone (24 samples, 0.07%)</title><rect x="34.8" y="1139.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.8" y="1150.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$$Lambda$844/1699486292.apply (24 samples, 0.07%)</title><rect x="34.8" y="1123.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.8" y="1134.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.$anonfun$init$1 (24 samples, 0.07%)</title><rect x="34.8" y="1107.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.8" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createRemoteWatcher (24 samples, 0.07%)</title><rect x="34.8" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.8" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.apply (23 samples, 0.07%)</title><rect x="34.8" y="1075.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (23 samples, 0.07%)</title><rect x="34.8" y="1059.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (23 samples, 0.07%)</title><rect x="34.8" y="1043.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (23 samples, 0.07%)</title><rect x="34.8" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.8" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (23 samples, 0.07%)</title><rect x="34.8" y="1011.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.8" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (23 samples, 0.07%)</title><rect x="34.8" y="995.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Cluster.&lt;init&gt; (22 samples, 0.07%)</title><rect x="34.8" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="990.0"></text>
</g>
<g>
<title>akka/cluster/ClusterJmx.&lt;init&gt; (13 samples, 0.04%)</title><rect x="34.8" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.8" y="974.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.getPlatformMBeanServer (12 samples, 0.04%)</title><rect x="34.8" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (10 samples, 0.03%)</title><rect x="34.8" y="931.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.03%)</title><rect x="34.8" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.03%)</title><rect x="34.8" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.03%)</title><rect x="34.8" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.03%)</title><rect x="34.8" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.03%)</title><rect x="34.8" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (10 samples, 0.03%)</title><rect x="34.8" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (10 samples, 0.03%)</title><rect x="34.8" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.accept (10 samples, 0.03%)</title><rect x="34.8" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.8" y="814.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$902/1944815218.apply (7 samples, 0.02%)</title><rect x="34.8" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.8" y="798.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$getPlatformMBeanServer$0 (7 samples, 0.02%)</title><rect x="34.8" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.8" y="782.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.start (20 samples, 0.06%)</title><rect x="35.8" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.8" y="1150.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundStreams (18 samples, 0.05%)</title><rect x="35.8" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.8" y="1134.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundControlStream (11 samples, 0.03%)</title><rect x="35.8" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (7 samples, 0.02%)</title><rect x="35.9" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.02%)</title><rect x="35.9" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.02%)</title><rect x="35.9" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.02%)</title><rect x="35.9" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.9" y="1054.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.&lt;init&gt; (9 samples, 0.03%)</title><rect x="36.5" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.5" y="1150.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.&lt;init&gt; (9 samples, 0.03%)</title><rect x="36.5" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,458 samples, 19.55%)</title><rect x="37.2" y="1603.0" width="230.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.2" y="1614.0">java/lang/Thread.run</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (314 samples, 0.95%)</title><rect x="37.2" y="1587.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.2" y="1598.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (313 samples, 0.95%)</title><rect x="37.3" y="1571.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.3" y="1582.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (58 samples, 0.18%)</title><rect x="37.9" y="1555.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.9" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (50 samples, 0.15%)</title><rect x="38.2" y="1539.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.2" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (143 samples, 0.43%)</title><rect x="40.0" y="1555.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.0" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (115 samples, 0.35%)</title><rect x="40.8" y="1539.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.8" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.extractTask (8 samples, 0.02%)</title><rect x="40.8" y="1523.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.8" y="1534.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (7 samples, 0.02%)</title><rect x="40.8" y="1507.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.8" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (107 samples, 0.32%)</title><rect x="41.1" y="1523.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.1" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (106 samples, 0.32%)</title><rect x="41.1" y="1507.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.1" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (106 samples, 0.32%)</title><rect x="41.1" y="1491.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.1" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (67 samples, 0.20%)</title><rect x="41.2" y="1475.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (65 samples, 0.20%)</title><rect x="41.2" y="1459.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (65 samples, 0.20%)</title><rect x="41.2" y="1443.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (65 samples, 0.20%)</title><rect x="41.2" y="1427.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (65 samples, 0.20%)</title><rect x="41.2" y="1411.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.2" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (65 samples, 0.20%)</title><rect x="41.2" y="1395.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (62 samples, 0.19%)</title><rect x="41.3" y="1379.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (60 samples, 0.18%)</title><rect x="41.4" y="1363.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (60 samples, 0.18%)</title><rect x="41.4" y="1347.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (52 samples, 0.16%)</title><rect x="41.6" y="1331.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (52 samples, 0.16%)</title><rect x="41.6" y="1315.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 0.16%)</title><rect x="41.6" y="1299.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.6" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.03%)</title><rect x="41.6" y="1283.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="44.6" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 0.12%)</title><rect x="42.0" y="1283.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="45.0" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.12%)</title><rect x="42.1" y="1267.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.1" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.12%)</title><rect x="42.1" y="1251.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.1" y="1262.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.12%)</title><rect x="42.1" y="1235.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="45.1" y="1246.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.12%)</title><rect x="42.1" y="1219.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="45.1" y="1230.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.11%)</title><rect x="42.1" y="1203.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.1" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.09%)</title><rect x="42.4" y="1187.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.4" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.09%)</title><rect x="42.4" y="1171.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.4" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.09%)</title><rect x="42.4" y="1155.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.03%)</title><rect x="43.6" y="1475.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.6" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (26 samples, 0.08%)</title><rect x="44.0" y="1475.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.0" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (26 samples, 0.08%)</title><rect x="44.0" y="1459.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.0" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (85 samples, 0.26%)</title><rect x="45.3" y="1555.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.3" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (80 samples, 0.24%)</title><rect x="45.5" y="1539.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.5" y="1550.0"></text>
</g>
<g>
<title>JVM_Sleep (28 samples, 0.08%)</title><rect x="45.6" y="1523.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="48.6" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.02%)</title><rect x="45.8" y="1507.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="48.8" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="45.8" y="1491.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="48.8" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.02%)</title><rect x="45.8" y="1475.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="48.8" y="1486.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (7 samples, 0.02%)</title><rect x="46.3" y="1507.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.3" y="1518.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (34 samples, 0.10%)</title><rect x="47.0" y="1523.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="50.0" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.07%)</title><rect x="47.4" y="1507.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="50.4" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.07%)</title><rect x="47.4" y="1491.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.4" y="1502.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.07%)</title><rect x="47.4" y="1475.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.4" y="1486.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.06%)</title><rect x="47.5" y="1459.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="50.5" y="1470.0"></text>
</g>
<g>
<title>futex_wait (21 samples, 0.06%)</title><rect x="47.5" y="1443.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.5" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.05%)</title><rect x="47.7" y="1427.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.7" y="1438.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.04%)</title><rect x="47.8" y="1411.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.8" y="1422.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.04%)</title><rect x="47.8" y="1395.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.8" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.03%)</title><rect x="47.8" y="1379.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,144 samples, 18.60%)</title><rect x="48.4" y="1587.0" width="219.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.4" y="1598.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,144 samples, 18.60%)</title><rect x="48.4" y="1571.0" width="219.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.4" y="1582.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>I2C/C2I adapters (8 samples, 0.02%)</title><rect x="50.5" y="1555.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.5" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (223 samples, 0.68%)</title><rect x="50.8" y="1555.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.8" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (218 samples, 0.66%)</title><rect x="51.0" y="1539.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.0" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (218 samples, 0.66%)</title><rect x="51.0" y="1523.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.0" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (217 samples, 0.66%)</title><rect x="51.0" y="1507.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.0" y="1518.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (217 samples, 0.66%)</title><rect x="51.0" y="1491.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.0" y="1502.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (217 samples, 0.66%)</title><rect x="51.0" y="1475.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.0" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (217 samples, 0.66%)</title><rect x="51.0" y="1459.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.0" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (217 samples, 0.66%)</title><rect x="51.0" y="1443.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.0" y="1454.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.put (12 samples, 0.04%)</title><rect x="51.6" y="1427.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.6" y="1438.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.put (12 samples, 0.04%)</title><rect x="51.6" y="1411.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.6" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (184 samples, 0.56%)</title><rect x="52.1" y="1427.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.1" y="1438.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (184 samples, 0.56%)</title><rect x="52.1" y="1411.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.1" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (183 samples, 0.55%)</title><rect x="52.2" y="1395.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.2" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (170 samples, 0.51%)</title><rect x="52.4" y="1379.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.4" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (156 samples, 0.47%)</title><rect x="52.4" y="1363.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.4" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (155 samples, 0.47%)</title><rect x="52.4" y="1347.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.4" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (155 samples, 0.47%)</title><rect x="52.4" y="1331.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.4" y="1342.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (18 samples, 0.05%)</title><rect x="52.6" y="1315.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="55.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.23%)</title><rect x="53.2" y="1315.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="56.2" y="1326.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.02%)</title><rect x="53.2" y="1299.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="56.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.06%)</title><rect x="53.6" y="1299.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="56.6" y="1310.0"></text>
</g>
<g>
<title>__xstat64 (13 samples, 0.04%)</title><rect x="53.8" y="1283.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="56.8" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.04%)</title><rect x="53.9" y="1267.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.9" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.04%)</title><rect x="53.9" y="1251.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="56.9" y="1262.0"></text>
</g>
<g>
<title>sys_newstat (12 samples, 0.04%)</title><rect x="53.9" y="1235.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="56.9" y="1246.0"></text>
</g>
<g>
<title>SYSC_newstat (11 samples, 0.03%)</title><rect x="53.9" y="1219.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="56.9" y="1230.0"></text>
</g>
<g>
<title>vfs_statx (11 samples, 0.03%)</title><rect x="53.9" y="1203.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.9" y="1214.0"></text>
</g>
<g>
<title>user_path_at_empty (10 samples, 0.03%)</title><rect x="53.9" y="1187.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="56.9" y="1198.0"></text>
</g>
<g>
<title>filename_lookup (9 samples, 0.03%)</title><rect x="53.9" y="1171.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.9" y="1182.0"></text>
</g>
<g>
<title>path_lookupat (9 samples, 0.03%)</title><rect x="53.9" y="1155.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="56.9" y="1166.0"></text>
</g>
<g>
<title>link_path_walk (8 samples, 0.02%)</title><rect x="53.9" y="1139.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="56.9" y="1150.0"></text>
</g>
<g>
<title>__connect (10 samples, 0.03%)</title><rect x="54.4" y="1299.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="57.4" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="54.4" y="1283.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.4" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.03%)</title><rect x="54.4" y="1267.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.4" y="1278.0"></text>
</g>
<g>
<title>sys_connect (9 samples, 0.03%)</title><rect x="54.4" y="1251.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.4" y="1262.0"></text>
</g>
<g>
<title>SYSC_connect (9 samples, 0.03%)</title><rect x="54.4" y="1235.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="57.4" y="1246.0"></text>
</g>
<g>
<title>inet_dgram_connect (9 samples, 0.03%)</title><rect x="54.4" y="1219.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.4" y="1230.0"></text>
</g>
<g>
<title>ip4_datagram_connect (7 samples, 0.02%)</title><rect x="54.5" y="1203.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.5" y="1214.0"></text>
</g>
<g>
<title>__sendmmsg (20 samples, 0.06%)</title><rect x="55.0" y="1299.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.0" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.06%)</title><rect x="55.0" y="1283.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.0" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.06%)</title><rect x="55.0" y="1267.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.0" y="1278.0"></text>
</g>
<g>
<title>sys_sendmmsg (19 samples, 0.06%)</title><rect x="55.0" y="1251.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.0" y="1262.0"></text>
</g>
<g>
<title>__sys_sendmmsg (19 samples, 0.06%)</title><rect x="55.0" y="1235.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="58.0" y="1246.0"></text>
</g>
<g>
<title>___sys_sendmsg (16 samples, 0.05%)</title><rect x="55.0" y="1219.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.0" y="1230.0"></text>
</g>
<g>
<title>sock_sendmsg (14 samples, 0.04%)</title><rect x="55.1" y="1203.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.1" y="1214.0"></text>
</g>
<g>
<title>inet_sendmsg (13 samples, 0.04%)</title><rect x="55.1" y="1187.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.1" y="1198.0"></text>
</g>
<g>
<title>udp_sendmsg (13 samples, 0.04%)</title><rect x="55.1" y="1171.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.1" y="1182.0"></text>
</g>
<g>
<title>udp_send_skb (10 samples, 0.03%)</title><rect x="55.2" y="1155.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.2" y="1166.0"></text>
</g>
<g>
<title>ip_send_skb (10 samples, 0.03%)</title><rect x="55.2" y="1139.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="58.2" y="1150.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.03%)</title><rect x="55.2" y="1123.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.2" y="1134.0"></text>
</g>
<g>
<title>ip_output (10 samples, 0.03%)</title><rect x="55.2" y="1107.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.2" y="1118.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.03%)</title><rect x="55.2" y="1091.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.2" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 0.03%)</title><rect x="55.2" y="1075.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="58.2" y="1086.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 0.02%)</title><rect x="55.2" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.2" y="1070.0"></text>
</g>
<g>
<title>do_softirq.part.17 (7 samples, 0.02%)</title><rect x="55.2" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.2" y="1054.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 0.02%)</title><rect x="55.2" y="1027.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="58.2" y="1038.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.02%)</title><rect x="55.2" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.2" y="1022.0"></text>
</g>
<g>
<title>poll (20 samples, 0.06%)</title><rect x="56.7" y="1315.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="59.7" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.05%)</title><rect x="56.8" y="1299.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.8" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.05%)</title><rect x="56.8" y="1283.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.8" y="1294.0"></text>
</g>
<g>
<title>sys_poll (15 samples, 0.05%)</title><rect x="56.8" y="1267.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.8" y="1278.0"></text>
</g>
<g>
<title>do_sys_poll (15 samples, 0.05%)</title><rect x="56.8" y="1251.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="59.8" y="1262.0"></text>
</g>
<g>
<title>poll_schedule_timeout (12 samples, 0.04%)</title><rect x="56.9" y="1235.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="59.9" y="1246.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.04%)</title><rect x="56.9" y="1219.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="59.9" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.04%)</title><rect x="56.9" y="1203.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.9" y="1214.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.03%)</title><rect x="56.9" y="1187.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="59.9" y="1198.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.03%)</title><rect x="56.9" y="1171.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.9" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.03%)</title><rect x="56.9" y="1155.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="59.9" y="1166.0"></text>
</g>
<g>
<title>recvfrom (9 samples, 0.03%)</title><rect x="57.4" y="1315.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="60.4" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="57.4" y="1299.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.4" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.02%)</title><rect x="57.4" y="1283.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="60.4" y="1294.0"></text>
</g>
<g>
<title>sys_recvfrom (7 samples, 0.02%)</title><rect x="57.4" y="1267.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.4" y="1278.0"></text>
</g>
<g>
<title>SYSC_recvfrom (7 samples, 0.02%)</title><rect x="57.4" y="1251.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.4" y="1262.0"></text>
</g>
<g>
<title>socket (7 samples, 0.02%)</title><rect x="57.7" y="1315.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="60.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.add (10 samples, 0.03%)</title><rect x="58.0" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.putIfAbsent (9 samples, 0.03%)</title><rect x="58.1" y="1347.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (9 samples, 0.03%)</title><rect x="58.1" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.1" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (1,714 samples, 5.19%)</title><rect x="58.8" y="1555.0" width="61.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.8" y="1566.0">akka/d..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (1,714 samples, 5.19%)</title><rect x="58.8" y="1539.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.8" y="1550.0">akka/u..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (1,714 samples, 5.19%)</title><rect x="58.8" y="1523.0" width="61.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.8" y="1534.0">akka/u..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (1,561 samples, 4.73%)</title><rect x="59.6" y="1507.0" width="55.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.6" y="1518.0">akka/..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (1,546 samples, 4.68%)</title><rect x="59.9" y="1491.0" width="55.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.9" y="1502.0">akka/..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (1,545 samples, 4.68%)</title><rect x="59.9" y="1475.0" width="55.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.9" y="1486.0">akka/..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (292 samples, 0.88%)</title><rect x="60.2" y="1459.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (290 samples, 0.88%)</title><rect x="60.2" y="1443.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (284 samples, 0.86%)</title><rect x="60.4" y="1427.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (282 samples, 0.85%)</title><rect x="60.5" y="1411.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (273 samples, 0.83%)</title><rect x="60.5" y="1395.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (272 samples, 0.82%)</title><rect x="60.5" y="1379.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (272 samples, 0.82%)</title><rect x="60.5" y="1363.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.5" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (263 samples, 0.80%)</title><rect x="60.8" y="1347.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.8" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (237 samples, 0.72%)</title><rect x="60.9" y="1331.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (237 samples, 0.72%)</title><rect x="60.9" y="1315.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (237 samples, 0.72%)</title><rect x="60.9" y="1299.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (237 samples, 0.72%)</title><rect x="60.9" y="1283.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.9" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (230 samples, 0.70%)</title><rect x="60.9" y="1267.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (230 samples, 0.70%)</title><rect x="60.9" y="1251.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (230 samples, 0.70%)</title><rect x="60.9" y="1235.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (229 samples, 0.69%)</title><rect x="60.9" y="1219.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (222 samples, 0.67%)</title><rect x="61.1" y="1203.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (221 samples, 0.67%)</title><rect x="61.1" y="1187.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (221 samples, 0.67%)</title><rect x="61.1" y="1171.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.1" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 0.10%)</title><rect x="61.4" y="1155.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="64.4" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (180 samples, 0.54%)</title><rect x="62.6" y="1155.0" width="6.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="65.6" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (155 samples, 0.47%)</title><rect x="63.4" y="1139.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="66.4" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (154 samples, 0.47%)</title><rect x="63.5" y="1123.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.5" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (18 samples, 0.05%)</title><rect x="64.0" y="1107.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="67.0" y="1118.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.05%)</title><rect x="64.0" y="1091.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.0" y="1102.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.05%)</title><rect x="64.0" y="1075.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="67.0" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.05%)</title><rect x="64.1" y="1059.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="67.1" y="1070.0"></text>
</g>
<g>
<title>sys_futex (120 samples, 0.36%)</title><rect x="64.7" y="1107.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.7" y="1118.0"></text>
</g>
<g>
<title>do_futex (120 samples, 0.36%)</title><rect x="64.7" y="1091.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.7" y="1102.0"></text>
</g>
<g>
<title>futex_wake (117 samples, 0.35%)</title><rect x="64.7" y="1075.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.7" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (103 samples, 0.31%)</title><rect x="65.2" y="1059.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="68.2" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (103 samples, 0.31%)</title><rect x="65.2" y="1043.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="68.2" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (103 samples, 0.31%)</title><rect x="65.2" y="1027.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="68.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (24 samples, 0.07%)</title><rect x="69.4" y="1331.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.4" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.messageQueue (9 samples, 0.03%)</title><rect x="69.4" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (15 samples, 0.05%)</title><rect x="69.7" y="1315.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (15 samples, 0.05%)</title><rect x="69.7" y="1299.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (15 samples, 0.05%)</title><rect x="69.7" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (15 samples, 0.05%)</title><rect x="69.7" y="1267.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (15 samples, 0.05%)</title><rect x="69.7" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (13 samples, 0.04%)</title><rect x="69.8" y="1235.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (13 samples, 0.04%)</title><rect x="69.8" y="1219.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (13 samples, 0.04%)</title><rect x="69.8" y="1203.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (9 samples, 0.03%)</title><rect x="70.3" y="1395.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.3" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (49 samples, 0.15%)</title><rect x="70.8" y="1459.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.8" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (48 samples, 0.15%)</title><rect x="70.9" y="1443.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.9" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (10 samples, 0.03%)</title><rect x="72.6" y="1459.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.6" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,064 samples, 3.22%)</title><rect x="73.0" y="1459.0" width="38.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.0" y="1470.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,063 samples, 3.22%)</title><rect x="73.0" y="1443.0" width="38.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.0" y="1454.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,063 samples, 3.22%)</title><rect x="73.0" y="1427.0" width="38.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.0" y="1438.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (376 samples, 1.14%)</title><rect x="73.3" y="1411.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (354 samples, 1.07%)</title><rect x="74.0" y="1395.0" width="12.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="77.0" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (350 samples, 1.06%)</title><rect x="74.1" y="1379.0" width="12.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="77.1" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (315 samples, 0.95%)</title><rect x="75.3" y="1363.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="78.3" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (313 samples, 0.95%)</title><rect x="75.3" y="1347.0" width="11.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.3" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (303 samples, 0.92%)</title><rect x="75.7" y="1331.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="78.7" y="1342.0"></text>
</g>
<g>
<title>ep_poll (285 samples, 0.86%)</title><rect x="76.1" y="1315.0" width="10.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="79.1" y="1326.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (65 samples, 0.20%)</title><rect x="76.5" y="1299.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.5" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.04%)</title><rect x="76.7" y="1283.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.7" y="1294.0"></text>
</g>
<g>
<title>ep_send_events_proc (46 samples, 0.14%)</title><rect x="77.2" y="1283.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="80.2" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (32 samples, 0.10%)</title><rect x="77.6" y="1267.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.6" y="1278.0"></text>
</g>
<g>
<title>sock_poll (20 samples, 0.06%)</title><rect x="78.0" y="1251.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.0" y="1262.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (187 samples, 0.57%)</title><rect x="79.3" y="1299.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="82.3" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (186 samples, 0.56%)</title><rect x="79.3" y="1283.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.3" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (20 samples, 0.06%)</title><rect x="79.5" y="1267.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.5" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.06%)</title><rect x="79.5" y="1251.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.5" y="1262.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (15 samples, 0.05%)</title><rect x="80.2" y="1267.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.2" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.04%)</title><rect x="80.3" y="1251.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.3" y="1262.0"></text>
</g>
<g>
<title>schedule (146 samples, 0.44%)</title><rect x="80.7" y="1267.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.7" y="1278.0"></text>
</g>
<g>
<title>__schedule (142 samples, 0.43%)</title><rect x="80.9" y="1251.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.9" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (138 samples, 0.42%)</title><rect x="81.0" y="1235.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="84.0" y="1246.0"></text>
</g>
<g>
<title>select_estimate_accuracy (7 samples, 0.02%)</title><rect x="85.9" y="1299.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.9" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (169 samples, 0.51%)</title><rect x="86.7" y="1411.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.7" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.get (26 samples, 0.08%)</title><rect x="87.1" y="1395.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (24 samples, 0.07%)</title><rect x="87.1" y="1379.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvents (11 samples, 0.03%)</title><rect x="88.2" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (11 samples, 0.03%)</title><rect x="88.2" y="1379.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.2" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (89 samples, 0.27%)</title><rect x="88.6" y="1395.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.6" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (86 samples, 0.26%)</title><rect x="88.7" y="1379.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.24%)</title><rect x="88.8" y="1363.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="91.8" y="1374.0"></text>
</g>
<g>
<title>__read (73 samples, 0.22%)</title><rect x="89.0" y="1347.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="92.0" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 0.18%)</title><rect x="89.4" y="1331.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.4" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.18%)</title><rect x="89.4" y="1315.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.4" y="1326.0"></text>
</g>
<g>
<title>sys_read (50 samples, 0.15%)</title><rect x="89.8" y="1299.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="92.8" y="1310.0"></text>
</g>
<g>
<title>vfs_read (49 samples, 0.15%)</title><rect x="89.8" y="1283.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.8" y="1294.0"></text>
</g>
<g>
<title>__vfs_read (36 samples, 0.11%)</title><rect x="89.9" y="1267.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.9" y="1278.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 0.11%)</title><rect x="89.9" y="1251.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.9" y="1262.0"></text>
</g>
<g>
<title>pipe_read (26 samples, 0.08%)</title><rect x="90.2" y="1235.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.2" y="1246.0"></text>
</g>
<g>
<title>touch_atime (8 samples, 0.02%)</title><rect x="90.8" y="1219.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.8" y="1230.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.03%)</title><rect x="91.2" y="1267.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.2" y="1278.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.03%)</title><rect x="91.2" y="1251.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.2" y="1262.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.02%)</title><rect x="91.2" y="1235.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.2" y="1246.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.02%)</title><rect x="91.2" y="1219.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.2" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (29 samples, 0.09%)</title><rect x="91.7" y="1395.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.7" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.05%)</title><rect x="91.7" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (15 samples, 0.05%)</title><rect x="91.8" y="1363.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.8" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (15 samples, 0.05%)</title><rect x="91.8" y="1347.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.8" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (8 samples, 0.02%)</title><rect x="92.5" y="1379.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.5" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (395 samples, 1.20%)</title><rect x="92.8" y="1411.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.8" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (14 samples, 0.04%)</title><rect x="93.4" y="1395.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.4" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.04%)</title><rect x="93.4" y="1379.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (356 samples, 1.08%)</title><rect x="94.1" y="1395.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.1" y="1406.0"></text>
</g>
<g>
<title>epoll_ctl (343 samples, 1.04%)</title><rect x="94.5" y="1379.0" width="12.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="97.5" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (307 samples, 0.93%)</title><rect x="95.7" y="1363.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.7" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (306 samples, 0.93%)</title><rect x="95.7" y="1347.0" width="11.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.7" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_ctl (286 samples, 0.87%)</title><rect x="96.4" y="1331.0" width="10.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.4" y="1342.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.05%)</title><rect x="99.9" y="1315.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="102.9" y="1326.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.05%)</title><rect x="99.9" y="1299.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.9" y="1310.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.05%)</title><rect x="99.9" y="1283.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="102.9" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (42 samples, 0.13%)</title><rect x="100.8" y="1315.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="103.8" y="1326.0"></text>
</g>
<g>
<title>sock_poll (41 samples, 0.12%)</title><rect x="100.8" y="1299.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.8" y="1310.0"></text>
</g>
<g>
<title>tcp_poll (29 samples, 0.09%)</title><rect x="101.2" y="1283.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.2" y="1294.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (22 samples, 0.07%)</title><rect x="101.4" y="1267.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="104.4" y="1278.0"></text>
</g>
<g>
<title>add_wait_queue (10 samples, 0.03%)</title><rect x="101.4" y="1251.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.4" y="1262.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.03%)</title><rect x="101.4" y="1235.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.4" y="1246.0"></text>
</g>
<g>
<title>kmem_cache_alloc (11 samples, 0.03%)</title><rect x="101.8" y="1251.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="104.8" y="1262.0"></text>
</g>
<g>
<title>ep_remove (58 samples, 0.18%)</title><rect x="102.3" y="1315.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.3" y="1326.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (37 samples, 0.11%)</title><rect x="102.9" y="1299.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.9" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_free (20 samples, 0.06%)</title><rect x="103.3" y="1283.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.3" y="1294.0"></text>
</g>
<g>
<title>kmem_cache_alloc (46 samples, 0.14%)</title><rect x="104.6" y="1315.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="107.6" y="1326.0"></text>
</g>
<g>
<title>__slab_alloc (9 samples, 0.03%)</title><rect x="105.0" y="1299.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.0" y="1310.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (23 samples, 0.07%)</title><rect x="105.3" y="1299.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="108.3" y="1310.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (21 samples, 0.06%)</title><rect x="105.4" y="1283.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="108.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (105 samples, 0.32%)</title><rect x="107.2" y="1411.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.2" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (9 samples, 0.03%)</title><rect x="107.9" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.9" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (16 samples, 0.05%)</title><rect x="108.6" y="1395.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.6" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (10 samples, 0.03%)</title><rect x="108.8" y="1379.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.8" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (10 samples, 0.03%)</title><rect x="108.8" y="1363.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="111.8" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="108.8" y="1347.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="111.8" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.03%)</title><rect x="108.8" y="1331.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.8" y="1342.0"></text>
</g>
<g>
<title>sys_epoll_ctl (9 samples, 0.03%)</title><rect x="108.8" y="1315.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.8" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (47 samples, 0.14%)</title><rect x="109.3" y="1395.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.3" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (45 samples, 0.14%)</title><rect x="109.4" y="1379.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (45 samples, 0.14%)</title><rect x="109.4" y="1363.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.4" y="1374.0"></text>
</g>
<g>
<title>close (45 samples, 0.14%)</title><rect x="109.4" y="1347.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="112.4" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.14%)</title><rect x="109.4" y="1331.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.4" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.14%)</title><rect x="109.4" y="1315.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.4" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (41 samples, 0.12%)</title><rect x="109.4" y="1299.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.4" y="1310.0"></text>
</g>
<g>
<title>task_work_run (41 samples, 0.12%)</title><rect x="109.4" y="1283.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.4" y="1294.0"></text>
</g>
<g>
<title>____fput (40 samples, 0.12%)</title><rect x="109.4" y="1267.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.4" y="1278.0"></text>
</g>
<g>
<title>__fput (38 samples, 0.12%)</title><rect x="109.4" y="1251.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.4" y="1262.0"></text>
</g>
<g>
<title>dput (12 samples, 0.04%)</title><rect x="109.5" y="1235.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.5" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (11 samples, 0.03%)</title><rect x="109.5" y="1219.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.5" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (9 samples, 0.03%)</title><rect x="109.5" y="1203.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.5" y="1214.0"></text>
</g>
<g>
<title>dentry_unlink_inode (7 samples, 0.02%)</title><rect x="109.6" y="1187.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.6" y="1198.0"></text>
</g>
<g>
<title>sock_close (23 samples, 0.07%)</title><rect x="110.0" y="1235.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="113.0" y="1246.0"></text>
</g>
<g>
<title>__sock_release (23 samples, 0.07%)</title><rect x="110.0" y="1219.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.0" y="1230.0"></text>
</g>
<g>
<title>inet6_release (20 samples, 0.06%)</title><rect x="110.1" y="1203.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.1" y="1214.0"></text>
</g>
<g>
<title>inet_release (20 samples, 0.06%)</title><rect x="110.1" y="1187.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.1" y="1198.0"></text>
</g>
<g>
<title>tcp_close (20 samples, 0.06%)</title><rect x="110.1" y="1171.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.1" y="1182.0"></text>
</g>
<g>
<title>tcp_disconnect (11 samples, 0.03%)</title><rect x="110.4" y="1155.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.4" y="1166.0"></text>
</g>
<g>
<title>tcp_send_active_reset (8 samples, 0.02%)</title><rect x="110.4" y="1139.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="113.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (108 samples, 0.33%)</title><rect x="111.2" y="1459.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.2" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (106 samples, 0.32%)</title><rect x="111.3" y="1443.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.3" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (67 samples, 0.20%)</title><rect x="111.6" y="1427.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.6" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (51 samples, 0.15%)</title><rect x="112.1" y="1411.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.1" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (51 samples, 0.15%)</title><rect x="112.1" y="1395.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (9 samples, 0.03%)</title><rect x="114.0" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.0" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.keySet (20 samples, 0.06%)</title><rect x="114.3" y="1427.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.3" y="1438.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (7 samples, 0.02%)</title><rect x="115.1" y="1491.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.1" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (124 samples, 0.38%)</title><rect x="115.3" y="1507.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.3" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (30 samples, 0.09%)</title><rect x="115.6" y="1491.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (9 samples, 0.03%)</title><rect x="115.6" y="1475.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.03%)</title><rect x="115.6" y="1459.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.6" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (9 samples, 0.03%)</title><rect x="115.6" y="1443.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (9 samples, 0.03%)</title><rect x="115.6" y="1427.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.03%)</title><rect x="115.6" y="1411.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.03%)</title><rect x="115.6" y="1395.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.03%)</title><rect x="115.6" y="1379.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.03%)</title><rect x="115.6" y="1363.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.6" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.03%)</title><rect x="115.6" y="1347.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.6" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.03%)</title><rect x="115.6" y="1331.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.03%)</title><rect x="115.6" y="1315.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.6" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.03%)</title><rect x="115.6" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.03%)</title><rect x="115.6" y="1283.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.03%)</title><rect x="115.6" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.03%)</title><rect x="115.6" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (9 samples, 0.03%)</title><rect x="115.6" y="1235.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.03%)</title><rect x="115.6" y="1219.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.03%)</title><rect x="115.6" y="1203.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.03%)</title><rect x="115.6" y="1187.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.6" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.03%)</title><rect x="115.6" y="1171.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="118.6" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="115.6" y="1155.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.6" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.03%)</title><rect x="115.6" y="1139.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.6" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (20 samples, 0.06%)</title><rect x="116.0" y="1475.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.0" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (17 samples, 0.05%)</title><rect x="116.1" y="1459.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (14 samples, 0.04%)</title><rect x="116.2" y="1443.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (14 samples, 0.04%)</title><rect x="116.2" y="1427.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.2" y="1438.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$6.tryRun (32 samples, 0.10%)</title><rect x="116.7" y="1491.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.7" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (23 samples, 0.07%)</title><rect x="117.0" y="1475.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.0" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.channel (9 samples, 0.03%)</title><rect x="117.3" y="1459.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.3" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (37 samples, 0.11%)</title><rect x="117.8" y="1491.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.8" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$runThunk (8 samples, 0.02%)</title><rect x="117.8" y="1475.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.8" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (8 samples, 0.02%)</title><rect x="117.8" y="1459.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.8" y="1470.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (28 samples, 0.08%)</title><rect x="118.1" y="1475.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.1" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (27 samples, 0.08%)</title><rect x="118.2" y="1459.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.2" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$673/156426488.apply$mcV$sp (10 samples, 0.03%)</title><rect x="118.2" y="1443.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.2" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$1 (10 samples, 0.03%)</title><rect x="118.2" y="1427.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.2" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (9 samples, 0.03%)</title><rect x="118.2" y="1411.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.2" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (9 samples, 0.03%)</title><rect x="118.2" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.2" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.02%)</title><rect x="118.2" y="1379.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.02%)</title><rect x="118.2" y="1363.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.2" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$674/536771298.apply$mcV$sp (17 samples, 0.05%)</title><rect x="118.5" y="1443.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.5" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (17 samples, 0.05%)</title><rect x="118.5" y="1427.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.5" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (17 samples, 0.05%)</title><rect x="118.5" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.5" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (16 samples, 0.05%)</title><rect x="118.6" y="1395.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.6" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (14 samples, 0.04%)</title><rect x="118.6" y="1379.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.6" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (8 samples, 0.02%)</title><rect x="118.7" y="1363.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (7 samples, 0.02%)</title><rect x="118.7" y="1347.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (18 samples, 0.05%)</title><rect x="119.1" y="1491.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.1" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1300/465514180.apply$mcV$sp (16 samples, 0.05%)</title><rect x="119.2" y="1475.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.2" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (16 samples, 0.05%)</title><rect x="119.2" y="1459.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (15 samples, 0.05%)</title><rect x="119.2" y="1443.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (15 samples, 0.05%)</title><rect x="119.2" y="1427.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (15 samples, 0.05%)</title><rect x="119.2" y="1411.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (15 samples, 0.05%)</title><rect x="119.2" y="1395.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (15 samples, 0.05%)</title><rect x="119.2" y="1379.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (15 samples, 0.05%)</title><rect x="119.2" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (15 samples, 0.05%)</title><rect x="119.2" y="1347.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.2" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (15 samples, 0.05%)</title><rect x="119.2" y="1331.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.2" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (13 samples, 0.04%)</title><rect x="119.2" y="1315.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.04%)</title><rect x="119.2" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.04%)</title><rect x="119.2" y="1283.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.04%)</title><rect x="119.2" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.04%)</title><rect x="119.2" y="1251.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.04%)</title><rect x="119.2" y="1235.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.04%)</title><rect x="119.2" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (12 samples, 0.04%)</title><rect x="119.2" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.04%)</title><rect x="119.2" y="1187.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.04%)</title><rect x="119.2" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.04%)</title><rect x="119.2" y="1155.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.2" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.03%)</title><rect x="119.3" y="1139.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="122.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="119.3" y="1123.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.3" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.03%)</title><rect x="119.3" y="1107.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="122.3" y="1118.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.03%)</title><rect x="119.3" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="122.3" y="1102.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.03%)</title><rect x="119.3" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.3" y="1086.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.03%)</title><rect x="119.3" y="1059.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.3" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.03%)</title><rect x="119.3" y="1043.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="122.3" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.03%)</title><rect x="119.3" y="1027.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.3" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.03%)</title><rect x="119.3" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.3" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1258/1082254429.run (3,676 samples, 11.13%)</title><rect x="120.0" y="1555.0" width="131.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="1566.0">com/vrg/rapid/Me..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (3,673 samples, 11.12%)</title><rect x="120.1" y="1539.0" width="131.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.1" y="1550.0">com/vrg/rapid/Me..</text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (168 samples, 0.51%)</title><rect x="120.3" y="1523.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.3" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (168 samples, 0.51%)</title><rect x="120.3" y="1507.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.3" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (168 samples, 0.51%)</title><rect x="120.3" y="1491.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.3" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (163 samples, 0.49%)</title><rect x="120.4" y="1475.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (163 samples, 0.49%)</title><rect x="120.4" y="1459.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.4" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (163 samples, 0.49%)</title><rect x="120.4" y="1443.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (163 samples, 0.49%)</title><rect x="120.4" y="1427.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.4" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (157 samples, 0.48%)</title><rect x="120.5" y="1411.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.5" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (157 samples, 0.48%)</title><rect x="120.5" y="1395.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.5" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (156 samples, 0.47%)</title><rect x="120.5" y="1379.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.5" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (156 samples, 0.47%)</title><rect x="120.5" y="1363.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.5" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (156 samples, 0.47%)</title><rect x="120.5" y="1347.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (156 samples, 0.47%)</title><rect x="120.5" y="1331.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (156 samples, 0.47%)</title><rect x="120.5" y="1315.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (155 samples, 0.47%)</title><rect x="120.6" y="1299.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (149 samples, 0.45%)</title><rect x="120.7" y="1283.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (142 samples, 0.43%)</title><rect x="120.9" y="1267.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (140 samples, 0.42%)</title><rect x="121.0" y="1251.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (140 samples, 0.42%)</title><rect x="121.0" y="1235.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.0" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.04%)</title><rect x="121.0" y="1219.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="124.0" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (121 samples, 0.37%)</title><rect x="121.6" y="1219.0" width="4.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="124.6" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 0.33%)</title><rect x="122.1" y="1203.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.1" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 0.32%)</title><rect x="122.1" y="1187.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="125.1" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.03%)</title><rect x="122.3" y="1171.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.3" y="1182.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.03%)</title><rect x="122.3" y="1155.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.3" y="1166.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.03%)</title><rect x="122.3" y="1139.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="125.3" y="1150.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.03%)</title><rect x="122.3" y="1123.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="125.3" y="1134.0"></text>
</g>
<g>
<title>sys_futex (92 samples, 0.28%)</title><rect x="122.6" y="1171.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.6" y="1182.0"></text>
</g>
<g>
<title>do_futex (91 samples, 0.28%)</title><rect x="122.6" y="1155.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="125.6" y="1166.0"></text>
</g>
<g>
<title>futex_wake (88 samples, 0.27%)</title><rect x="122.7" y="1139.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.7" y="1150.0"></text>
</g>
<g>
<title>wake_up_q (84 samples, 0.25%)</title><rect x="122.8" y="1123.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="125.8" y="1134.0"></text>
</g>
<g>
<title>try_to_wake_up (84 samples, 0.25%)</title><rect x="122.8" y="1107.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.8" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (84 samples, 0.25%)</title><rect x="122.8" y="1091.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.8" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (51 samples, 0.15%)</title><rect x="126.3" y="1523.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.3" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (51 samples, 0.15%)</title><rect x="126.3" y="1507.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.3" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (51 samples, 0.15%)</title><rect x="126.3" y="1491.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.3" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (51 samples, 0.15%)</title><rect x="126.3" y="1475.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.3" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (51 samples, 0.15%)</title><rect x="126.3" y="1459.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.3" y="1470.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (43 samples, 0.13%)</title><rect x="126.6" y="1443.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.6" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (39 samples, 0.12%)</title><rect x="126.7" y="1427.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.7" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (39 samples, 0.12%)</title><rect x="126.7" y="1411.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.7" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (39 samples, 0.12%)</title><rect x="126.7" y="1395.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.7" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.writeTo (37 samples, 0.11%)</title><rect x="126.8" y="1379.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.8" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (29 samples, 0.09%)</title><rect x="127.0" y="1363.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.0" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (28 samples, 0.08%)</title><rect x="127.0" y="1347.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.0" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.writeTo (26 samples, 0.08%)</title><rect x="127.0" y="1331.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.0" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.writeString (11 samples, 0.03%)</title><rect x="127.4" y="1315.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.4" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeBytes (11 samples, 0.03%)</title><rect x="127.4" y="1299.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.4" y="1310.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeBytesNoTag (11 samples, 0.03%)</title><rect x="127.4" y="1283.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.4" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.writeTo (7 samples, 0.02%)</title><rect x="127.5" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.5" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getCurrentConfigurationId (18 samples, 0.05%)</title><rect x="128.1" y="1523.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.03%)</title><rect x="128.3" y="1507.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.3" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.03%)</title><rect x="128.3" y="1491.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.3" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.03%)</title><rect x="128.3" y="1475.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.3" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getMembershipSize (12 samples, 0.04%)</title><rect x="128.8" y="1523.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.8" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.02%)</title><rect x="128.8" y="1507.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.8" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.invalidateFailingEdges (2,860 samples, 8.66%)</title><rect x="129.2" y="1523.0" width="102.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.2" y="1534.0">com/vrg/rapi..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.copyOf (124 samples, 0.38%)</title><rect x="130.7" y="1507.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.7" y="1518.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (115 samples, 0.35%)</title><rect x="131.1" y="1491.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.1" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (93 samples, 0.28%)</title><rect x="131.3" y="1475.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.3" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (92 samples, 0.28%)</title><rect x="131.3" y="1459.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.3" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.05%)</title><rect x="134.6" y="1475.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.6" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (16 samples, 0.05%)</title><rect x="134.6" y="1459.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.6" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (16 samples, 0.05%)</title><rect x="134.6" y="1443.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.6" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (16 samples, 0.05%)</title><rect x="134.6" y="1427.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.6" y="1438.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.iterator (14 samples, 0.04%)</title><rect x="135.2" y="1507.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.2" y="1518.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.iterator (14 samples, 0.04%)</title><rect x="135.2" y="1491.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.2" y="1502.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.listIterator (14 samples, 0.04%)</title><rect x="135.2" y="1475.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.2" y="1486.0"></text>
</g>
<g>
<title>com/google/common/collect/RegularImmutableList.listIterator (14 samples, 0.04%)</title><rect x="135.2" y="1459.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.2" y="1470.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.forArray (14 samples, 0.04%)</title><rect x="135.2" y="1443.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.2" y="1454.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$10.&lt;init&gt; (8 samples, 0.02%)</title><rect x="135.4" y="1427.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.4" y="1438.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIndexedListIterator.&lt;init&gt; (8 samples, 0.02%)</title><rect x="135.4" y="1411.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.4" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (1,340 samples, 4.06%)</title><rect x="135.7" y="1507.0" width="47.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.7" y="1518.0">com/..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (1,333 samples, 4.04%)</title><rect x="135.7" y="1491.0" width="47.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.7" y="1502.0">com/..</text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.03%)</title><rect x="136.2" y="1475.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.2" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (1,301 samples, 3.94%)</title><rect x="136.8" y="1475.0" width="46.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.8" y="1486.0">java..</text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (1,299 samples, 3.93%)</title><rect x="136.9" y="1459.0" width="46.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.9" y="1470.0">java..</text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (1,295 samples, 3.92%)</title><rect x="136.9" y="1443.0" width="46.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.9" y="1454.0">java..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (20 samples, 0.06%)</title><rect x="138.0" y="1427.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.0" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1,245 samples, 3.77%)</title><rect x="138.7" y="1427.0" width="44.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.7" y="1438.0">java..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1,133 samples, 3.43%)</title><rect x="142.6" y="1411.0" width="40.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.6" y="1422.0">com..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1,051 samples, 3.18%)</title><rect x="145.4" y="1395.0" width="37.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.4" y="1406.0">com..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (41 samples, 0.12%)</title><rect x="148.1" y="1379.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/Long.compare (26 samples, 0.08%)</title><rect x="149.5" y="1379.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.08%)</title><rect x="150.5" y="1379.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.08%)</title><rect x="150.5" y="1363.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.5" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1224/129329699.get$Lambda (13 samples, 0.04%)</title><rect x="150.5" y="1347.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.5" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1225/992177421.get$Lambda (12 samples, 0.04%)</title><rect x="151.0" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.0" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (879 samples, 2.66%)</title><rect x="151.4" y="1379.0" width="31.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.4" y="1390.0">ja..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (157 samples, 0.48%)</title><rect x="168.9" y="1363.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (33 samples, 0.10%)</title><rect x="171.3" y="1347.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.3" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (16 samples, 0.05%)</title><rect x="171.8" y="1331.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (51 samples, 0.15%)</title><rect x="172.6" y="1347.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.6" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (43 samples, 0.13%)</title><rect x="172.9" y="1331.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.9" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (43 samples, 0.13%)</title><rect x="172.9" y="1315.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.9" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (23 samples, 0.07%)</title><rect x="174.5" y="1363.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.5" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (185 samples, 0.56%)</title><rect x="175.3" y="1363.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.3" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (154 samples, 0.47%)</title><rect x="176.4" y="1347.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.4" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.hashCode (9 samples, 0.03%)</title><rect x="176.8" y="1331.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (134 samples, 0.41%)</title><rect x="177.1" y="1331.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.1" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (128 samples, 0.39%)</title><rect x="177.3" y="1315.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.3" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (128 samples, 0.39%)</title><rect x="177.3" y="1299.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.3" y="1310.0"></text>
</g>
<g>
<title>ret_from_intr (9 samples, 0.03%)</title><rect x="182.0" y="1363.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="185.0" y="1374.0"></text>
</g>
<g>
<title>do_IRQ (9 samples, 0.03%)</title><rect x="182.0" y="1347.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="185.0" y="1358.0"></text>
</g>
<g>
<title>irq_exit (9 samples, 0.03%)</title><rect x="182.0" y="1331.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.0" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 0.03%)</title><rect x="182.0" y="1315.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="185.0" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 0.02%)</title><rect x="182.0" y="1299.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.0" y="1310.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (8 samples, 0.02%)</title><rect x="182.0" y="1283.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.0" y="1294.0"></text>
</g>
<g>
<title>vtable stub (11 samples, 0.03%)</title><rect x="182.4" y="1363.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="185.4" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getObserversOf (276 samples, 0.84%)</title><rect x="183.5" y="1507.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.5" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (75 samples, 0.23%)</title><rect x="183.8" y="1491.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.8" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (46 samples, 0.14%)</title><rect x="183.8" y="1475.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.8" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (43 samples, 0.13%)</title><rect x="183.8" y="1459.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.8" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (32 samples, 0.10%)</title><rect x="183.9" y="1443.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.9" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (24 samples, 0.07%)</title><rect x="184.1" y="1427.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.1" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (24 samples, 0.07%)</title><rect x="184.1" y="1411.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.1" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.toStringInternal (19 samples, 0.06%)</title><rect x="184.1" y="1395.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.05%)</title><rect x="184.3" y="1379.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (15 samples, 0.05%)</title><rect x="184.3" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (15 samples, 0.05%)</title><rect x="184.3" y="1347.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.02%)</title><rect x="184.5" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.02%)</title><rect x="185.1" y="1443.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.coder (7 samples, 0.02%)</title><rect x="185.1" y="1427.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.1" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (29 samples, 0.09%)</title><rect x="185.4" y="1475.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.4" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.hashCode (28 samples, 0.08%)</title><rect x="185.4" y="1459.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.4" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (24 samples, 0.07%)</title><rect x="185.5" y="1443.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.5" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (190 samples, 0.58%)</title><rect x="186.5" y="1491.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.5" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (190 samples, 0.58%)</title><rect x="186.5" y="1475.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.5" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (190 samples, 0.58%)</title><rect x="186.5" y="1459.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.5" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (190 samples, 0.58%)</title><rect x="186.5" y="1443.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.5" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (183 samples, 0.55%)</title><rect x="186.8" y="1427.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.8" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (180 samples, 0.54%)</title><rect x="186.9" y="1411.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.9" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (11 samples, 0.03%)</title><rect x="187.1" y="1395.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="187.6" y="1395.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="187.6" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.6" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (151 samples, 0.46%)</title><rect x="187.9" y="1395.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.9" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (61 samples, 0.18%)</title><rect x="189.8" y="1379.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.8" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (32 samples, 0.10%)</title><rect x="190.1" y="1363.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.1" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (29 samples, 0.09%)</title><rect x="190.2" y="1347.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.2" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (14 samples, 0.04%)</title><rect x="191.4" y="1363.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.4" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (9 samples, 0.03%)</title><rect x="191.6" y="1347.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.6" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (9 samples, 0.03%)</title><rect x="191.6" y="1331.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.6" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (11 samples, 0.03%)</title><rect x="192.0" y="1379.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.0" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (21 samples, 0.06%)</title><rect x="192.4" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (16 samples, 0.05%)</title><rect x="192.5" y="1363.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.5" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (9 samples, 0.03%)</title><rect x="192.8" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.8" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (7 samples, 0.02%)</title><rect x="192.9" y="1331.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.9" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (7 samples, 0.02%)</title><rect x="192.9" y="1315.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.9" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isHostPresent (863 samples, 2.61%)</title><rect x="193.4" y="1507.0" width="30.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.4" y="1518.0">co..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (8 samples, 0.02%)</title><rect x="193.5" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.5" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (844 samples, 2.56%)</title><rect x="193.8" y="1491.0" width="30.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.8" y="1502.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.containsKey (844 samples, 2.56%)</title><rect x="193.8" y="1475.0" width="30.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.8" y="1486.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (844 samples, 2.56%)</title><rect x="193.8" y="1459.0" width="30.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.8" y="1470.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (843 samples, 2.55%)</title><rect x="193.8" y="1443.0" width="30.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.8" y="1454.0">ja..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (804 samples, 2.43%)</title><rect x="195.1" y="1427.0" width="28.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.1" y="1438.0">co..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (768 samples, 2.32%)</title><rect x="196.4" y="1411.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.4" y="1422.0">c..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (23 samples, 0.07%)</title><rect x="197.4" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/Long.compare (10 samples, 0.03%)</title><rect x="198.2" y="1395.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="198.6" y="1395.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="198.6" y="1379.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.6" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1224/129329699.get$Lambda (7 samples, 0.02%)</title><rect x="198.6" y="1363.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.6" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1225/992177421.get$Lambda (9 samples, 0.03%)</title><rect x="198.8" y="1363.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.8" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (691 samples, 2.09%)</title><rect x="199.1" y="1395.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.1" y="1406.0">j..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (200 samples, 0.61%)</title><rect x="209.0" y="1379.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.0" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (103 samples, 0.31%)</title><rect x="209.9" y="1363.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (81 samples, 0.25%)</title><rect x="210.1" y="1347.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.1" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.size (12 samples, 0.04%)</title><rect x="213.0" y="1347.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.0" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (67 samples, 0.20%)</title><rect x="213.7" y="1363.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.7" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (63 samples, 0.19%)</title><rect x="213.8" y="1347.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.8" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (58 samples, 0.18%)</title><rect x="213.8" y="1331.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (10 samples, 0.03%)</title><rect x="216.2" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (186 samples, 0.56%)</title><rect x="216.5" y="1379.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.5" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (168 samples, 0.51%)</title><rect x="217.2" y="1363.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.2" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.hashCode (18 samples, 0.05%)</title><rect x="217.7" y="1347.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.7" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.partialHash (12 samples, 0.04%)</title><rect x="217.7" y="1331.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.7" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/Internal.partialHash (12 samples, 0.04%)</title><rect x="217.7" y="1315.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.7" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (135 samples, 0.41%)</title><rect x="218.3" y="1347.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.3" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (130 samples, 0.39%)</title><rect x="218.5" y="1331.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.5" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (117 samples, 0.35%)</title><rect x="218.6" y="1315.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.03%)</title><rect x="222.8" y="1315.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.03%)</title><rect x="222.8" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.03%)</title><rect x="222.8" y="1283.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.8" y="1294.0"></text>
</g>
<g>
<title>vtable stub (12 samples, 0.04%)</title><rect x="223.4" y="1379.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="226.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (45 samples, 0.14%)</title><rect x="224.2" y="1507.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.2" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (37 samples, 0.11%)</title><rect x="224.3" y="1491.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.3" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (9 samples, 0.03%)</title><rect x="225.0" y="1475.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.0" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (7 samples, 0.02%)</title><rect x="225.6" y="1491.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.6" y="1502.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (141 samples, 0.43%)</title><rect x="226.3" y="1507.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.3" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (140 samples, 0.42%)</title><rect x="226.4" y="1491.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.4" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (38 samples, 0.12%)</title><rect x="226.4" y="1475.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.4" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (35 samples, 0.11%)</title><rect x="226.5" y="1459.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.5" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (35 samples, 0.11%)</title><rect x="226.5" y="1443.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.5" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (22 samples, 0.07%)</title><rect x="226.9" y="1427.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.9" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (21 samples, 0.06%)</title><rect x="227.0" y="1411.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.0" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.size (16 samples, 0.05%)</title><rect x="227.0" y="1395.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.0" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (102 samples, 0.31%)</title><rect x="227.7" y="1475.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.7" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.hashCode (101 samples, 0.31%)</title><rect x="227.8" y="1459.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.8" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (76 samples, 0.23%)</title><rect x="228.5" y="1443.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.5" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (65 samples, 0.20%)</title><rect x="228.9" y="1427.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.9" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (65 samples, 0.20%)</title><rect x="228.9" y="1411.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.9" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.size (37 samples, 0.11%)</title><rect x="229.7" y="1395.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.7" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (23 samples, 0.07%)</title><rect x="231.4" y="1523.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.4" y="1534.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (12 samples, 0.04%)</title><rect x="231.6" y="1507.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.6" y="1518.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="231.7" y="1491.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="234.7" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (515 samples, 1.56%)</title><rect x="232.3" y="1523.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.3" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (513 samples, 1.55%)</title><rect x="232.3" y="1507.0" width="18.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.3" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (9 samples, 0.03%)</title><rect x="232.7" y="1491.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.7" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (489 samples, 1.48%)</title><rect x="233.0" y="1491.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.0" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (488 samples, 1.48%)</title><rect x="233.0" y="1475.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.0" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (472 samples, 1.43%)</title><rect x="233.0" y="1459.0" width="16.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.0" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (441 samples, 1.34%)</title><rect x="233.1" y="1443.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.1" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (435 samples, 1.32%)</title><rect x="233.3" y="1427.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.3" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1259/566369019.test (352 samples, 1.07%)</title><rect x="233.4" y="1411.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.4" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$6 (352 samples, 1.07%)</title><rect x="233.4" y="1395.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.4" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.filterAlertMessages (351 samples, 1.06%)</title><rect x="233.4" y="1379.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isHostPresent (284 samples, 0.86%)</title><rect x="233.8" y="1363.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.8" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (278 samples, 0.84%)</title><rect x="233.9" y="1347.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.9" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (278 samples, 0.84%)</title><rect x="233.9" y="1331.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.9" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (276 samples, 0.84%)</title><rect x="234.0" y="1315.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (275 samples, 0.83%)</title><rect x="234.0" y="1299.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.0" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (256 samples, 0.77%)</title><rect x="234.7" y="1283.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.7" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (232 samples, 0.70%)</title><rect x="235.5" y="1267.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.5" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (218 samples, 0.66%)</title><rect x="236.0" y="1251.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.0" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (55 samples, 0.17%)</title><rect x="239.4" y="1235.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.4" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (17 samples, 0.05%)</title><rect x="239.9" y="1219.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.9" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (14 samples, 0.04%)</title><rect x="239.9" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.9" y="1214.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (23 samples, 0.07%)</title><rect x="240.5" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.5" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (23 samples, 0.07%)</title><rect x="240.5" y="1203.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.5" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (21 samples, 0.06%)</title><rect x="240.5" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (7 samples, 0.02%)</title><rect x="241.3" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.3" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (60 samples, 0.18%)</title><rect x="241.6" y="1235.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.6" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (57 samples, 0.17%)</title><rect x="241.7" y="1219.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.7" y="1230.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (52 samples, 0.16%)</title><rect x="241.8" y="1203.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.8" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (52 samples, 0.16%)</title><rect x="241.8" y="1187.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.8" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (44 samples, 0.13%)</title><rect x="241.8" y="1171.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.02%)</title><rect x="243.4" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.02%)</title><rect x="243.4" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.02%)</title><rect x="243.4" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.4" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.loggable (10 samples, 0.03%)</title><rect x="244.0" y="1363.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.0" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$Loggable.&lt;init&gt; (10 samples, 0.03%)</title><rect x="244.0" y="1347.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.0" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.getEdgeStatus (10 samples, 0.03%)</title><rect x="244.4" y="1363.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.4" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/EdgeStatus.valueOf (9 samples, 0.03%)</title><rect x="244.4" y="1347.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.4" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.put (31 samples, 0.09%)</title><rect x="244.8" y="1363.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.8" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (16 samples, 0.05%)</title><rect x="244.8" y="1347.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.8" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.hashCode (13 samples, 0.04%)</title><rect x="244.9" y="1331.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.9" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (8 samples, 0.02%)</title><rect x="245.1" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.1" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (7 samples, 0.02%)</title><rect x="245.1" y="1299.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.1" y="1310.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (7 samples, 0.02%)</title><rect x="245.1" y="1283.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.1" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.toStringInternal (7 samples, 0.02%)</title><rect x="245.1" y="1267.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.02%)</title><rect x="245.1" y="1251.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (7 samples, 0.02%)</title><rect x="245.1" y="1235.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (7 samples, 0.02%)</title><rect x="245.1" y="1219.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.1" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (15 samples, 0.05%)</title><rect x="245.4" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.4" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (82 samples, 0.25%)</title><rect x="245.9" y="1411.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.9" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1260/1364553770.apply (70 samples, 0.21%)</title><rect x="245.9" y="1395.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.9" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (69 samples, 0.21%)</title><rect x="246.0" y="1379.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.0" y="1390.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (64 samples, 0.19%)</title><rect x="246.2" y="1363.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.2" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (64 samples, 0.19%)</title><rect x="246.2" y="1347.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.2" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector$$Lambda$1263/1838421323.accept (62 samples, 0.19%)</title><rect x="246.2" y="1331.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.2" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.lambda$aggregateForProposal$0 (62 samples, 0.19%)</title><rect x="246.2" y="1315.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.2" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (57 samples, 0.17%)</title><rect x="246.2" y="1299.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.2" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (31 samples, 0.09%)</title><rect x="246.8" y="1283.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.8" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.02%)</title><rect x="247.6" y="1267.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.6" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.hashCode (7 samples, 0.02%)</title><rect x="247.6" y="1251.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.6" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (7 samples, 0.02%)</title><rect x="247.6" y="1235.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.6" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (8 samples, 0.02%)</title><rect x="247.9" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.9" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.02%)</title><rect x="247.9" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.9" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.accept (12 samples, 0.04%)</title><rect x="248.4" y="1395.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.4" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (8 samples, 0.02%)</title><rect x="248.9" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.9" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (8 samples, 0.02%)</title><rect x="248.9" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.9" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.begin (8 samples, 0.02%)</title><rect x="248.9" y="1411.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.9" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$888/1898751355.get (7 samples, 0.02%)</title><rect x="248.9" y="1395.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.9" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (16 samples, 0.05%)</title><rect x="249.2" y="1443.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.2" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (15 samples, 0.05%)</title><rect x="249.3" y="1427.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.3" y="1438.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="249.3" y="1411.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="252.3" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (8 samples, 0.02%)</title><rect x="249.5" y="1411.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.5" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.05%)</title><rect x="249.8" y="1459.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.8" y="1470.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (13 samples, 0.04%)</title><rect x="250.9" y="1523.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.9" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (13 samples, 0.04%)</title><rect x="250.9" y="1507.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.9" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (13 samples, 0.04%)</title><rect x="250.9" y="1491.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.9" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (13 samples, 0.04%)</title><rect x="250.9" y="1475.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.9" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (13 samples, 0.04%)</title><rect x="250.9" y="1459.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.9" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1307/726260186.run (56 samples, 0.17%)</title><rect x="251.5" y="1555.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.5" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (55 samples, 0.17%)</title><rect x="251.5" y="1539.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.5" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (51 samples, 0.15%)</title><rect x="251.7" y="1523.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.7" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (48 samples, 0.15%)</title><rect x="251.7" y="1507.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.7" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$1230/632480627.accept (18 samples, 0.05%)</title><rect x="251.7" y="1491.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.7" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (18 samples, 0.05%)</title><rect x="251.7" y="1475.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.7" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1229/1437558168.accept (16 samples, 0.05%)</title><rect x="251.7" y="1459.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.7" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (16 samples, 0.05%)</title><rect x="251.7" y="1443.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.7" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (13 samples, 0.04%)</title><rect x="251.8" y="1427.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.8" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (11 samples, 0.03%)</title><rect x="251.8" y="1411.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.8" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (9 samples, 0.03%)</title><rect x="251.8" y="1395.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.8" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (9 samples, 0.03%)</title><rect x="251.8" y="1379.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.8" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (9 samples, 0.03%)</title><rect x="251.8" y="1363.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.8" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (7 samples, 0.02%)</title><rect x="251.9" y="1347.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (7 samples, 0.02%)</title><rect x="251.9" y="1331.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.9" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (7 samples, 0.02%)</title><rect x="251.9" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.9" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (28 samples, 0.08%)</title><rect x="252.3" y="1491.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.3" y="1502.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.equals (17 samples, 0.05%)</title><rect x="252.3" y="1475.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.3" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.equals (17 samples, 0.05%)</title><rect x="252.3" y="1459.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.3" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.equalsRange (17 samples, 0.05%)</title><rect x="252.3" y="1443.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.3" y="1454.0"></text>
</g>
<g>
<title>java/util/Objects.equals (9 samples, 0.03%)</title><rect x="252.6" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.6" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.03%)</title><rect x="252.9" y="1475.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.9" y="1486.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.hashCode (11 samples, 0.03%)</title><rect x="252.9" y="1459.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.9" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCode (10 samples, 0.03%)</title><rect x="253.0" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.0" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCodeRange (9 samples, 0.03%)</title><rect x="253.0" y="1427.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.0" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.hashCode (7 samples, 0.02%)</title><rect x="253.1" y="1411.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.03%)</title><rect x="253.6" y="1555.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.02%)</title><rect x="253.7" y="1539.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.7" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (162 samples, 0.49%)</title><rect x="254.0" y="1555.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.0" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (157 samples, 0.48%)</title><rect x="254.1" y="1539.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (156 samples, 0.47%)</title><rect x="254.1" y="1523.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.1" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$AlertBatcher.run (152 samples, 0.46%)</title><rect x="254.2" y="1507.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.2" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (150 samples, 0.45%)</title><rect x="254.3" y="1491.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.3" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (145 samples, 0.44%)</title><rect x="254.4" y="1475.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.4" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (145 samples, 0.44%)</title><rect x="254.4" y="1459.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.4" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequest (16 samples, 0.05%)</title><rect x="254.6" y="1443.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.6" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequestImpl (16 samples, 0.05%)</title><rect x="254.6" y="1427.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.6" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.sharedGateway (10 samples, 0.03%)</title><rect x="254.8" y="1411.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.8" y="1422.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host.toString (8 samples, 0.02%)</title><rect x="254.9" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.9" y="1406.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (8 samples, 0.02%)</title><rect x="254.9" y="1379.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.9" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.encode (8 samples, 0.02%)</title><rect x="254.9" y="1363.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.9" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.rec$3 (8 samples, 0.02%)</title><rect x="254.9" y="1347.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.9" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (78 samples, 0.24%)</title><rect x="255.3" y="1443.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.3" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (78 samples, 0.24%)</title><rect x="255.3" y="1427.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.3" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (76 samples, 0.23%)</title><rect x="255.4" y="1411.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.4" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (72 samples, 0.22%)</title><rect x="255.5" y="1395.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.5" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (69 samples, 0.21%)</title><rect x="255.6" y="1379.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.6" y="1390.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (62 samples, 0.19%)</title><rect x="255.6" y="1363.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.6" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$391/1573750503.apply (60 samples, 0.18%)</title><rect x="255.6" y="1347.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (59 samples, 0.18%)</title><rect x="255.7" y="1331.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.7" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (58 samples, 0.18%)</title><rect x="255.7" y="1315.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (57 samples, 0.17%)</title><rect x="255.7" y="1299.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (50 samples, 0.15%)</title><rect x="255.7" y="1283.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.authority (48 samples, 0.15%)</title><rect x="255.7" y="1267.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (24 samples, 0.07%)</title><rect x="255.7" y="1251.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (19 samples, 0.06%)</title><rect x="255.7" y="1235.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (17 samples, 0.05%)</title><rect x="255.8" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (15 samples, 0.05%)</title><rect x="255.8" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (8 samples, 0.02%)</title><rect x="255.9" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (8 samples, 0.02%)</title><rect x="255.9" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (8 samples, 0.02%)</title><rect x="255.9" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.userinfo (24 samples, 0.07%)</title><rect x="256.6" y="1251.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$6 (20 samples, 0.06%)</title><rect x="256.7" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (7 samples, 0.02%)</title><rect x="256.8" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (7 samples, 0.02%)</title><rect x="256.8" y="1203.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (7 samples, 0.02%)</title><rect x="256.8" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.8" y="1198.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (7 samples, 0.02%)</title><rect x="257.8" y="1363.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.8" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (29 samples, 0.09%)</title><rect x="258.3" y="1443.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.3" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (27 samples, 0.08%)</title><rect x="258.4" y="1427.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.4" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (27 samples, 0.08%)</title><rect x="258.4" y="1411.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.4" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (27 samples, 0.08%)</title><rect x="258.4" y="1395.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.4" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.writeTo (27 samples, 0.08%)</title><rect x="258.4" y="1379.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.4" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (25 samples, 0.08%)</title><rect x="258.4" y="1363.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.4" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (25 samples, 0.08%)</title><rect x="258.4" y="1347.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.4" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.writeTo (23 samples, 0.07%)</title><rect x="258.4" y="1331.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.4" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (20 samples, 0.06%)</title><rect x="258.4" y="1315.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.4" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (19 samples, 0.06%)</title><rect x="258.4" y="1299.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.4" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (10 samples, 0.03%)</title><rect x="258.6" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.6" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (10 samples, 0.03%)</title><rect x="258.6" y="1267.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.6" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (9 samples, 0.03%)</title><rect x="258.7" y="1251.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.7" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (7 samples, 0.02%)</title><rect x="258.7" y="1235.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.7" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (7 samples, 0.02%)</title><rect x="258.7" y="1219.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (8 samples, 0.02%)</title><rect x="259.8" y="1555.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.8" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.04%)</title><rect x="260.1" y="1555.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.03%)</title><rect x="260.1" y="1539.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (7 samples, 0.02%)</title><rect x="260.2" y="1523.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (205 samples, 0.62%)</title><rect x="260.5" y="1555.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="263.5" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (20 samples, 0.06%)</title><rect x="260.9" y="1539.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (18 samples, 0.05%)</title><rect x="260.9" y="1523.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (13 samples, 0.04%)</title><rect x="261.1" y="1507.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.04%)</title><rect x="261.1" y="1491.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.1" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 0.04%)</title><rect x="261.2" y="1475.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="264.2" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="261.3" y="1459.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.3" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.03%)</title><rect x="261.3" y="1443.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.3" y="1454.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.03%)</title><rect x="261.3" y="1427.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="264.3" y="1438.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.03%)</title><rect x="261.3" y="1411.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="264.3" y="1422.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.03%)</title><rect x="261.3" y="1395.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="264.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (149 samples, 0.45%)</title><rect x="261.6" y="1539.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.6" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (141 samples, 0.43%)</title><rect x="261.7" y="1523.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.7" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (16 samples, 0.05%)</title><rect x="261.8" y="1507.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.8" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (119 samples, 0.36%)</title><rect x="262.5" y="1507.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (119 samples, 0.36%)</title><rect x="262.5" y="1491.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.5" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (36 samples, 0.11%)</title><rect x="262.6" y="1475.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="265.6" y="1486.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.04%)</title><rect x="262.7" y="1459.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="265.7" y="1470.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.04%)</title><rect x="263.3" y="1459.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="266.3" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="263.6" y="1443.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="266.6" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.02%)</title><rect x="263.6" y="1427.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="266.6" y="1438.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.24%)</title><rect x="263.9" y="1475.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="266.9" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (75 samples, 0.23%)</title><rect x="263.9" y="1459.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="266.9" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 0.19%)</title><rect x="264.3" y="1443.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="267.3" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 0.19%)</title><rect x="264.3" y="1427.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.3" y="1438.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.18%)</title><rect x="264.5" y="1411.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="267.5" y="1422.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.18%)</title><rect x="264.5" y="1395.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="267.5" y="1406.0"></text>
</g>
<g>
<title>futex_wait (58 samples, 0.18%)</title><rect x="264.5" y="1379.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.5" y="1390.0"></text>
</g>
<g>
<title>futex_wait_queue_me (56 samples, 0.17%)</title><rect x="264.6" y="1363.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="267.6" y="1374.0"></text>
</g>
<g>
<title>schedule (55 samples, 0.17%)</title><rect x="264.6" y="1347.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="267.6" y="1358.0"></text>
</g>
<g>
<title>__schedule (52 samples, 0.16%)</title><rect x="264.7" y="1331.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="267.7" y="1342.0"></text>
</g>
<g>
<title>finish_task_switch (48 samples, 0.15%)</title><rect x="264.8" y="1315.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (22 samples, 0.07%)</title><rect x="266.9" y="1539.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (22 samples, 0.07%)</title><rect x="266.9" y="1523.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (13 samples, 0.04%)</title><rect x="267.1" y="1507.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (11 samples, 0.03%)</title><rect x="267.2" y="1491.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.03%)</title><rect x="267.2" y="1475.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="267.9" y="1603.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.9" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (17,928 samples, 54.27%)</title><rect x="268.2" y="1603.0" width="640.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.2" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (17,928 samples, 54.27%)</title><rect x="268.2" y="1587.0" width="640.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.2" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>gettimeofday (8 samples, 0.02%)</title><rect x="271.6" y="1571.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="274.6" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (15,291 samples, 46.29%)</title><rect x="272.1" y="1571.0" width="546.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.1" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (70 samples, 0.21%)</title><rect x="273.9" y="1555.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.9" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (70 samples, 0.21%)</title><rect x="273.9" y="1539.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.9" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (12 samples, 0.04%)</title><rect x="274.9" y="1523.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.9" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (14 samples, 0.04%)</title><rect x="275.3" y="1523.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.3" y="1534.0"></text>
</g>
<g>
<title>vtable stub (8 samples, 0.02%)</title><rect x="276.1" y="1523.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="279.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (21 samples, 0.06%)</title><rect x="276.4" y="1555.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.4" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (14,964 samples, 45.30%)</title><rect x="277.2" y="1555.0" width="534.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.2" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (132 samples, 0.40%)</title><rect x="277.4" y="1539.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (104 samples, 0.31%)</title><rect x="277.8" y="1523.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (8 samples, 0.02%)</title><rect x="279.9" y="1507.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (37 samples, 0.11%)</title><rect x="280.2" y="1507.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.2" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (11 samples, 0.03%)</title><rect x="281.1" y="1491.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (9 samples, 0.03%)</title><rect x="281.6" y="1523.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (16 samples, 0.05%)</title><rect x="282.1" y="1539.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (14,809 samples, 44.83%)</title><rect x="282.7" y="1539.0" width="529.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.7" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (2,582 samples, 7.82%)</title><rect x="283.1" y="1523.0" width="92.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.1" y="1534.0">akka/dispat..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (2,582 samples, 7.82%)</title><rect x="283.1" y="1507.0" width="92.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.1" y="1518.0">akka/dispat..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (267 samples, 0.81%)</title><rect x="283.2" y="1491.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.2" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (17 samples, 0.05%)</title><rect x="283.6" y="1475.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.6" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (14 samples, 0.04%)</title><rect x="283.7" y="1459.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.7" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$544/1417116871.run (231 samples, 0.70%)</title><rect x="284.4" y="1475.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.4" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (231 samples, 0.70%)</title><rect x="284.4" y="1459.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.4" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (228 samples, 0.69%)</title><rect x="284.5" y="1443.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.5" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (228 samples, 0.69%)</title><rect x="284.5" y="1427.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.5" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized (10 samples, 0.03%)</title><rect x="284.8" y="1411.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.8" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized$lzycompute$1 (10 samples, 0.03%)</title><rect x="284.8" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.8" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (206 samples, 0.62%)</title><rect x="285.1" y="1411.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.onAsyncInput (10 samples, 0.03%)</title><rect x="286.3" y="1395.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.3" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (162 samples, 0.49%)</title><rect x="286.7" y="1395.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (162 samples, 0.49%)</title><rect x="286.7" y="1379.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.7" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (162 samples, 0.49%)</title><rect x="286.7" y="1363.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (122 samples, 0.37%)</title><rect x="286.7" y="1347.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (98 samples, 0.30%)</title><rect x="286.7" y="1331.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (98 samples, 0.30%)</title><rect x="286.7" y="1315.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (98 samples, 0.30%)</title><rect x="286.7" y="1299.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (98 samples, 0.30%)</title><rect x="286.7" y="1283.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (98 samples, 0.30%)</title><rect x="286.7" y="1267.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (98 samples, 0.30%)</title><rect x="286.7" y="1251.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (98 samples, 0.30%)</title><rect x="286.7" y="1235.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.7" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (48 samples, 0.15%)</title><rect x="286.8" y="1219.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (46 samples, 0.14%)</title><rect x="286.8" y="1203.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (46 samples, 0.14%)</title><rect x="286.8" y="1187.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (46 samples, 0.14%)</title><rect x="286.8" y="1171.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (44 samples, 0.13%)</title><rect x="286.8" y="1155.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (44 samples, 0.13%)</title><rect x="286.8" y="1139.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (44 samples, 0.13%)</title><rect x="286.8" y="1123.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (43 samples, 0.13%)</title><rect x="286.9" y="1107.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (42 samples, 0.13%)</title><rect x="286.9" y="1091.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.12%)</title><rect x="287.0" y="1075.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (40 samples, 0.12%)</title><rect x="287.0" y="1059.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.0" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (34 samples, 0.10%)</title><rect x="287.2" y="1043.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="290.2" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.08%)</title><rect x="287.4" y="1027.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="290.4" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.08%)</title><rect x="287.4" y="1011.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.4" y="1022.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.06%)</title><rect x="287.6" y="995.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.06%)</title><rect x="287.6" y="979.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.6" y="990.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.06%)</title><rect x="287.6" y="963.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.6" y="974.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.05%)</title><rect x="287.8" y="947.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.8" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.05%)</title><rect x="287.8" y="931.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="290.8" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.05%)</title><rect x="287.8" y="915.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.8" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (47 samples, 0.14%)</title><rect x="288.6" y="1219.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.messageQueue (16 samples, 0.05%)</title><rect x="288.6" y="1203.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (31 samples, 0.09%)</title><rect x="289.1" y="1203.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (31 samples, 0.09%)</title><rect x="289.1" y="1187.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.1" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (31 samples, 0.09%)</title><rect x="289.1" y="1171.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (31 samples, 0.09%)</title><rect x="289.1" y="1155.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (31 samples, 0.09%)</title><rect x="289.1" y="1139.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (26 samples, 0.08%)</title><rect x="289.3" y="1123.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (26 samples, 0.08%)</title><rect x="289.3" y="1107.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (26 samples, 0.08%)</title><rect x="289.3" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.underlying (24 samples, 0.07%)</title><rect x="290.2" y="1331.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (17 samples, 0.05%)</title><rect x="291.1" y="1347.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.1" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.akka$stream$impl$fusing$GraphInterpreterShell$$self (16 samples, 0.05%)</title><rect x="291.8" y="1347.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.8" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (2,029 samples, 6.14%)</title><rect x="292.8" y="1491.0" width="72.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.8" y="1502.0">akka/dis..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (33 samples, 0.10%)</title><rect x="292.9" y="1475.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.02%)</title><rect x="293.0" y="1459.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (17 samples, 0.05%)</title><rect x="293.5" y="1459.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (17 samples, 0.05%)</title><rect x="293.5" y="1443.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.5" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (1,981 samples, 6.00%)</title><rect x="294.5" y="1475.0" width="70.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.5" y="1486.0">scala/co..</text>
</g>
<g>
<title>java/lang/ThreadLocal.set (7 samples, 0.02%)</title><rect x="294.6" y="1459.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.6" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1,973 samples, 5.97%)</title><rect x="294.8" y="1459.0" width="70.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.8" y="1470.0">scala/ru..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$581/562244816.apply$mcV$sp (1,969 samples, 5.96%)</title><rect x="294.8" y="1443.0" width="70.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.8" y="1454.0">akka/dis..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (1,969 samples, 5.96%)</title><rect x="294.8" y="1427.0" width="70.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.8" y="1438.0">akka/dis..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (1,953 samples, 5.91%)</title><rect x="294.8" y="1411.0" width="69.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.8" y="1422.0">akka/di..</text>
</g>
<g>
<title>java/util/ArrayDeque.poll (10 samples, 0.03%)</title><rect x="295.3" y="1395.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.3" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (10 samples, 0.03%)</title><rect x="295.3" y="1379.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.3" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1,928 samples, 5.84%)</title><rect x="295.7" y="1395.0" width="68.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.7" y="1406.0">scala/c..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1036/1584534615.apply (544 samples, 1.65%)</title><rect x="296.0" y="1379.0" width="19.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.0" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (540 samples, 1.63%)</title><rect x="296.1" y="1363.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.1" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseUnmarshaller (11 samples, 0.03%)</title><rect x="296.2" y="1347.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.2" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (46 samples, 0.14%)</title><rect x="296.6" y="1347.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (46 samples, 0.14%)</title><rect x="296.6" y="1331.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.6" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (45 samples, 0.14%)</title><rect x="296.6" y="1315.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (38 samples, 0.12%)</title><rect x="296.8" y="1299.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (34 samples, 0.10%)</title><rect x="296.9" y="1283.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (22 samples, 0.07%)</title><rect x="297.3" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (20 samples, 0.06%)</title><rect x="297.3" y="1251.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (10 samples, 0.03%)</title><rect x="297.4" y="1235.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (472 samples, 1.43%)</title><rect x="298.3" y="1347.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.3" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1061/1106369461.apply (469 samples, 1.42%)</title><rect x="298.3" y="1331.0" width="16.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (469 samples, 1.42%)</title><rect x="298.3" y="1315.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1063/743379158.apply (8 samples, 0.02%)</title><rect x="298.3" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (8 samples, 0.02%)</title><rect x="298.3" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (8 samples, 0.02%)</title><rect x="298.3" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (7 samples, 0.02%)</title><rect x="298.4" y="1251.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (461 samples, 1.40%)</title><rect x="298.6" y="1299.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1061/1106369461.apply (457 samples, 1.38%)</title><rect x="298.7" y="1283.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (456 samples, 1.38%)</title><rect x="298.8" y="1267.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1063/743379158.apply (9 samples, 0.03%)</title><rect x="298.8" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (9 samples, 0.03%)</title><rect x="298.8" y="1235.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (8 samples, 0.02%)</title><rect x="298.8" y="1219.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (8 samples, 0.02%)</title><rect x="298.8" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (446 samples, 1.35%)</title><rect x="299.1" y="1251.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1065/1382316179.apply (439 samples, 1.33%)</title><rect x="299.2" y="1235.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (439 samples, 1.33%)</title><rect x="299.2" y="1219.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (438 samples, 1.33%)</title><rect x="299.3" y="1203.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (118 samples, 0.36%)</title><rect x="299.3" y="1187.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (32 samples, 0.10%)</title><rect x="299.3" y="1171.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.3" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (32 samples, 0.10%)</title><rect x="299.3" y="1155.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (32 samples, 0.10%)</title><rect x="299.3" y="1139.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (27 samples, 0.08%)</title><rect x="299.5" y="1123.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (27 samples, 0.08%)</title><rect x="299.5" y="1107.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (27 samples, 0.08%)</title><rect x="299.5" y="1091.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (8 samples, 0.02%)</title><rect x="299.5" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (13 samples, 0.04%)</title><rect x="299.9" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (10 samples, 0.03%)</title><rect x="299.9" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (20 samples, 0.06%)</title><rect x="300.4" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (20 samples, 0.06%)</title><rect x="300.4" y="1155.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (20 samples, 0.06%)</title><rect x="300.4" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (53 samples, 0.16%)</title><rect x="301.1" y="1171.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.&lt;init&gt; (8 samples, 0.02%)</title><rect x="301.1" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (42 samples, 0.13%)</title><rect x="301.4" y="1155.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (33 samples, 0.10%)</title><rect x="301.7" y="1139.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (27 samples, 0.08%)</title><rect x="301.7" y="1123.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (7 samples, 0.02%)</title><rect x="302.1" y="1107.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (7 samples, 0.02%)</title><rect x="302.1" y="1091.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (7 samples, 0.02%)</title><rect x="302.1" y="1075.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (7 samples, 0.02%)</title><rect x="302.1" y="1059.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (8 samples, 0.02%)</title><rect x="302.3" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (8 samples, 0.02%)</title><rect x="302.3" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (13 samples, 0.04%)</title><rect x="303.0" y="1171.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (12 samples, 0.04%)</title><rect x="303.1" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.1" y="1166.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (11 samples, 0.03%)</title><rect x="303.1" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.1" y="1150.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (9 samples, 0.03%)</title><rect x="303.1" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (320 samples, 0.97%)</title><rect x="303.5" y="1187.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (312 samples, 0.94%)</title><rect x="303.5" y="1171.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (312 samples, 0.94%)</title><rect x="303.5" y="1155.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (312 samples, 0.94%)</title><rect x="303.5" y="1139.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (312 samples, 0.94%)</title><rect x="303.5" y="1123.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (7 samples, 0.02%)</title><rect x="303.8" y="1107.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (7 samples, 0.02%)</title><rect x="303.8" y="1091.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (7 samples, 0.02%)</title><rect x="303.8" y="1075.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (30 samples, 0.09%)</title><rect x="304.0" y="1107.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (23 samples, 0.07%)</title><rect x="304.1" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (8 samples, 0.02%)</title><rect x="304.1" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (15 samples, 0.05%)</title><rect x="304.4" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (187 samples, 0.57%)</title><rect x="305.1" y="1107.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (130 samples, 0.39%)</title><rect x="305.2" y="1091.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (130 samples, 0.39%)</title><rect x="305.2" y="1075.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (130 samples, 0.39%)</title><rect x="305.2" y="1059.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.2" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (130 samples, 0.39%)</title><rect x="305.2" y="1043.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (126 samples, 0.38%)</title><rect x="305.4" y="1027.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.4" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (18 samples, 0.05%)</title><rect x="305.5" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (18 samples, 0.05%)</title><rect x="305.5" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (18 samples, 0.05%)</title><rect x="305.5" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (11 samples, 0.03%)</title><rect x="305.7" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (11 samples, 0.03%)</title><rect x="305.7" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (11 samples, 0.03%)</title><rect x="305.7" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (10 samples, 0.03%)</title><rect x="305.8" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.8" y="926.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (40 samples, 0.12%)</title><rect x="306.1" y="1011.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (40 samples, 0.12%)</title><rect x="306.1" y="995.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (40 samples, 0.12%)</title><rect x="306.1" y="979.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.1" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (40 samples, 0.12%)</title><rect x="306.1" y="963.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (10 samples, 0.03%)</title><rect x="306.2" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (10 samples, 0.03%)</title><rect x="306.2" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.2" y="942.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (10 samples, 0.03%)</title><rect x="306.2" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.2" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (10 samples, 0.03%)</title><rect x="306.2" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.2" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (10 samples, 0.03%)</title><rect x="306.2" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.2" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (10 samples, 0.03%)</title><rect x="306.2" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.2" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (28 samples, 0.08%)</title><rect x="306.6" y="947.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (26 samples, 0.08%)</title><rect x="306.6" y="931.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (26 samples, 0.08%)</title><rect x="306.6" y="915.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (22 samples, 0.07%)</title><rect x="306.7" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.7" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (21 samples, 0.06%)</title><rect x="306.7" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.7" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (18 samples, 0.05%)</title><rect x="306.8" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.8" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.05%)</title><rect x="306.8" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.8" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (15 samples, 0.05%)</title><rect x="306.9" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.9" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.04%)</title><rect x="306.9" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.9" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="307.0" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.0" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="307.0" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.0" y="798.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.&lt;init&gt; (7 samples, 0.02%)</title><rect x="307.6" y="1011.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.6" y="1022.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (58 samples, 0.18%)</title><rect x="307.8" y="1011.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.8" y="1022.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (8 samples, 0.02%)</title><rect x="307.9" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.9" y="1006.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (8 samples, 0.02%)</title><rect x="307.9" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (33 samples, 0.10%)</title><rect x="308.2" y="995.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (9 samples, 0.03%)</title><rect x="308.2" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (9 samples, 0.03%)</title><rect x="308.2" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.2" y="974.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (9 samples, 0.03%)</title><rect x="308.2" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (9 samples, 0.03%)</title><rect x="308.2" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.2" y="942.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.swapMailbox (9 samples, 0.03%)</title><rect x="308.2" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.2" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.swapMailbox$ (9 samples, 0.03%)</title><rect x="308.2" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.2" y="910.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.swapMailbox (9 samples, 0.03%)</title><rect x="308.2" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.2" y="894.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (9 samples, 0.03%)</title><rect x="308.2" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.2" y="878.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (9 samples, 0.03%)</title><rect x="308.2" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.2" y="862.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (9 samples, 0.03%)</title><rect x="308.2" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.2" y="846.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (19 samples, 0.06%)</title><rect x="308.5" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (11 samples, 0.03%)</title><rect x="308.5" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.5" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (11 samples, 0.03%)</title><rect x="308.5" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.5" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (11 samples, 0.03%)</title><rect x="308.5" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.5" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (11 samples, 0.03%)</title><rect x="308.5" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.5" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (11 samples, 0.03%)</title><rect x="308.5" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.03%)</title><rect x="308.6" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="308.6" y="867.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.02%)</title><rect x="308.6" y="851.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.6" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="308.6" y="835.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.6" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.02%)</title><rect x="308.6" y="819.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.02%)</title><rect x="308.6" y="803.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.02%)</title><rect x="308.6" y="787.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.02%)</title><rect x="308.6" y="771.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.6" y="782.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (8 samples, 0.02%)</title><rect x="309.6" y="995.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (8 samples, 0.02%)</title><rect x="309.6" y="979.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (8 samples, 0.02%)</title><rect x="309.6" y="963.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (8 samples, 0.02%)</title><rect x="309.6" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (8 samples, 0.02%)</title><rect x="309.6" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (8 samples, 0.02%)</title><rect x="309.6" y="915.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.6" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (44 samples, 0.13%)</title><rect x="310.0" y="1091.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.0" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (39 samples, 0.12%)</title><rect x="310.0" y="1075.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.0" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (39 samples, 0.12%)</title><rect x="310.0" y="1059.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.0" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (39 samples, 0.12%)</title><rect x="310.0" y="1043.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (36 samples, 0.11%)</title><rect x="310.1" y="1027.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (36 samples, 0.11%)</title><rect x="310.1" y="1011.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (36 samples, 0.11%)</title><rect x="310.1" y="995.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (36 samples, 0.11%)</title><rect x="310.1" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (10 samples, 0.03%)</title><rect x="310.1" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (10 samples, 0.03%)</title><rect x="310.1" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (25 samples, 0.08%)</title><rect x="310.5" y="963.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.5" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (23 samples, 0.07%)</title><rect x="310.6" y="947.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.6" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (12 samples, 0.04%)</title><rect x="311.8" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (8 samples, 0.02%)</title><rect x="311.9" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (8 samples, 0.02%)</title><rect x="311.9" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (14 samples, 0.04%)</title><rect x="312.3" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (14 samples, 0.04%)</title><rect x="312.3" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.concat (10 samples, 0.03%)</title><rect x="312.3" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat$ (10 samples, 0.03%)</title><rect x="312.3" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat (10 samples, 0.03%)</title><rect x="312.3" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat$.normalizeConcat (10 samples, 0.03%)</title><rect x="312.3" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.&lt;init&gt; (9 samples, 0.03%)</title><rect x="312.3" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (22 samples, 0.07%)</title><rect x="312.8" y="1107.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (22 samples, 0.07%)</title><rect x="312.8" y="1091.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 0.06%)</title><rect x="312.8" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.06%)</title><rect x="312.8" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (8 samples, 0.02%)</title><rect x="314.6" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (8 samples, 0.02%)</title><rect x="314.6" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (7 samples, 0.02%)</title><rect x="314.7" y="1139.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1098/781969974.apply (11 samples, 0.03%)</title><rect x="315.7" y="1379.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.7" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$3$adapted (10 samples, 0.03%)</title><rect x="315.7" y="1363.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.7" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$3 (10 samples, 0.03%)</title><rect x="315.7" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.7" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.removeConnection (10 samples, 0.03%)</title><rect x="315.7" y="1331.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (10 samples, 0.03%)</title><rect x="315.7" y="1315.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (9 samples, 0.03%)</title><rect x="315.7" y="1299.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (9 samples, 0.03%)</title><rect x="315.7" y="1283.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (9 samples, 0.03%)</title><rect x="315.7" y="1267.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (9 samples, 0.03%)</title><rect x="315.7" y="1251.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (9 samples, 0.03%)</title><rect x="315.7" y="1235.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1084/182241498.apply (1,318 samples, 3.99%)</title><rect x="316.1" y="1379.0" width="47.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.1" y="1390.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (1,305 samples, 3.95%)</title><rect x="316.5" y="1363.0" width="46.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.5" y="1374.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1,018 samples, 3.08%)</title><rect x="316.7" y="1347.0" width="36.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.7" y="1358.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1072/770353633.apply (492 samples, 1.49%)</title><rect x="317.1" y="1331.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.1" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (492 samples, 1.49%)</title><rect x="317.1" y="1315.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.1" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1057/1575901801.apply (232 samples, 0.70%)</title><rect x="317.1" y="1299.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.1" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (232 samples, 0.70%)</title><rect x="317.1" y="1283.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.1" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (232 samples, 0.70%)</title><rect x="317.1" y="1267.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.1" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (232 samples, 0.70%)</title><rect x="317.1" y="1251.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.1" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (232 samples, 0.70%)</title><rect x="317.1" y="1235.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.1" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (232 samples, 0.70%)</title><rect x="317.1" y="1219.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.1" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (232 samples, 0.70%)</title><rect x="317.1" y="1203.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.1" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (232 samples, 0.70%)</title><rect x="317.1" y="1187.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.1" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.checkLastTagWas (15 samples, 0.05%)</title><rect x="317.1" y="1171.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.1" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (13 samples, 0.04%)</title><rect x="317.2" y="1155.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="320.2" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (11 samples, 0.03%)</title><rect x="317.2" y="1139.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="320.2" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (215 samples, 0.65%)</title><rect x="317.7" y="1171.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.7" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (215 samples, 0.65%)</title><rect x="317.7" y="1155.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.7" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (214 samples, 0.65%)</title><rect x="317.7" y="1139.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.7" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (214 samples, 0.65%)</title><rect x="317.7" y="1123.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.7" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (14 samples, 0.04%)</title><rect x="317.8" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.8" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (14 samples, 0.04%)</title><rect x="317.8" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.8" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (14 samples, 0.04%)</title><rect x="317.8" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.8" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (14 samples, 0.04%)</title><rect x="317.8" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.8" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (14 samples, 0.04%)</title><rect x="317.8" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.8" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (12 samples, 0.04%)</title><rect x="317.8" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.8" y="1038.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (10 samples, 0.03%)</title><rect x="317.8" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.8" y="1022.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (10 samples, 0.03%)</title><rect x="317.8" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.8" y="1006.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (10 samples, 0.03%)</title><rect x="317.8" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.8" y="990.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (10 samples, 0.03%)</title><rect x="317.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.8" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseEntry (10 samples, 0.03%)</title><rect x="317.8" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.8" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseField (10 samples, 0.03%)</title><rect x="317.8" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.8" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (9 samples, 0.03%)</title><rect x="317.8" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.8" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (9 samples, 0.03%)</title><rect x="317.8" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.8" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (9 samples, 0.03%)</title><rect x="317.8" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.8" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownFieldProto3 (198 samples, 0.60%)</title><rect x="318.3" y="1107.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.3" y="1118.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownField (198 samples, 0.60%)</title><rect x="318.3" y="1091.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.3" y="1102.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet$Builder.mergeFieldFrom (198 samples, 0.60%)</title><rect x="318.3" y="1075.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.3" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.invalidWireType (198 samples, 0.60%)</title><rect x="318.3" y="1059.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.3" y="1070.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException.&lt;init&gt; (198 samples, 0.60%)</title><rect x="318.3" y="1043.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.3" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.&lt;init&gt; (198 samples, 0.60%)</title><rect x="318.3" y="1027.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.3" y="1038.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (198 samples, 0.60%)</title><rect x="318.3" y="1011.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (198 samples, 0.60%)</title><rect x="318.3" y="995.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (198 samples, 0.60%)</title><rect x="318.3" y="979.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.3" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (195 samples, 0.59%)</title><rect x="318.4" y="963.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.4" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (195 samples, 0.59%)</title><rect x="318.4" y="947.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.4" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (192 samples, 0.58%)</title><rect x="318.5" y="931.0" width="6.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="321.5" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (188 samples, 0.57%)</title><rect x="318.6" y="915.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="321.6" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (186 samples, 0.56%)</title><rect x="318.7" y="899.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="321.7" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (174 samples, 0.53%)</title><rect x="319.1" y="883.0" width="6.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="322.1" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (11 samples, 0.03%)</title><rect x="320.9" y="867.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="323.9" y="878.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (17 samples, 0.05%)</title><rect x="321.3" y="867.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="324.3" y="878.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (14 samples, 0.04%)</title><rect x="321.4" y="851.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="324.4" y="862.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (7 samples, 0.02%)</title><rect x="321.4" y="835.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="324.4" y="846.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (32 samples, 0.10%)</title><rect x="322.0" y="867.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="325.0" y="878.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (8 samples, 0.02%)</title><rect x="323.4" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="326.4" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (37 samples, 0.11%)</title><rect x="323.9" y="867.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="326.9" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (30 samples, 0.09%)</title><rect x="324.1" y="851.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="327.1" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (22 samples, 0.07%)</title><rect x="324.3" y="835.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.3" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (18 samples, 0.05%)</title><rect x="324.4" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="327.4" y="830.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1151/905209674.apply (204 samples, 0.62%)</title><rect x="325.4" y="1299.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.4" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (204 samples, 0.62%)</title><rect x="325.4" y="1283.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.4" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (204 samples, 0.62%)</title><rect x="325.4" y="1267.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.4" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (204 samples, 0.62%)</title><rect x="325.4" y="1251.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.4" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (204 samples, 0.62%)</title><rect x="325.4" y="1235.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.4" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (204 samples, 0.62%)</title><rect x="325.4" y="1219.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.4" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (203 samples, 0.61%)</title><rect x="325.4" y="1203.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.4" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (203 samples, 0.61%)</title><rect x="325.4" y="1187.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.4" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (196 samples, 0.59%)</title><rect x="325.7" y="1171.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.7" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (196 samples, 0.59%)</title><rect x="325.7" y="1155.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.7" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (194 samples, 0.59%)</title><rect x="325.7" y="1139.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.7" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (194 samples, 0.59%)</title><rect x="325.7" y="1123.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.7" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (184 samples, 0.56%)</title><rect x="325.9" y="1107.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.9" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (149 samples, 0.45%)</title><rect x="326.1" y="1091.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.1" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (149 samples, 0.45%)</title><rect x="326.1" y="1075.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.1" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (149 samples, 0.45%)</title><rect x="326.1" y="1059.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.1" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (149 samples, 0.45%)</title><rect x="326.1" y="1043.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.1" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (131 samples, 0.40%)</title><rect x="326.2" y="1027.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.2" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (110 samples, 0.33%)</title><rect x="326.3" y="1011.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.3" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (109 samples, 0.33%)</title><rect x="326.3" y="995.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.3" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (108 samples, 0.33%)</title><rect x="326.4" y="979.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.4" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (108 samples, 0.33%)</title><rect x="326.4" y="963.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.4" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (70 samples, 0.21%)</title><rect x="326.8" y="947.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.8" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readRawVarint32 (7 samples, 0.02%)</title><rect x="326.9" y="931.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.9" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (10 samples, 0.03%)</title><rect x="327.1" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.1" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (10 samples, 0.03%)</title><rect x="327.1" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.1" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (10 samples, 0.03%)</title><rect x="327.1" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.1" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (10 samples, 0.03%)</title><rect x="327.1" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.1" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (8 samples, 0.02%)</title><rect x="327.1" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.1" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (8 samples, 0.02%)</title><rect x="327.1" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.1" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (48 samples, 0.15%)</title><rect x="327.5" y="931.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.5" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (47 samples, 0.14%)</title><rect x="327.5" y="915.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.5" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (47 samples, 0.14%)</title><rect x="327.5" y="899.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.5" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (47 samples, 0.14%)</title><rect x="327.5" y="883.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.5" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (23 samples, 0.07%)</title><rect x="327.5" y="867.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.5" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (19 samples, 0.06%)</title><rect x="327.7" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.7" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (19 samples, 0.06%)</title><rect x="327.7" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.7" y="846.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (17 samples, 0.05%)</title><rect x="327.7" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.7" y="830.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (16 samples, 0.05%)</title><rect x="327.8" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.8" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseEntry (16 samples, 0.05%)</title><rect x="327.8" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.8" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap.put (18 samples, 0.05%)</title><rect x="328.4" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (18 samples, 0.05%)</title><rect x="328.4" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (16 samples, 0.05%)</title><rect x="328.4" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.4" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (9 samples, 0.03%)</title><rect x="328.7" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.7" y="830.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readTag (19 samples, 0.06%)</title><rect x="329.4" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.4" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readRawVarint32 (17 samples, 0.05%)</title><rect x="329.4" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.4" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readRawVarint64SlowPath (11 samples, 0.03%)</title><rect x="329.6" y="915.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.6" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (17 samples, 0.05%)</title><rect x="330.2" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.2" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (17 samples, 0.05%)</title><rect x="330.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.2" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (17 samples, 0.05%)</title><rect x="330.2" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.2" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (17 samples, 0.05%)</title><rect x="330.2" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.2" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (10 samples, 0.03%)</title><rect x="330.2" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.2" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (9 samples, 0.03%)</title><rect x="330.3" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.3" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (9 samples, 0.03%)</title><rect x="330.3" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.04%)</title><rect x="331.0" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.03%)</title><rect x="331.0" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.0" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (27 samples, 0.08%)</title><rect x="331.4" y="1091.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.4" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (27 samples, 0.08%)</title><rect x="331.4" y="1075.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.4" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (27 samples, 0.08%)</title><rect x="331.4" y="1059.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.4" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (27 samples, 0.08%)</title><rect x="331.4" y="1043.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.4" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (20 samples, 0.06%)</title><rect x="331.5" y="1027.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="334.5" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (20 samples, 0.06%)</title><rect x="331.5" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.5" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (20 samples, 0.06%)</title><rect x="331.5" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.5" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (20 samples, 0.06%)</title><rect x="331.5" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.5" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (20 samples, 0.06%)</title><rect x="331.5" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.5" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (13 samples, 0.04%)</title><rect x="331.5" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.5" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (13 samples, 0.04%)</title><rect x="331.5" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.5" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (10 samples, 0.03%)</title><rect x="331.6" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.6" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1054/644974323.apply (19 samples, 0.06%)</title><rect x="332.7" y="1299.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteArrayUnmarshaller$1 (12 samples, 0.04%)</title><rect x="332.7" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.7" y="1294.0"></text>
</g>
<g>
<title>akka/util/ByteString.toArray (11 samples, 0.03%)</title><rect x="332.7" y="1267.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/1582516792.apply (37 samples, 0.11%)</title><rect x="333.4" y="1299.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (37 samples, 0.11%)</title><rect x="333.4" y="1283.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.4" y="1294.0"></text>
</g>
<g>
<title>itable stub (21 samples, 0.06%)</title><rect x="333.9" y="1267.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="336.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1165/851058329.apply (506 samples, 1.53%)</title><rect x="334.7" y="1331.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.7" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (506 samples, 1.53%)</title><rect x="334.7" y="1315.0" width="18.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1164/2088217702.apply (503 samples, 1.52%)</title><rect x="334.8" y="1299.0" width="18.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.8" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (501 samples, 1.52%)</title><rect x="334.9" y="1283.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$985/513850782.apply (17 samples, 0.05%)</title><rect x="334.9" y="1267.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (17 samples, 0.05%)</title><rect x="334.9" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (14 samples, 0.04%)</title><rect x="334.9" y="1235.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1125/1803752213.apply (13 samples, 0.04%)</title><rect x="334.9" y="1219.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (12 samples, 0.04%)</title><rect x="334.9" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1112/72980240.apply (12 samples, 0.04%)</title><rect x="334.9" y="1187.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (12 samples, 0.04%)</title><rect x="334.9" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (12 samples, 0.04%)</title><rect x="334.9" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1135/1198827304.apply (8 samples, 0.02%)</title><rect x="335.0" y="1139.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (300 samples, 0.91%)</title><rect x="335.5" y="1267.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (300 samples, 0.91%)</title><rect x="335.5" y="1251.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1170/1620701862.apply (300 samples, 0.91%)</title><rect x="335.5" y="1235.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (299 samples, 0.91%)</title><rect x="335.5" y="1219.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (292 samples, 0.88%)</title><rect x="335.7" y="1203.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (269 samples, 0.81%)</title><rect x="335.7" y="1187.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (269 samples, 0.81%)</title><rect x="335.7" y="1171.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (268 samples, 0.81%)</title><rect x="335.8" y="1155.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (267 samples, 0.81%)</title><rect x="335.8" y="1139.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (13 samples, 0.04%)</title><rect x="335.8" y="1123.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$1266/1143746372.apply (7 samples, 0.02%)</title><rect x="335.9" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (159 samples, 0.48%)</title><rect x="336.3" y="1123.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (159 samples, 0.48%)</title><rect x="336.3" y="1107.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/CharsetNegotiator.&lt;init&gt; (27 samples, 0.08%)</title><rect x="336.3" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (9 samples, 0.03%)</title><rect x="336.4" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (9 samples, 0.03%)</title><rect x="336.4" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (9 samples, 0.03%)</title><rect x="336.4" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (14 samples, 0.04%)</title><rect x="336.7" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (11 samples, 0.03%)</title><rect x="336.8" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (11 samples, 0.03%)</title><rect x="336.8" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (11 samples, 0.03%)</title><rect x="336.8" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (11 samples, 0.03%)</title><rect x="336.8" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (9 samples, 0.03%)</title><rect x="336.8" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (8 samples, 0.02%)</title><rect x="336.9" y="979.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.9" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (7 samples, 0.02%)</title><rect x="336.9" y="963.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (131 samples, 0.40%)</title><rect x="337.3" y="1091.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.02%)</title><rect x="337.4" y="1075.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (41 samples, 0.12%)</title><rect x="337.7" y="1075.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (41 samples, 0.12%)</title><rect x="337.7" y="1059.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (41 samples, 0.12%)</title><rect x="337.7" y="1043.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sorted (37 samples, 0.11%)</title><rect x="337.7" y="1027.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (37 samples, 0.11%)</title><rect x="337.7" y="1011.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (37 samples, 0.11%)</title><rect x="337.7" y="995.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (37 samples, 0.11%)</title><rect x="337.7" y="979.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (37 samples, 0.11%)</title><rect x="337.7" y="963.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (37 samples, 0.11%)</title><rect x="337.7" y="947.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.7" y="958.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="337.9" y="931.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="340.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.newSpecificBuilder (22 samples, 0.07%)</title><rect x="338.1" y="931.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.1" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.newSpecificBuilder$ (11 samples, 0.03%)</title><rect x="338.5" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.5" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.newSpecificBuilder (11 samples, 0.03%)</title><rect x="338.5" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.5" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.newBuilder (10 samples, 0.03%)</title><rect x="338.5" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.5" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.newBuilder (10 samples, 0.03%)</title><rect x="338.5" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.5" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.&lt;init&gt; (10 samples, 0.03%)</title><rect x="338.5" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.5" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.display0_$eq (10 samples, 0.03%)</title><rect x="338.5" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.5" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (75 samples, 0.23%)</title><rect x="339.1" y="1075.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (69 samples, 0.21%)</title><rect x="339.4" y="1059.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (69 samples, 0.21%)</title><rect x="339.4" y="1043.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (54 samples, 0.16%)</title><rect x="339.9" y="1027.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (50 samples, 0.15%)</title><rect x="340.0" y="1011.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (39 samples, 0.12%)</title><rect x="340.2" y="995.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (30 samples, 0.09%)</title><rect x="340.5" y="979.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.5" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator$$Lambda$1189/1834168621.apply (8 samples, 0.02%)</title><rect x="340.6" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (17 samples, 0.05%)</title><rect x="341.0" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator$$Lambda$1189/1834168621.apply (10 samples, 0.03%)</title><rect x="341.0" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.0" y="958.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="341.3" y="947.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="344.3" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (94 samples, 0.28%)</title><rect x="342.0" y="1123.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (94 samples, 0.28%)</title><rect x="342.0" y="1107.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (92 samples, 0.28%)</title><rect x="342.0" y="1091.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1072/770353633.apply (92 samples, 0.28%)</title><rect x="342.0" y="1075.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (92 samples, 0.28%)</title><rect x="342.0" y="1059.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$1204/380106114.apply (80 samples, 0.24%)</title><rect x="342.0" y="1043.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (80 samples, 0.24%)</title><rect x="342.0" y="1027.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$1267/1580091125.apply (13 samples, 0.04%)</title><rect x="342.2" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$opaque$2 (13 samples, 0.04%)</title><rect x="342.2" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1180/1904576287.apply (13 samples, 0.04%)</title><rect x="342.2" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.2" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCode$1 (13 samples, 0.04%)</title><rect x="342.2" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.2" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeResponse (13 samples, 0.04%)</title><rect x="342.2" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (11 samples, 0.03%)</title><rect x="342.2" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (11 samples, 0.03%)</title><rect x="342.2" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.pickContentType (18 samples, 0.05%)</title><rect x="342.9" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.collectFirst (13 samples, 0.04%)</title><rect x="343.0" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst$ (10 samples, 0.03%)</title><rect x="343.1" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst (10 samples, 0.03%)</title><rect x="343.1" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (31 samples, 0.09%)</title><rect x="343.7" y="1011.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (31 samples, 0.09%)</title><rect x="343.7" y="995.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (31 samples, 0.09%)</title><rect x="343.7" y="979.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (31 samples, 0.09%)</title><rect x="343.7" y="963.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (31 samples, 0.09%)</title><rect x="343.7" y="947.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (31 samples, 0.09%)</title><rect x="343.7" y="931.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (21 samples, 0.06%)</title><rect x="344.1" y="915.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.1" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (21 samples, 0.06%)</title><rect x="344.1" y="899.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.1" y="910.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.02%)</title><rect x="344.1" y="883.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="347.1" y="894.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$7.hasNext (7 samples, 0.02%)</title><rect x="344.6" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.6" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/1582516792.apply (12 samples, 0.04%)</title><rect x="344.9" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (12 samples, 0.04%)</title><rect x="344.9" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.9" y="1038.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="345.0" y="1011.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="348.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (16 samples, 0.05%)</title><rect x="345.4" y="1187.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (16 samples, 0.05%)</title><rect x="345.4" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (16 samples, 0.05%)</title><rect x="345.4" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1072/770353633.apply (16 samples, 0.05%)</title><rect x="345.4" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (16 samples, 0.05%)</title><rect x="345.4" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/1582516792.apply (14 samples, 0.04%)</title><rect x="345.4" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (14 samples, 0.04%)</title><rect x="345.4" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.4" y="1102.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.03%)</title><rect x="345.6" y="1075.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="348.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.recover$extension (7 samples, 0.02%)</title><rect x="345.9" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (7 samples, 0.02%)</title><rect x="345.9" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1138/1442860396.apply (177 samples, 0.54%)</title><rect x="346.2" y="1267.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (176 samples, 0.53%)</title><rect x="346.2" y="1251.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1116/702311906.apply (11 samples, 0.03%)</title><rect x="346.2" y="1235.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (11 samples, 0.03%)</title><rect x="346.2" y="1219.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1021/270229637.apply (9 samples, 0.03%)</title><rect x="346.2" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (9 samples, 0.03%)</title><rect x="346.2" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.2" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1154/1551718723.apply (9 samples, 0.03%)</title><rect x="346.2" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1160/331054759.apply (160 samples, 0.48%)</title><rect x="346.7" y="1235.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (160 samples, 0.48%)</title><rect x="346.7" y="1219.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.7" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1167/1949291414.apply (143 samples, 0.43%)</title><rect x="346.9" y="1203.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.9" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (142 samples, 0.43%)</title><rect x="346.9" y="1187.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.9" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (142 samples, 0.43%)</title><rect x="346.9" y="1171.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.9" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (25 samples, 0.08%)</title><rect x="346.9" y="1155.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.9" y="1166.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.addCallback (19 samples, 0.06%)</title><rect x="346.9" y="1139.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.9" y="1150.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture$TrustedFuture.addListener (17 samples, 0.05%)</title><rect x="346.9" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.9" y="1134.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.addListener (17 samples, 0.05%)</title><rect x="346.9" y="1107.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.9" y="1118.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (11 samples, 0.03%)</title><rect x="347.1" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (11 samples, 0.03%)</title><rect x="347.1" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (11 samples, 0.03%)</title><rect x="347.1" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (11 samples, 0.03%)</title><rect x="347.1" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (10 samples, 0.03%)</title><rect x="347.1" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (10 samples, 0.03%)</title><rect x="347.1" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.03%)</title><rect x="347.1" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.03%)</title><rect x="347.1" y="979.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.03%)</title><rect x="347.1" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.03%)</title><rect x="347.1" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.03%)</title><rect x="347.1" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.03%)</title><rect x="347.1" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (8 samples, 0.02%)</title><rect x="347.2" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.02%)</title><rect x="347.2" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.02%)</title><rect x="347.2" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.02%)</title><rect x="347.2" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.2" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.02%)</title><rect x="347.2" y="835.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="350.2" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (114 samples, 0.35%)</title><rect x="347.8" y="1155.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.8" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (7 samples, 0.02%)</title><rect x="347.9" y="1139.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.9" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (105 samples, 0.32%)</title><rect x="348.1" y="1139.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (104 samples, 0.31%)</title><rect x="348.1" y="1123.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (104 samples, 0.31%)</title><rect x="348.1" y="1107.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (104 samples, 0.31%)</title><rect x="348.1" y="1091.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (80 samples, 0.24%)</title><rect x="348.4" y="1075.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (77 samples, 0.23%)</title><rect x="348.5" y="1059.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (77 samples, 0.23%)</title><rect x="348.5" y="1043.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (77 samples, 0.23%)</title><rect x="348.5" y="1027.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (77 samples, 0.23%)</title><rect x="348.5" y="1011.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (77 samples, 0.23%)</title><rect x="348.5" y="995.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.5" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.04%)</title><rect x="348.5" y="979.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="351.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (64 samples, 0.19%)</title><rect x="349.0" y="979.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="352.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.18%)</title><rect x="349.2" y="963.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.18%)</title><rect x="349.2" y="947.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="352.2" y="958.0"></text>
</g>
<g>
<title>sys_futex (49 samples, 0.15%)</title><rect x="349.5" y="931.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.5" y="942.0"></text>
</g>
<g>
<title>do_futex (49 samples, 0.15%)</title><rect x="349.5" y="915.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="352.5" y="926.0"></text>
</g>
<g>
<title>futex_wake (49 samples, 0.15%)</title><rect x="349.5" y="899.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.5" y="910.0"></text>
</g>
<g>
<title>wake_up_q (42 samples, 0.13%)</title><rect x="349.8" y="883.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.8" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (42 samples, 0.13%)</title><rect x="349.8" y="867.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="352.8" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (42 samples, 0.13%)</title><rect x="349.8" y="851.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.02%)</title><rect x="351.3" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (10 samples, 0.03%)</title><rect x="352.0" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (7 samples, 0.02%)</title><rect x="352.0" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1021/270229637.apply (7 samples, 0.02%)</title><rect x="352.5" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.5" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (283 samples, 0.86%)</title><rect x="353.0" y="1347.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.0" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (282 samples, 0.85%)</title><rect x="353.1" y="1331.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.1" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$ErrorFuture.value (16 samples, 0.05%)</title><rect x="353.2" y="1315.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$ErrorFuture.value (7 samples, 0.02%)</title><rect x="353.5" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="1310.0"></text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (7 samples, 0.02%)</title><rect x="353.5" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$FulfilledFuture.value (24 samples, 0.07%)</title><rect x="353.8" y="1315.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.8" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$FulfilledFuture.value (24 samples, 0.07%)</title><rect x="353.8" y="1299.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.8" y="1310.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.03%)</title><rect x="354.2" y="1283.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="357.2" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (8 samples, 0.02%)</title><rect x="354.7" y="1315.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.7" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (8 samples, 0.02%)</title><rect x="354.7" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.7" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (8 samples, 0.02%)</title><rect x="354.7" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.7" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (225 samples, 0.68%)</title><rect x="355.0" y="1315.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.0" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (222 samples, 0.67%)</title><rect x="355.1" y="1299.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.1" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (222 samples, 0.67%)</title><rect x="355.1" y="1283.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (177 samples, 0.54%)</title><rect x="355.1" y="1267.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (177 samples, 0.54%)</title><rect x="355.1" y="1251.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (177 samples, 0.54%)</title><rect x="355.1" y="1235.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (162 samples, 0.49%)</title><rect x="355.3" y="1219.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (162 samples, 0.49%)</title><rect x="355.3" y="1203.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (159 samples, 0.48%)</title><rect x="355.4" y="1187.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (156 samples, 0.47%)</title><rect x="355.5" y="1171.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1031/1083246412.apply (150 samples, 0.45%)</title><rect x="355.5" y="1155.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (144 samples, 0.44%)</title><rect x="355.7" y="1139.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (144 samples, 0.44%)</title><rect x="355.7" y="1123.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (139 samples, 0.42%)</title><rect x="355.9" y="1107.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (139 samples, 0.42%)</title><rect x="355.9" y="1091.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (137 samples, 0.41%)</title><rect x="356.0" y="1075.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (133 samples, 0.40%)</title><rect x="356.1" y="1059.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (131 samples, 0.40%)</title><rect x="356.2" y="1043.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (131 samples, 0.40%)</title><rect x="356.2" y="1027.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (128 samples, 0.39%)</title><rect x="356.2" y="1011.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (124 samples, 0.38%)</title><rect x="356.2" y="995.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (124 samples, 0.38%)</title><rect x="356.2" y="979.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (124 samples, 0.38%)</title><rect x="356.2" y="963.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.2" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (124 samples, 0.38%)</title><rect x="356.2" y="947.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (124 samples, 0.38%)</title><rect x="356.2" y="931.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.2" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (124 samples, 0.38%)</title><rect x="356.2" y="915.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.2" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (124 samples, 0.38%)</title><rect x="356.2" y="899.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.2" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (116 samples, 0.35%)</title><rect x="356.2" y="883.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.2" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (114 samples, 0.35%)</title><rect x="356.2" y="867.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.2" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (114 samples, 0.35%)</title><rect x="356.2" y="851.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.2" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (114 samples, 0.35%)</title><rect x="356.2" y="835.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.2" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (113 samples, 0.34%)</title><rect x="356.2" y="819.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (113 samples, 0.34%)</title><rect x="356.2" y="803.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (113 samples, 0.34%)</title><rect x="356.2" y="787.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (113 samples, 0.34%)</title><rect x="356.2" y="771.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (113 samples, 0.34%)</title><rect x="356.2" y="755.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (113 samples, 0.34%)</title><rect x="356.2" y="739.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (113 samples, 0.34%)</title><rect x="356.2" y="723.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.05%)</title><rect x="356.2" y="707.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="359.2" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (96 samples, 0.29%)</title><rect x="356.8" y="707.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="359.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 0.25%)</title><rect x="357.3" y="691.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 0.25%)</title><rect x="357.3" y="675.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.3" y="686.0"></text>
</g>
<g>
<title>sys_futex (76 samples, 0.23%)</title><rect x="357.5" y="659.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.5" y="670.0"></text>
</g>
<g>
<title>do_futex (76 samples, 0.23%)</title><rect x="357.5" y="643.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.5" y="654.0"></text>
</g>
<g>
<title>futex_wake (74 samples, 0.22%)</title><rect x="357.5" y="627.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="360.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (71 samples, 0.21%)</title><rect x="357.6" y="611.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (71 samples, 0.21%)</title><rect x="357.6" y="595.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 0.21%)</title><rect x="357.6" y="579.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="360.6" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (8 samples, 0.02%)</title><rect x="360.3" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.3" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (7 samples, 0.02%)</title><rect x="360.4" y="867.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.4" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (7 samples, 0.02%)</title><rect x="360.4" y="851.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.4" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (7 samples, 0.02%)</title><rect x="360.4" y="835.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (7 samples, 0.02%)</title><rect x="360.4" y="819.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (7 samples, 0.02%)</title><rect x="360.4" y="803.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.4" y="814.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (16 samples, 0.05%)</title><rect x="361.4" y="1267.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (16 samples, 0.05%)</title><rect x="361.4" y="1251.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (16 samples, 0.05%)</title><rect x="361.4" y="1235.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (14 samples, 0.04%)</title><rect x="361.5" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.5" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (27 samples, 0.08%)</title><rect x="362.0" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.0" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (19 samples, 0.06%)</title><rect x="362.3" y="1251.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.3" y="1262.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="362.3" y="1235.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="365.3" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.apply (12 samples, 0.04%)</title><rect x="362.6" y="1235.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.6" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.apply (9 samples, 0.03%)</title><rect x="362.6" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.6" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (9 samples, 0.03%)</title><rect x="362.6" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.6" y="1214.0"></text>
</g>
<g>
<title>itable stub (16 samples, 0.05%)</title><rect x="363.1" y="1379.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="366.1" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/Future$$Lambda$123/793293778.apply (9 samples, 0.03%)</title><rect x="363.7" y="1379.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.7" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/Future.$anonfun$andThen$1 (9 samples, 0.03%)</title><rect x="363.7" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.7" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (9 samples, 0.03%)</title><rect x="363.7" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.7" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (9 samples, 0.03%)</title><rect x="363.7" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="366.7" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (11 samples, 0.03%)</title><rect x="364.2" y="1379.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.2" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (10 samples, 0.03%)</title><rect x="364.3" y="1363.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.3" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (10 samples, 0.03%)</title><rect x="364.3" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (8 samples, 0.02%)</title><rect x="364.3" y="1331.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (8 samples, 0.02%)</title><rect x="364.3" y="1315.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (8 samples, 0.02%)</title><rect x="364.3" y="1299.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (7 samples, 0.02%)</title><rect x="364.3" y="1283.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (7 samples, 0.02%)</title><rect x="364.3" y="1267.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (7 samples, 0.02%)</title><rect x="364.3" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.3" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (7 samples, 0.02%)</title><rect x="364.3" y="1235.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$533/245899128.apply (7 samples, 0.02%)</title><rect x="364.3" y="1219.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (13 samples, 0.04%)</title><rect x="364.7" y="1411.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (13 samples, 0.04%)</title><rect x="364.7" y="1395.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (10 samples, 0.03%)</title><rect x="364.8" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.8" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.cleanup (46 samples, 0.14%)</title><rect x="365.5" y="1491.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.5" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (7 samples, 0.02%)</title><rect x="365.7" y="1475.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.7" y="1486.0"></text>
</g>
<g>
<title>itable stub (31 samples, 0.09%)</title><rect x="366.0" y="1475.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="369.0" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$anon$4.run (13 samples, 0.04%)</title><rect x="367.1" y="1491.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.1" y="1502.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (13 samples, 0.04%)</title><rect x="367.1" y="1475.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.1" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (13 samples, 0.04%)</title><rect x="367.1" y="1459.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.1" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (12 samples, 0.04%)</title><rect x="367.1" y="1443.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.1" y="1454.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (12 samples, 0.04%)</title><rect x="367.1" y="1427.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.1" y="1438.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (12 samples, 0.04%)</title><rect x="367.1" y="1411.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (12 samples, 0.04%)</title><rect x="367.1" y="1395.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (12 samples, 0.04%)</title><rect x="367.1" y="1379.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.04%)</title><rect x="367.1" y="1363.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (12 samples, 0.04%)</title><rect x="367.1" y="1347.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (12 samples, 0.04%)</title><rect x="367.1" y="1331.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.04%)</title><rect x="367.1" y="1315.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (12 samples, 0.04%)</title><rect x="367.1" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (12 samples, 0.04%)</title><rect x="367.1" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (12 samples, 0.04%)</title><rect x="367.1" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (12 samples, 0.04%)</title><rect x="367.1" y="1251.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.04%)</title><rect x="367.1" y="1235.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.04%)</title><rect x="367.1" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.04%)</title><rect x="367.1" y="1203.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.04%)</title><rect x="367.1" y="1187.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.04%)</title><rect x="367.1" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.04%)</title><rect x="367.1" y="1155.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (11 samples, 0.03%)</title><rect x="367.2" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.03%)</title><rect x="367.3" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.03%)</title><rect x="367.3" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.03%)</title><rect x="367.3" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.3" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.03%)</title><rect x="367.3" y="1075.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="370.3" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="367.3" y="1059.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="370.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.02%)</title><rect x="367.3" y="1043.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.3" y="1054.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (215 samples, 0.65%)</title><rect x="367.6" y="1491.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.6" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector$ProbeCallback.onSuccess (8 samples, 0.02%)</title><rect x="367.6" y="1475.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.6" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector$ProbeCallback.onSuccess (8 samples, 0.02%)</title><rect x="367.6" y="1459.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.6" y="1470.0"></text>
</g>
<g>
<title>akka/remote/PhiAccrualFailureDetector.heartbeat (7 samples, 0.02%)</title><rect x="367.6" y="1443.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.6" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (195 samples, 0.59%)</title><rect x="367.9" y="1475.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.9" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (194 samples, 0.59%)</title><rect x="368.0" y="1459.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.0" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (194 samples, 0.59%)</title><rect x="368.0" y="1443.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.0" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (194 samples, 0.59%)</title><rect x="368.0" y="1427.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.0" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (192 samples, 0.58%)</title><rect x="368.0" y="1411.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.0" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (192 samples, 0.58%)</title><rect x="368.0" y="1395.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.0" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (192 samples, 0.58%)</title><rect x="368.0" y="1379.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.0" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (185 samples, 0.56%)</title><rect x="368.3" y="1363.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.3" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (183 samples, 0.55%)</title><rect x="368.4" y="1347.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.4" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (178 samples, 0.54%)</title><rect x="368.5" y="1331.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.5" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (178 samples, 0.54%)</title><rect x="368.5" y="1315.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (177 samples, 0.54%)</title><rect x="368.6" y="1299.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (177 samples, 0.54%)</title><rect x="368.6" y="1283.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (177 samples, 0.54%)</title><rect x="368.6" y="1267.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (162 samples, 0.49%)</title><rect x="368.6" y="1251.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (162 samples, 0.49%)</title><rect x="368.6" y="1235.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (162 samples, 0.49%)</title><rect x="368.6" y="1219.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (162 samples, 0.49%)</title><rect x="368.6" y="1203.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (162 samples, 0.49%)</title><rect x="368.6" y="1187.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.6" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (161 samples, 0.49%)</title><rect x="368.6" y="1171.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (161 samples, 0.49%)</title><rect x="368.6" y="1155.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (161 samples, 0.49%)</title><rect x="368.6" y="1139.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (156 samples, 0.47%)</title><rect x="368.8" y="1123.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (151 samples, 0.46%)</title><rect x="369.0" y="1107.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (151 samples, 0.46%)</title><rect x="369.0" y="1091.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (151 samples, 0.46%)</title><rect x="369.0" y="1075.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.0" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.06%)</title><rect x="369.0" y="1059.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="372.0" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (128 samples, 0.39%)</title><rect x="369.8" y="1059.0" width="4.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="372.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (117 samples, 0.35%)</title><rect x="370.1" y="1043.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="373.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (116 samples, 0.35%)</title><rect x="370.1" y="1027.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="373.1" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.03%)</title><rect x="370.3" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.3" y="1022.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.03%)</title><rect x="370.3" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.3" y="1006.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.03%)</title><rect x="370.3" y="979.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="373.3" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.03%)</title><rect x="370.3" y="963.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.3" y="974.0"></text>
</g>
<g>
<title>sys_futex (103 samples, 0.31%)</title><rect x="370.6" y="1011.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="373.6" y="1022.0"></text>
</g>
<g>
<title>do_futex (103 samples, 0.31%)</title><rect x="370.6" y="995.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="373.6" y="1006.0"></text>
</g>
<g>
<title>futex_wake (102 samples, 0.31%)</title><rect x="370.6" y="979.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.6" y="990.0"></text>
</g>
<g>
<title>wake_up_q (97 samples, 0.29%)</title><rect x="370.8" y="963.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.8" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (95 samples, 0.29%)</title><rect x="370.9" y="947.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.9" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (95 samples, 0.29%)</title><rect x="370.9" y="931.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="373.9" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.04%)</title><rect x="374.4" y="1251.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.4" y="1262.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.getDone (8 samples, 0.02%)</title><rect x="374.9" y="1475.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.9" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (12,210 samples, 36.96%)</title><rect x="375.3" y="1523.0" width="436.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.3" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (12,202 samples, 36.94%)</title><rect x="375.6" y="1507.0" width="435.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.6" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (20 samples, 0.06%)</title><rect x="376.0" y="1491.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.0" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (16 samples, 0.05%)</title><rect x="376.1" y="1475.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.hasMessages (9 samples, 0.03%)</title><rect x="376.3" y="1459.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.3" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.hasMessages (8 samples, 0.02%)</title><rect x="376.3" y="1443.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.3" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages$ (8 samples, 0.02%)</title><rect x="376.3" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.3" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (1,900 samples, 5.75%)</title><rect x="376.8" y="1491.0" width="67.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.8" y="1502.0">akka/di..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (1,787 samples, 5.41%)</title><rect x="376.8" y="1475.0" width="63.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.8" y="1486.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (1,782 samples, 5.39%)</title><rect x="376.9" y="1459.0" width="63.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.9" y="1470.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (63 samples, 0.19%)</title><rect x="377.2" y="1443.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (63 samples, 0.19%)</title><rect x="377.2" y="1427.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (63 samples, 0.19%)</title><rect x="377.2" y="1411.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (18 samples, 0.05%)</title><rect x="377.3" y="1395.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (18 samples, 0.05%)</title><rect x="377.3" y="1379.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (18 samples, 0.05%)</title><rect x="377.3" y="1363.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.contains (22 samples, 0.07%)</title><rect x="378.6" y="1395.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.contains (21 samples, 0.06%)</title><rect x="378.6" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.contains (11 samples, 0.03%)</title><rect x="378.8" y="1363.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (844 samples, 2.56%)</title><rect x="379.5" y="1443.0" width="30.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.5" y="1454.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (192 samples, 0.58%)</title><rect x="379.8" y="1427.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (168 samples, 0.51%)</title><rect x="379.8" y="1411.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (98 samples, 0.30%)</title><rect x="379.8" y="1395.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.8" y="1406.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (98 samples, 0.30%)</title><rect x="379.8" y="1379.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (90 samples, 0.27%)</title><rect x="379.8" y="1363.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (81 samples, 0.25%)</title><rect x="380.1" y="1347.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (63 samples, 0.19%)</title><rect x="380.1" y="1331.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (63 samples, 0.19%)</title><rect x="380.1" y="1315.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (7 samples, 0.02%)</title><rect x="380.4" y="1299.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.4" y="1310.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (43 samples, 0.13%)</title><rect x="380.6" y="1299.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.6" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (43 samples, 0.13%)</title><rect x="380.6" y="1283.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (43 samples, 0.13%)</title><rect x="380.6" y="1267.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (43 samples, 0.13%)</title><rect x="380.6" y="1251.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.6" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (43 samples, 0.13%)</title><rect x="380.6" y="1235.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (40 samples, 0.12%)</title><rect x="380.7" y="1219.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.7" y="1230.0"></text>
</g>
<g>
<title>socket (32 samples, 0.10%)</title><rect x="381.0" y="1203.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="384.0" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.09%)</title><rect x="381.1" y="1187.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.1" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.09%)</title><rect x="381.1" y="1171.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.1" y="1182.0"></text>
</g>
<g>
<title>sys_socket (28 samples, 0.08%)</title><rect x="381.2" y="1155.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.2" y="1166.0"></text>
</g>
<g>
<title>__sock_create (18 samples, 0.05%)</title><rect x="381.2" y="1139.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="384.2" y="1150.0"></text>
</g>
<g>
<title>inet6_create (8 samples, 0.02%)</title><rect x="381.2" y="1123.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="384.2" y="1134.0"></text>
</g>
<g>
<title>sock_alloc (8 samples, 0.02%)</title><rect x="381.5" y="1123.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.5" y="1134.0"></text>
</g>
<g>
<title>new_inode_pseudo (8 samples, 0.02%)</title><rect x="381.5" y="1107.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.5" y="1118.0"></text>
</g>
<g>
<title>alloc_inode (8 samples, 0.02%)</title><rect x="381.5" y="1091.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="384.5" y="1102.0"></text>
</g>
<g>
<title>sock_map_fd (10 samples, 0.03%)</title><rect x="381.8" y="1139.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.8" y="1150.0"></text>
</g>
<g>
<title>sock_alloc_file (9 samples, 0.03%)</title><rect x="381.8" y="1123.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (12 samples, 0.04%)</title><rect x="382.4" y="1331.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (12 samples, 0.04%)</title><rect x="382.4" y="1315.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (8 samples, 0.02%)</title><rect x="383.0" y="1363.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (8 samples, 0.02%)</title><rect x="383.0" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (8 samples, 0.02%)</title><rect x="383.0" y="1331.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (65 samples, 0.20%)</title><rect x="383.5" y="1395.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.5" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$482/379005859.apply (62 samples, 0.19%)</title><rect x="383.6" y="1379.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.6" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (62 samples, 0.19%)</title><rect x="383.6" y="1363.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (62 samples, 0.19%)</title><rect x="383.6" y="1347.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (58 samples, 0.18%)</title><rect x="383.6" y="1331.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (49 samples, 0.15%)</title><rect x="383.9" y="1315.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (49 samples, 0.15%)</title><rect x="383.9" y="1299.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.9" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (49 samples, 0.15%)</title><rect x="383.9" y="1283.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.receive (7 samples, 0.02%)</title><rect x="384.9" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.9" y="1278.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.02%)</title><rect x="385.2" y="1267.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="388.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (14 samples, 0.04%)</title><rect x="386.1" y="1411.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (643 samples, 1.95%)</title><rect x="386.7" y="1427.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.7" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (643 samples, 1.95%)</title><rect x="386.7" y="1411.0" width="22.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.7" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (643 samples, 1.95%)</title><rect x="386.7" y="1395.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.7" y="1406.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (643 samples, 1.95%)</title><rect x="386.7" y="1379.0" width="22.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.7" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (17 samples, 0.05%)</title><rect x="386.7" y="1363.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (17 samples, 0.05%)</title><rect x="386.7" y="1347.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (17 samples, 0.05%)</title><rect x="386.7" y="1331.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (11 samples, 0.03%)</title><rect x="386.7" y="1315.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (8 samples, 0.02%)</title><rect x="386.7" y="1299.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop$ (8 samples, 0.02%)</title><rect x="386.7" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop (8 samples, 0.02%)</title><rect x="386.7" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (9 samples, 0.03%)</title><rect x="387.4" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (9 samples, 0.03%)</title><rect x="387.4" y="1347.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (9 samples, 0.03%)</title><rect x="387.4" y="1331.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (9 samples, 0.03%)</title><rect x="387.4" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (9 samples, 0.03%)</title><rect x="387.4" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (9 samples, 0.03%)</title><rect x="387.4" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (8 samples, 0.02%)</title><rect x="387.4" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (8 samples, 0.02%)</title><rect x="387.4" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.4" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (8 samples, 0.02%)</title><rect x="387.4" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (611 samples, 1.85%)</title><rect x="387.7" y="1363.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.7" y="1374.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (603 samples, 1.83%)</title><rect x="387.8" y="1347.0" width="21.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.8" y="1358.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (67 samples, 0.20%)</title><rect x="387.9" y="1331.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (23 samples, 0.07%)</title><rect x="388.4" y="1315.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (7 samples, 0.02%)</title><rect x="388.5" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (7 samples, 0.02%)</title><rect x="388.5" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (11 samples, 0.03%)</title><rect x="388.8" y="1299.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (11 samples, 0.03%)</title><rect x="388.8" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (11 samples, 0.03%)</title><rect x="388.8" y="1267.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (8 samples, 0.02%)</title><rect x="388.8" y="1251.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (8 samples, 0.02%)</title><rect x="388.8" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (8 samples, 0.02%)</title><rect x="388.8" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (7 samples, 0.02%)</title><rect x="388.8" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (7 samples, 0.02%)</title><rect x="388.8" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (7 samples, 0.02%)</title><rect x="388.8" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.02%)</title><rect x="388.8" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (23 samples, 0.07%)</title><rect x="389.4" y="1315.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (22 samples, 0.07%)</title><rect x="389.4" y="1299.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$$Lambda$489/288624528.apply (22 samples, 0.07%)</title><rect x="389.4" y="1283.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1$adapted (22 samples, 0.07%)</title><rect x="389.4" y="1267.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1 (22 samples, 0.07%)</title><rect x="389.4" y="1251.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (22 samples, 0.07%)</title><rect x="389.4" y="1235.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized (7 samples, 0.02%)</title><rect x="389.5" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (11 samples, 0.03%)</title><rect x="389.8" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (141 samples, 0.43%)</title><rect x="390.3" y="1331.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (137 samples, 0.41%)</title><rect x="390.4" y="1315.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (126 samples, 0.38%)</title><rect x="390.7" y="1299.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (126 samples, 0.38%)</title><rect x="390.7" y="1283.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (7 samples, 0.02%)</title><rect x="390.8" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (115 samples, 0.35%)</title><rect x="391.1" y="1267.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.1" y="1278.0"></text>
</g>
<g>
<title>akka/event/BusLogging.&lt;init&gt; (20 samples, 0.06%)</title><rect x="391.1" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.1" y="1262.0"></text>
</g>
<g>
<title>akka/event/BusLogging.&lt;init&gt; (12 samples, 0.04%)</title><rect x="391.2" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.2" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (94 samples, 0.28%)</title><rect x="391.8" y="1251.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.8" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (69 samples, 0.21%)</title><rect x="391.9" y="1235.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.9" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (66 samples, 0.20%)</title><rect x="392.0" y="1219.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (62 samples, 0.19%)</title><rect x="392.1" y="1203.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (58 samples, 0.18%)</title><rect x="392.1" y="1187.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (41 samples, 0.12%)</title><rect x="392.1" y="1171.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (31 samples, 0.09%)</title><rect x="392.4" y="1155.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (29 samples, 0.09%)</title><rect x="392.5" y="1139.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (16 samples, 0.05%)</title><rect x="392.6" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.6" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.03%)</title><rect x="392.8" y="1107.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="395.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (16 samples, 0.05%)</title><rect x="393.6" y="1171.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (15 samples, 0.05%)</title><rect x="393.6" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.fillNull (8 samples, 0.02%)</title><rect x="393.9" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.9" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (8 samples, 0.02%)</title><rect x="393.9" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="1134.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (23 samples, 0.07%)</title><rect x="394.3" y="1235.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (392 samples, 1.19%)</title><rect x="395.3" y="1331.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (390 samples, 1.18%)</title><rect x="395.3" y="1315.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (7 samples, 0.02%)</title><rect x="395.6" y="1299.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onPush (8 samples, 0.02%)</title><rect x="395.9" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (16 samples, 0.05%)</title><rect x="396.2" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (16 samples, 0.05%)</title><rect x="396.2" y="1283.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (293 samples, 0.89%)</title><rect x="396.9" y="1299.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onUpstreamFinish (26 samples, 0.08%)</title><rect x="396.9" y="1283.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (20 samples, 0.06%)</title><rect x="397.0" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (18 samples, 0.05%)</title><rect x="397.0" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (15 samples, 0.05%)</title><rect x="397.2" y="1235.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (8 samples, 0.02%)</title><rect x="397.2" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (8 samples, 0.02%)</title><rect x="397.2" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (255 samples, 0.77%)</title><rect x="398.2" y="1283.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (249 samples, 0.75%)</title><rect x="398.2" y="1267.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.2" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (239 samples, 0.72%)</title><rect x="398.5" y="1251.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (239 samples, 0.72%)</title><rect x="398.5" y="1235.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.5" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (239 samples, 0.72%)</title><rect x="398.5" y="1219.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.5" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (235 samples, 0.71%)</title><rect x="398.7" y="1203.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (235 samples, 0.71%)</title><rect x="398.7" y="1187.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (230 samples, 0.70%)</title><rect x="398.9" y="1171.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.9" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (230 samples, 0.70%)</title><rect x="398.9" y="1155.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (229 samples, 0.69%)</title><rect x="398.9" y="1139.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.9" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (229 samples, 0.69%)</title><rect x="398.9" y="1123.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (229 samples, 0.69%)</title><rect x="398.9" y="1107.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (200 samples, 0.61%)</title><rect x="399.3" y="1091.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (199 samples, 0.60%)</title><rect x="399.3" y="1075.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (192 samples, 0.58%)</title><rect x="399.4" y="1059.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.4" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (186 samples, 0.56%)</title><rect x="399.6" y="1043.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.6" y="1054.0"></text>
</g>
<g>
<title>itable stub (17 samples, 0.05%)</title><rect x="400.1" y="1027.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="403.1" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (155 samples, 0.47%)</title><rect x="400.7" y="1027.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.7" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (152 samples, 0.46%)</title><rect x="400.8" y="1011.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.8" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (152 samples, 0.46%)</title><rect x="400.8" y="995.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.8" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (152 samples, 0.46%)</title><rect x="400.8" y="979.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.8" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (152 samples, 0.46%)</title><rect x="400.8" y="963.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.8" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (152 samples, 0.46%)</title><rect x="400.8" y="947.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.8" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (139 samples, 0.42%)</title><rect x="400.9" y="931.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.9" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (136 samples, 0.41%)</title><rect x="401.0" y="915.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.0" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (135 samples, 0.41%)</title><rect x="401.0" y="899.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.0" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (135 samples, 0.41%)</title><rect x="401.0" y="883.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.0" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (135 samples, 0.41%)</title><rect x="401.0" y="867.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.0" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (133 samples, 0.40%)</title><rect x="401.0" y="851.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (133 samples, 0.40%)</title><rect x="401.0" y="835.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (133 samples, 0.40%)</title><rect x="401.0" y="819.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (130 samples, 0.39%)</title><rect x="401.1" y="803.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (124 samples, 0.38%)</title><rect x="401.3" y="787.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (123 samples, 0.37%)</title><rect x="401.4" y="771.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (123 samples, 0.37%)</title><rect x="401.4" y="755.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.02%)</title><rect x="401.5" y="739.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="404.5" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (110 samples, 0.33%)</title><rect x="401.8" y="739.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="404.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (102 samples, 0.31%)</title><rect x="402.1" y="723.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="405.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (101 samples, 0.31%)</title><rect x="402.1" y="707.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="405.1" y="718.0"></text>
</g>
<g>
<title>sys_futex (95 samples, 0.29%)</title><rect x="402.3" y="691.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.3" y="702.0"></text>
</g>
<g>
<title>do_futex (95 samples, 0.29%)</title><rect x="402.3" y="675.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (94 samples, 0.28%)</title><rect x="402.4" y="659.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="405.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (86 samples, 0.26%)</title><rect x="402.7" y="643.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="405.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (86 samples, 0.26%)</title><rect x="402.7" y="627.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (85 samples, 0.26%)</title><rect x="402.7" y="611.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="405.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.03%)</title><rect x="405.8" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.8" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (13 samples, 0.04%)</title><rect x="406.4" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (13 samples, 0.04%)</title><rect x="406.4" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.04%)</title><rect x="406.4" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.04%)</title><rect x="406.4" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.04%)</title><rect x="406.4" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.03%)</title><rect x="406.4" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.03%)</title><rect x="406.4" y="995.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.03%)</title><rect x="406.4" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (10 samples, 0.03%)</title><rect x="406.4" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.03%)</title><rect x="406.4" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.4" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (26 samples, 0.08%)</title><rect x="407.3" y="1299.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (19 samples, 0.06%)</title><rect x="407.6" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (8 samples, 0.02%)</title><rect x="407.6" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (10 samples, 0.03%)</title><rect x="407.9" y="1267.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.chasePush (9 samples, 0.03%)</title><rect x="407.9" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (7 samples, 0.02%)</title><rect x="408.0" y="1235.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (9 samples, 0.03%)</title><rect x="408.3" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.3" y="1310.0"></text>
</g>
<g>
<title>itable stub (15 samples, 0.05%)</title><rect x="408.7" y="1299.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="411.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.remWatcher (10 samples, 0.03%)</title><rect x="409.8" y="1443.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher$ (10 samples, 0.03%)</title><rect x="409.8" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher (9 samples, 0.03%)</title><rect x="409.8" y="1411.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (204 samples, 0.62%)</title><rect x="410.1" y="1443.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (180 samples, 0.54%)</title><rect x="410.2" y="1427.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (180 samples, 0.54%)</title><rect x="410.2" y="1411.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (115 samples, 0.35%)</title><rect x="410.3" y="1395.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (115 samples, 0.35%)</title><rect x="410.3" y="1379.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (115 samples, 0.35%)</title><rect x="410.3" y="1363.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (115 samples, 0.35%)</title><rect x="410.3" y="1347.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (115 samples, 0.35%)</title><rect x="410.3" y="1331.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (114 samples, 0.35%)</title><rect x="410.3" y="1315.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (112 samples, 0.34%)</title><rect x="410.3" y="1299.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (112 samples, 0.34%)</title><rect x="410.3" y="1283.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (112 samples, 0.34%)</title><rect x="410.3" y="1267.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (112 samples, 0.34%)</title><rect x="410.3" y="1251.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (112 samples, 0.34%)</title><rect x="410.3" y="1235.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (112 samples, 0.34%)</title><rect x="410.3" y="1219.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (110 samples, 0.33%)</title><rect x="410.4" y="1203.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (110 samples, 0.33%)</title><rect x="410.4" y="1187.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (110 samples, 0.33%)</title><rect x="410.4" y="1171.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (110 samples, 0.33%)</title><rect x="410.4" y="1155.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.4" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.02%)</title><rect x="410.4" y="1139.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="413.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (101 samples, 0.31%)</title><rect x="410.7" y="1139.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="413.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 0.28%)</title><rect x="411.0" y="1123.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 0.28%)</title><rect x="411.0" y="1107.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.0" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.03%)</title><rect x="411.2" y="1091.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="414.2" y="1102.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.03%)</title><rect x="411.2" y="1075.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.2" y="1086.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.03%)</title><rect x="411.2" y="1059.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.2" y="1070.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.02%)</title><rect x="411.3" y="1043.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="414.3" y="1054.0"></text>
</g>
<g>
<title>sys_futex (77 samples, 0.23%)</title><rect x="411.5" y="1091.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="414.5" y="1102.0"></text>
</g>
<g>
<title>do_futex (77 samples, 0.23%)</title><rect x="411.5" y="1075.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.5" y="1086.0"></text>
</g>
<g>
<title>futex_wake (77 samples, 0.23%)</title><rect x="411.5" y="1059.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.5" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (70 samples, 0.21%)</title><rect x="411.8" y="1043.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.8" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (70 samples, 0.21%)</title><rect x="411.8" y="1027.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.8" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (70 samples, 0.21%)</title><rect x="411.8" y="1011.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.8" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (52 samples, 0.16%)</title><rect x="414.4" y="1395.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.&lt;init&gt; (42 samples, 0.13%)</title><rect x="414.4" y="1379.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.$init$ (8 samples, 0.02%)</title><rect x="414.7" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.akka$actor$dungeon$Children$$_functionRefsDoNotCallMeDirectly_$eq (7 samples, 0.02%)</title><rect x="414.7" y="1347.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (7 samples, 0.02%)</title><rect x="414.7" y="1331.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.$init$ (21 samples, 0.06%)</title><rect x="415.1" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (10 samples, 0.03%)</title><rect x="415.9" y="1379.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (10 samples, 0.03%)</title><rect x="415.9" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (10 samples, 0.03%)</title><rect x="415.9" y="1347.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.replaceWith (10 samples, 0.03%)</title><rect x="416.3" y="1395.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.locked (10 samples, 0.03%)</title><rect x="416.3" y="1379.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.3" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (7 samples, 0.02%)</title><rect x="416.4" y="1363.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell$$Lambda$139/618102627.apply$mcV$sp (7 samples, 0.02%)</title><rect x="416.4" y="1347.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.$anonfun$replaceWith$1 (7 samples, 0.02%)</title><rect x="416.4" y="1331.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (22 samples, 0.07%)</title><rect x="416.6" y="1427.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (22 samples, 0.07%)</title><rect x="416.6" y="1411.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (22 samples, 0.07%)</title><rect x="416.6" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (14 samples, 0.04%)</title><rect x="416.9" y="1379.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (13 samples, 0.04%)</title><rect x="416.9" y="1363.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (13 samples, 0.04%)</title><rect x="416.9" y="1347.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (12 samples, 0.04%)</title><rect x="416.9" y="1331.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (428 samples, 1.30%)</title><rect x="417.4" y="1443.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (428 samples, 1.30%)</title><rect x="417.4" y="1427.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (427 samples, 1.29%)</title><rect x="417.4" y="1411.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (418 samples, 1.27%)</title><rect x="417.8" y="1395.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (48 samples, 0.15%)</title><rect x="417.9" y="1379.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.9" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (47 samples, 0.14%)</title><rect x="417.9" y="1363.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.9" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (28 samples, 0.08%)</title><rect x="417.9" y="1347.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (24 samples, 0.07%)</title><rect x="418.1" y="1331.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (20 samples, 0.06%)</title><rect x="418.2" y="1315.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (19 samples, 0.06%)</title><rect x="418.9" y="1347.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (16 samples, 0.05%)</title><rect x="418.9" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (11 samples, 0.03%)</title><rect x="419.1" y="1315.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (11 samples, 0.03%)</title><rect x="419.1" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (10 samples, 0.03%)</title><rect x="419.1" y="1283.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (89 samples, 0.27%)</title><rect x="419.6" y="1379.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (84 samples, 0.25%)</title><rect x="419.8" y="1363.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.8" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (80 samples, 0.24%)</title><rect x="419.9" y="1347.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.9" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (29 samples, 0.09%)</title><rect x="419.9" y="1331.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (16 samples, 0.05%)</title><rect x="420.2" y="1315.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (8 samples, 0.02%)</title><rect x="420.4" y="1299.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (49 samples, 0.15%)</title><rect x="421.0" y="1331.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (38 samples, 0.12%)</title><rect x="421.1" y="1315.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (27 samples, 0.08%)</title><rect x="421.5" y="1299.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (26 samples, 0.08%)</title><rect x="421.5" y="1283.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (26 samples, 0.08%)</title><rect x="421.5" y="1267.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (8 samples, 0.02%)</title><rect x="422.2" y="1251.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (8 samples, 0.02%)</title><rect x="422.4" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stopFunctionRefs (9 samples, 0.03%)</title><rect x="422.8" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (119 samples, 0.36%)</title><rect x="423.3" y="1379.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (119 samples, 0.36%)</title><rect x="423.3" y="1363.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (119 samples, 0.36%)</title><rect x="423.3" y="1347.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (119 samples, 0.36%)</title><rect x="423.3" y="1331.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (115 samples, 0.35%)</title><rect x="423.4" y="1315.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (9 samples, 0.03%)</title><rect x="423.4" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (105 samples, 0.32%)</title><rect x="423.7" y="1299.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (103 samples, 0.31%)</title><rect x="423.7" y="1283.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (103 samples, 0.31%)</title><rect x="423.7" y="1267.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.7" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (103 samples, 0.31%)</title><rect x="423.7" y="1251.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (103 samples, 0.31%)</title><rect x="423.7" y="1235.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (103 samples, 0.31%)</title><rect x="423.7" y="1219.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (103 samples, 0.31%)</title><rect x="423.7" y="1203.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (103 samples, 0.31%)</title><rect x="423.7" y="1187.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (101 samples, 0.31%)</title><rect x="423.8" y="1171.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (101 samples, 0.31%)</title><rect x="423.8" y="1155.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (101 samples, 0.31%)</title><rect x="423.8" y="1139.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.8" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.03%)</title><rect x="423.8" y="1123.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="426.8" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (88 samples, 0.27%)</title><rect x="424.2" y="1123.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="427.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 0.23%)</title><rect x="424.7" y="1107.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.7" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 0.23%)</title><rect x="424.7" y="1091.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.7" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.03%)</title><rect x="424.8" y="1075.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="427.8" y="1086.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.03%)</title><rect x="424.8" y="1059.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.8" y="1070.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.03%)</title><rect x="424.9" y="1043.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.9" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.03%)</title><rect x="424.9" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="427.9" y="1038.0"></text>
</g>
<g>
<title>sys_futex (58 samples, 0.18%)</title><rect x="425.3" y="1075.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.3" y="1086.0"></text>
</g>
<g>
<title>do_futex (57 samples, 0.17%)</title><rect x="425.3" y="1059.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.3" y="1070.0"></text>
</g>
<g>
<title>futex_wake (56 samples, 0.17%)</title><rect x="425.3" y="1043.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.3" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (44 samples, 0.13%)</title><rect x="425.7" y="1027.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.7" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (44 samples, 0.13%)</title><rect x="425.7" y="1011.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="428.7" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 0.13%)</title><rect x="425.7" y="995.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (26 samples, 0.08%)</title><rect x="427.6" y="1379.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (26 samples, 0.08%)</title><rect x="427.6" y="1363.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.6" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (21 samples, 0.06%)</title><rect x="427.7" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.7" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (14 samples, 0.04%)</title><rect x="427.7" y="1331.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.7" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (14 samples, 0.04%)</title><rect x="427.7" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (12 samples, 0.04%)</title><rect x="427.8" y="1299.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (12 samples, 0.04%)</title><rect x="427.8" y="1283.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.8" y="1294.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (12 samples, 0.04%)</title><rect x="427.8" y="1267.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (115 samples, 0.35%)</title><rect x="428.6" y="1379.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (114 samples, 0.35%)</title><rect x="428.6" y="1363.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (113 samples, 0.34%)</title><rect x="428.7" y="1347.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.7" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (113 samples, 0.34%)</title><rect x="428.7" y="1331.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.7" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (110 samples, 0.33%)</title><rect x="428.7" y="1315.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (94 samples, 0.28%)</title><rect x="428.8" y="1299.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (87 samples, 0.26%)</title><rect x="428.8" y="1283.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (87 samples, 0.26%)</title><rect x="428.8" y="1267.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (74 samples, 0.22%)</title><rect x="428.9" y="1251.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.06%)</title><rect x="429.0" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (43 samples, 0.13%)</title><rect x="429.7" y="1235.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (43 samples, 0.13%)</title><rect x="429.7" y="1219.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (40 samples, 0.12%)</title><rect x="429.7" y="1203.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (29 samples, 0.09%)</title><rect x="429.7" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (26 samples, 0.08%)</title><rect x="429.8" y="1171.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (26 samples, 0.08%)</title><rect x="429.8" y="1155.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.02%)</title><rect x="429.9" y="1139.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.9" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.03%)</title><rect x="430.4" y="1139.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="433.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (11 samples, 0.03%)</title><rect x="430.7" y="1187.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (11 samples, 0.03%)</title><rect x="430.7" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.03%)</title><rect x="431.2" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.03%)</title><rect x="431.2" y="1219.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.02%)</title><rect x="431.3" y="1203.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.03%)</title><rect x="431.6" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.02%)</title><rect x="431.9" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.02%)</title><rect x="431.9" y="1267.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.02%)</title><rect x="432.2" y="1299.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (214 samples, 0.65%)</title><rect x="432.7" y="1443.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (214 samples, 0.65%)</title><rect x="432.7" y="1427.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (213 samples, 0.64%)</title><rect x="432.7" y="1411.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (171 samples, 0.52%)</title><rect x="433.0" y="1395.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (171 samples, 0.52%)</title><rect x="433.0" y="1379.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (171 samples, 0.52%)</title><rect x="433.0" y="1363.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (160 samples, 0.48%)</title><rect x="433.3" y="1347.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (160 samples, 0.48%)</title><rect x="433.3" y="1331.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (159 samples, 0.48%)</title><rect x="433.3" y="1315.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (158 samples, 0.48%)</title><rect x="433.4" y="1299.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (56 samples, 0.17%)</title><rect x="433.4" y="1283.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (56 samples, 0.17%)</title><rect x="433.4" y="1267.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (56 samples, 0.17%)</title><rect x="433.4" y="1251.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (101 samples, 0.31%)</title><rect x="435.4" y="1283.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (97 samples, 0.29%)</title><rect x="435.6" y="1267.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (97 samples, 0.29%)</title><rect x="435.6" y="1251.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (97 samples, 0.29%)</title><rect x="435.6" y="1235.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (97 samples, 0.29%)</title><rect x="435.6" y="1219.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (97 samples, 0.29%)</title><rect x="435.6" y="1203.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (94 samples, 0.28%)</title><rect x="435.6" y="1187.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.blacken (15 samples, 0.05%)</title><rect x="435.6" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.black (9 samples, 0.03%)</title><rect x="435.8" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$BlackTree.&lt;init&gt; (7 samples, 0.02%)</title><rect x="435.8" y="1139.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.&lt;init&gt; (7 samples, 0.02%)</title><rect x="435.8" y="1123.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (79 samples, 0.24%)</title><rect x="436.1" y="1171.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (22 samples, 0.07%)</title><rect x="436.1" y="1155.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (16 samples, 0.05%)</title><rect x="436.3" y="1139.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (8 samples, 0.02%)</title><rect x="436.6" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (57 samples, 0.17%)</title><rect x="436.9" y="1155.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (57 samples, 0.17%)</title><rect x="436.9" y="1139.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (27 samples, 0.08%)</title><rect x="436.9" y="1123.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (27 samples, 0.08%)</title><rect x="436.9" y="1107.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (10 samples, 0.03%)</title><rect x="436.9" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.03%)</title><rect x="436.9" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (16 samples, 0.05%)</title><rect x="437.3" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (16 samples, 0.05%)</title><rect x="437.3" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (12 samples, 0.04%)</title><rect x="437.3" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (12 samples, 0.04%)</title><rect x="437.3" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (9 samples, 0.03%)</title><rect x="437.3" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (9 samples, 0.03%)</title><rect x="437.3" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (7 samples, 0.02%)</title><rect x="437.3" y="995.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (30 samples, 0.09%)</title><rect x="437.8" y="1123.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (28 samples, 0.08%)</title><rect x="437.9" y="1107.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (17 samples, 0.05%)</title><rect x="437.9" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (16 samples, 0.05%)</title><rect x="437.9" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (12 samples, 0.04%)</title><rect x="437.9" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.03%)</title><rect x="438.0" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (9 samples, 0.03%)</title><rect x="438.0" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (9 samples, 0.03%)</title><rect x="438.0" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (11 samples, 0.03%)</title><rect x="438.5" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (11 samples, 0.03%)</title><rect x="438.5" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (10 samples, 0.03%)</title><rect x="438.6" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.03%)</title><rect x="438.6" y="1043.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (10 samples, 0.03%)</title><rect x="438.6" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.03%)</title><rect x="438.6" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (8 samples, 0.02%)</title><rect x="438.6" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (8 samples, 0.02%)</title><rect x="438.6" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.02%)</title><rect x="438.7" y="963.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.02%)</title><rect x="438.7" y="947.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.02%)</title><rect x="438.7" y="931.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.02%)</title><rect x="438.7" y="915.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.7" y="926.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (7 samples, 0.02%)</title><rect x="439.2" y="1395.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (7 samples, 0.02%)</title><rect x="439.2" y="1379.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (8 samples, 0.02%)</title><rect x="439.4" y="1395.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (14 samples, 0.04%)</title><rect x="439.7" y="1395.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.7" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (13 samples, 0.04%)</title><rect x="439.8" y="1379.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$654/653145099.apply$mcV$sp (12 samples, 0.04%)</title><rect x="439.8" y="1363.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watchedActorTerminated$1 (12 samples, 0.04%)</title><rect x="439.8" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (11 samples, 0.03%)</title><rect x="439.8" y="1331.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (10 samples, 0.03%)</title><rect x="439.9" y="1315.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (10 samples, 0.03%)</title><rect x="439.9" y="1299.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (8 samples, 0.02%)</title><rect x="439.9" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (8 samples, 0.02%)</title><rect x="439.9" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (7 samples, 0.02%)</title><rect x="439.9" y="1251.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (85 samples, 0.26%)</title><rect x="440.6" y="1475.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (85 samples, 0.26%)</title><rect x="440.6" y="1459.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.6" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (85 samples, 0.26%)</title><rect x="440.6" y="1443.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.6" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueueGet (7 samples, 0.02%)</title><rect x="440.6" y="1427.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.6" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (25 samples, 0.08%)</title><rect x="440.8" y="1427.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.8" y="1438.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (25 samples, 0.08%)</title><rect x="440.8" y="1411.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.8" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Create.equals (9 samples, 0.03%)</title><rect x="441.1" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.1" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/DeathWatchNotification.equals (7 samples, 0.02%)</title><rect x="441.4" y="1395.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.4" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (40 samples, 0.12%)</title><rect x="441.8" y="1427.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.8" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (40 samples, 0.12%)</title><rect x="441.8" y="1411.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.8" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Create.next (7 samples, 0.02%)</title><rect x="441.8" y="1395.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.8" y="1406.0"></text>
</g>
<g>
<title>itable stub (15 samples, 0.05%)</title><rect x="442.7" y="1395.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="445.7" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Terminate.equals (8 samples, 0.02%)</title><rect x="443.3" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.3" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (11 samples, 0.03%)</title><rect x="443.6" y="1475.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Create.unlink (7 samples, 0.02%)</title><rect x="443.6" y="1459.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.6" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.isClosed (8 samples, 0.02%)</title><rect x="444.0" y="1475.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.0" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (8 samples, 0.02%)</title><rect x="444.0" y="1459.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.0" y="1470.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (8 samples, 0.02%)</title><rect x="444.0" y="1443.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.0" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (10,260 samples, 31.06%)</title><rect x="444.6" y="1491.0" width="366.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.6" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (10,036 samples, 30.38%)</title><rect x="445.0" y="1475.0" width="358.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.0" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (178 samples, 0.54%)</title><rect x="445.1" y="1459.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.1" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receivedTerminated (177 samples, 0.54%)</title><rect x="445.1" y="1443.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated$ (177 samples, 0.54%)</title><rect x="445.1" y="1427.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated (177 samples, 0.54%)</title><rect x="445.1" y="1411.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.1" y="1422.0"></text>
</g>
<g>
<title>scala/Option.foreach (175 samples, 0.53%)</title><rect x="445.1" y="1395.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$657/1266342610.apply (175 samples, 0.53%)</title><rect x="445.1" y="1379.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1$adapted (175 samples, 0.53%)</title><rect x="445.1" y="1363.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1 (175 samples, 0.53%)</title><rect x="445.1" y="1347.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (8 samples, 0.02%)</title><rect x="449.2" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (8 samples, 0.02%)</title><rect x="449.9" y="1331.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="452.9" y="1342.0"></text>
</g>
<g>
<title>itable stub (21 samples, 0.06%)</title><rect x="450.4" y="1331.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="453.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeoutIfNeeded (23 samples, 0.07%)</title><rect x="451.4" y="1459.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.4" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded$ (17 samples, 0.05%)</title><rect x="451.6" y="1443.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded (17 samples, 0.05%)</title><rect x="451.6" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (9 samples, 0.03%)</title><rect x="451.9" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (9 samples, 0.03%)</title><rect x="451.9" y="1395.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (9 samples, 0.03%)</title><rect x="451.9" y="1379.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (15 samples, 0.05%)</title><rect x="452.2" y="1459.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (15 samples, 0.05%)</title><rect x="452.2" y="1443.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (15 samples, 0.05%)</title><rect x="452.2" y="1427.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (15 samples, 0.05%)</title><rect x="452.2" y="1411.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (15 samples, 0.05%)</title><rect x="452.2" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (14 samples, 0.04%)</title><rect x="452.3" y="1379.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (9,815 samples, 29.71%)</title><rect x="452.8" y="1459.0" width="350.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.8" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.aroundReceive (74 samples, 0.22%)</title><rect x="452.8" y="1443.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (74 samples, 0.22%)</title><rect x="452.8" y="1427.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (74 samples, 0.22%)</title><rect x="452.8" y="1411.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.8" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (74 samples, 0.22%)</title><rect x="452.8" y="1395.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.8" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$anonfun$tryingToJoin$1.applyOrElse (74 samples, 0.22%)</title><rect x="452.8" y="1379.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.8" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.join (74 samples, 0.22%)</title><rect x="452.8" y="1363.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.8" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (61 samples, 0.18%)</title><rect x="452.8" y="1347.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.8" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.createRapidClusterBuilder$1 (10 samples, 0.03%)</title><rect x="452.8" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.setMetadata (8 samples, 0.02%)</title><rect x="452.8" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.8" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.putAllMetadata (8 samples, 0.02%)</title><rect x="452.8" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.8" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.internalGetMutableMetadata (8 samples, 0.02%)</title><rect x="452.8" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.8" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$MetadataDefaultEntryHolder.&lt;clinit&gt; (8 samples, 0.02%)</title><rect x="452.8" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.8" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Remoting.&lt;clinit&gt; (7 samples, 0.02%)</title><rect x="452.8" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.8" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (50 samples, 0.15%)</title><rect x="453.2" y="1331.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.2" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (50 samples, 0.15%)</title><rect x="453.2" y="1315.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.2" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (23 samples, 0.07%)</title><rect x="453.2" y="1299.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.bindAndHandle (9 samples, 0.03%)</title><rect x="453.3" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.fuseServerBidiFlow (7 samples, 0.02%)</title><rect x="453.3" y="1267.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteResult$.route2HandlerFlow$default$7 (7 samples, 0.02%)</title><rect x="453.6" y="1283.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RejectionHandler$.&lt;clinit&gt; (7 samples, 0.02%)</title><rect x="453.6" y="1267.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.6" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (25 samples, 0.08%)</title><rect x="454.0" y="1299.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.0" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.createClusterFromJoinResponse (16 samples, 0.05%)</title><rect x="454.1" y="1283.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.1" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.&lt;init&gt; (8 samples, 0.02%)</title><rect x="454.1" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.1" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.&lt;init&gt; (8 samples, 0.02%)</title><rect x="455.0" y="1347.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.0" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (14 samples, 0.04%)</title><rect x="455.5" y="1443.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (14 samples, 0.04%)</title><rect x="455.5" y="1427.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (14 samples, 0.04%)</title><rect x="455.5" y="1411.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (14 samples, 0.04%)</title><rect x="455.5" y="1395.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.5" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishChanges (12 samples, 0.04%)</title><rect x="455.5" y="1379.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.5" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishDiff (12 samples, 0.04%)</title><rect x="455.5" y="1363.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (82 samples, 0.25%)</title><rect x="456.0" y="1443.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (82 samples, 0.25%)</title><rect x="456.0" y="1427.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (82 samples, 0.25%)</title><rect x="456.0" y="1411.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.0" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (82 samples, 0.25%)</title><rect x="456.0" y="1395.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.0" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (82 samples, 0.25%)</title><rect x="456.0" y="1379.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.0" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (79 samples, 0.24%)</title><rect x="456.0" y="1363.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.0" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (79 samples, 0.24%)</title><rect x="456.0" y="1347.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (79 samples, 0.24%)</title><rect x="456.0" y="1331.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (79 samples, 0.24%)</title><rect x="456.0" y="1315.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (79 samples, 0.24%)</title><rect x="456.0" y="1299.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (79 samples, 0.24%)</title><rect x="456.0" y="1283.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (79 samples, 0.24%)</title><rect x="456.0" y="1267.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (79 samples, 0.24%)</title><rect x="456.0" y="1251.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (72 samples, 0.22%)</title><rect x="456.2" y="1235.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (72 samples, 0.22%)</title><rect x="456.2" y="1219.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (72 samples, 0.22%)</title><rect x="456.2" y="1203.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (72 samples, 0.22%)</title><rect x="456.2" y="1187.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (64 samples, 0.19%)</title><rect x="456.3" y="1171.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (61 samples, 0.18%)</title><rect x="456.3" y="1155.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (58 samples, 0.18%)</title><rect x="456.3" y="1139.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (55 samples, 0.17%)</title><rect x="456.3" y="1123.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (49 samples, 0.15%)</title><rect x="456.4" y="1107.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (40 samples, 0.12%)</title><rect x="456.4" y="1091.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (34 samples, 0.10%)</title><rect x="456.5" y="1075.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (28 samples, 0.08%)</title><rect x="456.5" y="1059.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (22 samples, 0.07%)</title><rect x="456.5" y="1043.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (19 samples, 0.06%)</title><rect x="456.5" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (15 samples, 0.05%)</title><rect x="456.5" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.03%)</title><rect x="456.6" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.6" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (7 samples, 0.02%)</title><rect x="457.8" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.8" y="1102.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (36 samples, 0.11%)</title><rect x="459.0" y="1443.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (36 samples, 0.11%)</title><rect x="459.0" y="1427.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (36 samples, 0.11%)</title><rect x="459.0" y="1411.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.0" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (36 samples, 0.11%)</title><rect x="459.0" y="1395.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.0" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (32 samples, 0.10%)</title><rect x="459.1" y="1379.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.1" y="1390.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$775/1914862015.apply$mcV$sp (17 samples, 0.05%)</title><rect x="459.3" y="1363.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.3" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$2 (17 samples, 0.05%)</title><rect x="459.3" y="1347.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.3" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.warn (16 samples, 0.05%)</title><rect x="459.3" y="1331.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.3" y="1342.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (16 samples, 0.05%)</title><rect x="459.3" y="1315.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.3" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (15 samples, 0.05%)</title><rect x="459.3" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.3" y="1310.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (14 samples, 0.04%)</title><rect x="459.4" y="1283.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.4" y="1294.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (14 samples, 0.04%)</title><rect x="459.4" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.4" y="1278.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (14 samples, 0.04%)</title><rect x="459.4" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (14 samples, 0.04%)</title><rect x="459.4" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.4" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (11 samples, 0.03%)</title><rect x="459.5" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (10 samples, 0.03%)</title><rect x="459.5" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.5" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (10 samples, 0.03%)</title><rect x="459.5" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (9 samples, 0.03%)</title><rect x="459.5" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.03%)</title><rect x="459.5" y="1155.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.03%)</title><rect x="459.5" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.03%)</title><rect x="459.5" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.03%)</title><rect x="459.5" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.03%)</title><rect x="459.5" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.5" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.02%)</title><rect x="459.6" y="1075.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="462.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (359 samples, 1.09%)</title><rect x="460.3" y="1443.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (359 samples, 1.09%)</title><rect x="460.3" y="1427.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (359 samples, 1.09%)</title><rect x="460.3" y="1411.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.3" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (359 samples, 1.09%)</title><rect x="460.3" y="1395.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.3" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (45 samples, 0.14%)</title><rect x="460.5" y="1379.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.5" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithFeedback (30 samples, 0.09%)</title><rect x="460.5" y="1363.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.5" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (27 samples, 0.08%)</title><rect x="460.6" y="1347.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.6" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (27 samples, 0.08%)</title><rect x="460.6" y="1331.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.6" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (21 samples, 0.06%)</title><rect x="460.8" y="1315.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (21 samples, 0.06%)</title><rect x="460.8" y="1299.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (21 samples, 0.06%)</title><rect x="460.8" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (17 samples, 0.05%)</title><rect x="460.8" y="1267.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (14 samples, 0.04%)</title><rect x="460.8" y="1251.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (14 samples, 0.04%)</title><rect x="460.8" y="1235.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (14 samples, 0.04%)</title><rect x="460.8" y="1219.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (14 samples, 0.04%)</title><rect x="460.8" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (14 samples, 0.04%)</title><rect x="460.8" y="1187.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (14 samples, 0.04%)</title><rect x="460.8" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (14 samples, 0.04%)</title><rect x="460.8" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.8" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failed (12 samples, 0.04%)</title><rect x="461.6" y="1363.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.6" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/Future.failed$ (11 samples, 0.03%)</title><rect x="461.7" y="1347.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.7" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/Future.failed (9 samples, 0.03%)</title><rect x="461.7" y="1331.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.7" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.transform (9 samples, 0.03%)</title><rect x="461.7" y="1315.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (205 samples, 0.62%)</title><rect x="462.1" y="1379.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.1" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (196 samples, 0.59%)</title><rect x="462.1" y="1363.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (152 samples, 0.46%)</title><rect x="462.3" y="1347.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.3" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (152 samples, 0.46%)</title><rect x="462.3" y="1331.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (24 samples, 0.07%)</title><rect x="462.3" y="1315.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (23 samples, 0.07%)</title><rect x="462.3" y="1299.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (23 samples, 0.07%)</title><rect x="462.3" y="1283.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$.apply (12 samples, 0.04%)</title><rect x="462.3" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.join (9 samples, 0.03%)</title><rect x="462.8" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.joinMat (9 samples, 0.03%)</title><rect x="462.8" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (120 samples, 0.36%)</title><rect x="463.2" y="1315.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (120 samples, 0.36%)</title><rect x="463.2" y="1299.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (11 samples, 0.03%)</title><rect x="463.2" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (11 samples, 0.03%)</title><rect x="463.2" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (108 samples, 0.33%)</title><rect x="463.6" y="1283.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (108 samples, 0.33%)</title><rect x="463.6" y="1267.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (108 samples, 0.33%)</title><rect x="463.6" y="1251.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$411/40510473.apply (105 samples, 0.32%)</title><rect x="463.6" y="1235.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (105 samples, 0.32%)</title><rect x="463.6" y="1219.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (53 samples, 0.16%)</title><rect x="463.8" y="1203.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (51 samples, 0.15%)</title><rect x="463.8" y="1187.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (21 samples, 0.06%)</title><rect x="463.9" y="1171.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (14 samples, 0.04%)</title><rect x="463.9" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (7 samples, 0.02%)</title><rect x="463.9" y="1139.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (13 samples, 0.04%)</title><rect x="464.7" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (11 samples, 0.03%)</title><rect x="464.7" y="1155.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (11 samples, 0.03%)</title><rect x="464.7" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (11 samples, 0.03%)</title><rect x="464.7" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (11 samples, 0.03%)</title><rect x="464.7" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (11 samples, 0.03%)</title><rect x="464.7" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/SeqFactory$Delegate.from (11 samples, 0.03%)</title><rect x="464.7" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (11 samples, 0.03%)</title><rect x="464.7" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (11 samples, 0.03%)</title><rect x="464.7" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addAll (10 samples, 0.03%)</title><rect x="464.7" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (9 samples, 0.03%)</title><rect x="464.7" y="1011.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (8 samples, 0.02%)</title><rect x="464.8" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (7 samples, 0.02%)</title><rect x="464.8" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (10 samples, 0.03%)</title><rect x="465.1" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (10 samples, 0.03%)</title><rect x="465.1" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (10 samples, 0.03%)</title><rect x="465.1" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.sorted (10 samples, 0.03%)</title><rect x="465.1" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (10 samples, 0.03%)</title><rect x="465.1" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (10 samples, 0.03%)</title><rect x="465.1" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (10 samples, 0.03%)</title><rect x="465.1" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (10 samples, 0.03%)</title><rect x="465.1" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (10 samples, 0.03%)</title><rect x="465.1" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (18 samples, 0.05%)</title><rect x="466.3" y="1203.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (9 samples, 0.03%)</title><rect x="466.5" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (13 samples, 0.04%)</title><rect x="466.9" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (13 samples, 0.04%)</title><rect x="466.9" y="1187.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (13 samples, 0.04%)</title><rect x="466.9" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (7 samples, 0.02%)</title><rect x="467.1" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (7 samples, 0.02%)</title><rect x="467.1" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (8 samples, 0.02%)</title><rect x="467.5" y="1315.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (8 samples, 0.02%)</title><rect x="467.5" y="1299.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.5" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (8 samples, 0.02%)</title><rect x="467.5" y="1283.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.5" y="1294.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (8 samples, 0.02%)</title><rect x="467.5" y="1267.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.5" y="1278.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (7 samples, 0.02%)</title><rect x="467.5" y="1251.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.5" y="1262.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (7 samples, 0.02%)</title><rect x="467.5" y="1235.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$405/1142004135.apply (7 samples, 0.02%)</title><rect x="467.5" y="1219.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (7 samples, 0.02%)</title><rect x="467.5" y="1203.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (7 samples, 0.02%)</title><rect x="467.5" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (34 samples, 0.10%)</title><rect x="467.9" y="1347.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (34 samples, 0.10%)</title><rect x="467.9" y="1331.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (34 samples, 0.10%)</title><rect x="467.9" y="1315.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (34 samples, 0.10%)</title><rect x="467.9" y="1299.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (24 samples, 0.07%)</title><rect x="467.9" y="1283.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (21 samples, 0.06%)</title><rect x="467.9" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (20 samples, 0.06%)</title><rect x="467.9" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.05%)</title><rect x="468.0" y="1235.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (17 samples, 0.05%)</title><rect x="468.0" y="1219.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (17 samples, 0.05%)</title><rect x="468.0" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.0" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (17 samples, 0.05%)</title><rect x="468.0" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (16 samples, 0.05%)</title><rect x="468.0" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (16 samples, 0.05%)</title><rect x="468.0" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (16 samples, 0.05%)</title><rect x="468.0" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (16 samples, 0.05%)</title><rect x="468.0" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (16 samples, 0.05%)</title><rect x="468.0" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (16 samples, 0.05%)</title><rect x="468.0" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.05%)</title><rect x="468.0" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (15 samples, 0.05%)</title><rect x="468.0" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (15 samples, 0.05%)</title><rect x="468.0" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (15 samples, 0.05%)</title><rect x="468.0" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (14 samples, 0.04%)</title><rect x="468.1" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (14 samples, 0.04%)</title><rect x="468.1" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (14 samples, 0.04%)</title><rect x="468.1" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (14 samples, 0.04%)</title><rect x="468.1" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (14 samples, 0.04%)</title><rect x="468.1" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (14 samples, 0.04%)</title><rect x="468.1" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.04%)</title><rect x="468.1" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (14 samples, 0.04%)</title><rect x="468.1" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (14 samples, 0.04%)</title><rect x="468.1" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.1" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (14 samples, 0.04%)</title><rect x="468.1" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (14 samples, 0.04%)</title><rect x="468.1" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.1" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (14 samples, 0.04%)</title><rect x="468.1" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.1" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (14 samples, 0.04%)</title><rect x="468.1" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.1" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (14 samples, 0.04%)</title><rect x="468.1" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.1" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (14 samples, 0.04%)</title><rect x="468.1" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.1" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (14 samples, 0.04%)</title><rect x="468.1" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.04%)</title><rect x="468.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (14 samples, 0.04%)</title><rect x="468.1" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (11 samples, 0.03%)</title><rect x="468.1" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.1" y="734.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (11 samples, 0.03%)</title><rect x="468.1" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.1" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (10 samples, 0.03%)</title><rect x="468.1" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.1" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (10 samples, 0.03%)</title><rect x="468.1" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.1" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (10 samples, 0.03%)</title><rect x="468.1" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.1" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (10 samples, 0.03%)</title><rect x="468.1" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.1" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (10 samples, 0.03%)</title><rect x="468.1" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.1" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (10 samples, 0.03%)</title><rect x="468.1" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.03%)</title><rect x="468.1" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (10 samples, 0.03%)</title><rect x="468.1" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (7 samples, 0.02%)</title><rect x="468.8" y="1283.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (104 samples, 0.31%)</title><rect x="469.4" y="1379.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.4" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (19 samples, 0.06%)</title><rect x="469.4" y="1363.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.4" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (16 samples, 0.05%)</title><rect x="469.4" y="1347.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.4" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (9 samples, 0.03%)</title><rect x="469.4" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.4" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (85 samples, 0.26%)</title><rect x="470.1" y="1363.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (85 samples, 0.26%)</title><rect x="470.1" y="1347.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.1" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (84 samples, 0.25%)</title><rect x="470.1" y="1331.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.1" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (82 samples, 0.25%)</title><rect x="470.2" y="1315.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (78 samples, 0.24%)</title><rect x="470.2" y="1299.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.2" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (78 samples, 0.24%)</title><rect x="470.2" y="1283.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.2" y="1294.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (78 samples, 0.24%)</title><rect x="470.2" y="1267.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.2" y="1278.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (78 samples, 0.24%)</title><rect x="470.2" y="1251.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.2" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (74 samples, 0.22%)</title><rect x="470.3" y="1235.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (67 samples, 0.20%)</title><rect x="470.6" y="1219.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.6" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (62 samples, 0.19%)</title><rect x="470.6" y="1203.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (58 samples, 0.18%)</title><rect x="470.6" y="1187.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.6" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (56 samples, 0.17%)</title><rect x="470.7" y="1171.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (40 samples, 0.12%)</title><rect x="470.7" y="1155.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.7" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (35 samples, 0.11%)</title><rect x="470.8" y="1139.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.hashCode (28 samples, 0.08%)</title><rect x="471.1" y="1123.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.&lt;init&gt; (8 samples, 0.02%)</title><rect x="471.1" y="1107.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/ChampBaseReverseIterator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="471.1" y="1091.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.1" y="1102.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.unorderedHash (20 samples, 0.06%)</title><rect x="471.3" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.foreach (19 samples, 0.06%)</title><rect x="471.4" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (19 samples, 0.06%)</title><rect x="471.4" y="1075.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (19 samples, 0.06%)</title><rect x="471.4" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.next (7 samples, 0.02%)</title><rect x="471.6" y="1043.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.next (7 samples, 0.02%)</title><rect x="471.6" y="1027.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.6" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$$Lambda$1075/627392078.apply (7 samples, 0.02%)</title><rect x="471.8" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.8" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.$anonfun$unorderedHash$1$adapted (7 samples, 0.02%)</title><rect x="471.8" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.8" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.$anonfun$unorderedHash$1 (7 samples, 0.02%)</title><rect x="471.8" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.8" y="1022.0"></text>
</g>
<g>
<title>scala/Some.hashCode (8 samples, 0.02%)</title><rect x="472.4" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.4" y="1166.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (8 samples, 0.02%)</title><rect x="472.4" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.4" y="1150.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (8 samples, 0.02%)</title><rect x="472.4" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.4" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.02%)</title><rect x="472.4" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.hashCode (7 samples, 0.02%)</title><rect x="472.4" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.4" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (7 samples, 0.02%)</title><rect x="472.4" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.4" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (7 samples, 0.02%)</title><rect x="472.4" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.4" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (7 samples, 0.02%)</title><rect x="472.4" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.4" y="1054.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (16 samples, 0.05%)</title><rect x="473.1" y="1443.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (16 samples, 0.05%)</title><rect x="473.1" y="1427.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (16 samples, 0.05%)</title><rect x="473.1" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.1" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (15 samples, 0.05%)</title><rect x="473.1" y="1395.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (11 samples, 0.03%)</title><rect x="473.1" y="1379.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.03%)</title><rect x="473.1" y="1363.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (11 samples, 0.03%)</title><rect x="473.1" y="1347.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (11 samples, 0.03%)</title><rect x="473.1" y="1331.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.1" y="1342.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (11 samples, 0.03%)</title><rect x="473.1" y="1315.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.1" y="1326.0"></text>
</g>
<g>
<title>akka/routing/Router.route (10 samples, 0.03%)</title><rect x="473.1" y="1299.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.1" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.send (10 samples, 0.03%)</title><rect x="473.1" y="1283.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.1" y="1294.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (9 samples, 0.03%)</title><rect x="473.2" y="1267.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (9 samples, 0.03%)</title><rect x="473.2" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (9 samples, 0.03%)</title><rect x="473.2" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.03%)</title><rect x="473.2" y="1219.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (9 samples, 0.03%)</title><rect x="473.2" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (9 samples, 0.03%)</title><rect x="473.2" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.03%)</title><rect x="473.2" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.03%)</title><rect x="473.2" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.03%)</title><rect x="473.2" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.03%)</title><rect x="473.2" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.02%)</title><rect x="473.2" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="473.2" y="1091.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.02%)</title><rect x="473.2" y="1075.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="473.2" y="1059.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.02%)</title><rect x="473.2" y="1043.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.02%)</title><rect x="473.2" y="1027.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.02%)</title><rect x="473.2" y="1011.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.02%)</title><rect x="473.2" y="995.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.02%)</title><rect x="473.2" y="979.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.02%)</title><rect x="473.2" y="963.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.02%)</title><rect x="473.2" y="947.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.2" y="958.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (171 samples, 0.52%)</title><rect x="473.7" y="1443.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (171 samples, 0.52%)</title><rect x="473.7" y="1427.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (171 samples, 0.52%)</title><rect x="473.7" y="1411.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.7" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (171 samples, 0.52%)</title><rect x="473.7" y="1395.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (169 samples, 0.51%)</title><rect x="473.7" y="1379.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (102 samples, 0.31%)</title><rect x="473.9" y="1363.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (102 samples, 0.31%)</title><rect x="473.9" y="1347.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (102 samples, 0.31%)</title><rect x="473.9" y="1331.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (102 samples, 0.31%)</title><rect x="473.9" y="1315.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.9" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (19 samples, 0.06%)</title><rect x="474.1" y="1299.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (19 samples, 0.06%)</title><rect x="474.1" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (19 samples, 0.06%)</title><rect x="474.1" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (18 samples, 0.05%)</title><rect x="474.2" y="1251.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (12 samples, 0.04%)</title><rect x="474.4" y="1235.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (11 samples, 0.03%)</title><rect x="474.4" y="1219.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.03%)</title><rect x="474.4" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.03%)</title><rect x="474.4" y="1187.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.03%)</title><rect x="474.4" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="474.4" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="474.4" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="474.4" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="474.4" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.02%)</title><rect x="474.5" y="1091.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.02%)</title><rect x="474.5" y="1075.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.02%)</title><rect x="474.5" y="1059.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (16 samples, 0.05%)</title><rect x="474.8" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (15 samples, 0.05%)</title><rect x="474.9" y="1283.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (15 samples, 0.05%)</title><rect x="474.9" y="1267.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (15 samples, 0.05%)</title><rect x="474.9" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (15 samples, 0.05%)</title><rect x="474.9" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.9" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (15 samples, 0.05%)</title><rect x="474.9" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (15 samples, 0.05%)</title><rect x="474.9" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (15 samples, 0.05%)</title><rect x="474.9" y="1187.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (15 samples, 0.05%)</title><rect x="474.9" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (15 samples, 0.05%)</title><rect x="474.9" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.05%)</title><rect x="474.9" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.05%)</title><rect x="474.9" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (15 samples, 0.05%)</title><rect x="474.9" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.05%)</title><rect x="474.9" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.05%)</title><rect x="474.9" y="1075.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.05%)</title><rect x="474.9" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.9" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.04%)</title><rect x="475.0" y="1043.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="478.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="475.1" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.03%)</title><rect x="475.1" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.1" y="1022.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.02%)</title><rect x="475.1" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="478.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.02%)</title><rect x="475.1" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="478.1" y="990.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.02%)</title><rect x="475.1" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="478.1" y="974.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (60 samples, 0.18%)</title><rect x="475.4" y="1299.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (46 samples, 0.14%)</title><rect x="475.5" y="1283.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (10 samples, 0.03%)</title><rect x="475.5" y="1267.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (7 samples, 0.02%)</title><rect x="475.5" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (7 samples, 0.02%)</title><rect x="475.5" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (7 samples, 0.02%)</title><rect x="475.5" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.5" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (35 samples, 0.11%)</title><rect x="475.9" y="1267.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (7 samples, 0.02%)</title><rect x="476.1" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.1" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (7 samples, 0.02%)</title><rect x="476.1" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.1" y="1246.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (7 samples, 0.02%)</title><rect x="476.1" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (15 samples, 0.05%)</title><rect x="476.6" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$1 (13 samples, 0.04%)</title><rect x="476.6" y="1235.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$lzycompute$1 (12 samples, 0.04%)</title><rect x="476.7" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.7" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getProducedMessageQueueType (12 samples, 0.04%)</title><rect x="476.7" y="1203.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.7" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (8 samples, 0.02%)</title><rect x="476.7" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.7" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (8 samples, 0.02%)</title><rect x="476.7" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (22 samples, 0.07%)</title><rect x="477.6" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (21 samples, 0.06%)</title><rect x="477.6" y="1347.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (20 samples, 0.06%)</title><rect x="477.6" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (15 samples, 0.05%)</title><rect x="477.7" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.7" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (14 samples, 0.04%)</title><rect x="477.7" y="1299.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$131/1157471330.apply$mcV$sp (14 samples, 0.04%)</title><rect x="477.7" y="1283.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (14 samples, 0.04%)</title><rect x="477.7" y="1267.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (8 samples, 0.02%)</title><rect x="477.9" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (8 samples, 0.02%)</title><rect x="477.9" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (8 samples, 0.02%)</title><rect x="477.9" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.02%)</title><rect x="477.9" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (8 samples, 0.02%)</title><rect x="478.3" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$1089/492067264.apply (14 samples, 0.04%)</title><rect x="478.8" y="1363.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (14 samples, 0.04%)</title><rect x="478.8" y="1347.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.8" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (14 samples, 0.04%)</title><rect x="478.8" y="1331.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (12 samples, 0.04%)</title><rect x="478.8" y="1315.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (9 samples, 0.03%)</title><rect x="478.8" y="1299.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (9 samples, 0.03%)</title><rect x="478.8" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (8 samples, 0.02%)</title><rect x="478.9" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1$$Lambda$543/1504977787.apply (11 samples, 0.03%)</title><rect x="479.3" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.$anonfun$applyOrElse$1 (11 samples, 0.03%)</title><rect x="479.3" y="1347.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (9 samples, 0.03%)</title><rect x="479.3" y="1331.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.3" y="1342.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (17 samples, 0.05%)</title><rect x="479.8" y="1443.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (17 samples, 0.05%)</title><rect x="479.8" y="1427.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (17 samples, 0.05%)</title><rect x="479.8" y="1411.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.8" y="1422.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (17 samples, 0.05%)</title><rect x="479.8" y="1395.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (14 samples, 0.04%)</title><rect x="479.8" y="1379.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (14 samples, 0.04%)</title><rect x="479.8" y="1363.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (14 samples, 0.04%)</title><rect x="479.8" y="1347.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (14 samples, 0.04%)</title><rect x="479.8" y="1331.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (14 samples, 0.04%)</title><rect x="479.8" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (14 samples, 0.04%)</title><rect x="479.8" y="1299.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.8" y="1310.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (12 samples, 0.04%)</title><rect x="479.8" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.8" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.route (12 samples, 0.04%)</title><rect x="479.8" y="1267.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.8" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.select (10 samples, 0.03%)</title><rect x="479.8" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.8" y="1262.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.target$1 (8 samples, 0.02%)</title><rect x="479.9" y="1235.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.9" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (1,999 samples, 6.05%)</title><rect x="480.4" y="1443.0" width="71.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.4" y="1454.0">akka/io/..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1,999 samples, 6.05%)</title><rect x="480.4" y="1427.0" width="71.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.4" y="1438.0">akka/act..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1,999 samples, 6.05%)</title><rect x="480.4" y="1411.0" width="71.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.4" y="1422.0">akka/act..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$waitingForRegistration$1.applyOrElse (23 samples, 0.07%)</title><rect x="480.6" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.6" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (16 samples, 0.05%)</title><rect x="480.8" y="1379.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.8" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (12 samples, 0.04%)</title><rect x="481.0" y="1363.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (12 samples, 0.04%)</title><rect x="481.0" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (12 samples, 0.04%)</title><rect x="481.0" y="1331.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (12 samples, 0.04%)</title><rect x="481.0" y="1315.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (9 samples, 0.03%)</title><rect x="481.0" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (8 samples, 0.02%)</title><rect x="481.1" y="1283.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (8 samples, 0.02%)</title><rect x="481.1" y="1267.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.1" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (7 samples, 0.02%)</title><rect x="481.1" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.1" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (23 samples, 0.07%)</title><rect x="481.4" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.4" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (23 samples, 0.07%)</title><rect x="481.4" y="1379.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (9 samples, 0.03%)</title><rect x="481.4" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1290206611.apply (8 samples, 0.02%)</title><rect x="481.4" y="1347.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.02%)</title><rect x="481.4" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.02%)</title><rect x="481.4" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.02%)</title><rect x="481.4" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.02%)</title><rect x="481.4" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (7 samples, 0.02%)</title><rect x="481.5" y="1267.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (7 samples, 0.02%)</title><rect x="481.5" y="1251.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (7 samples, 0.02%)</title><rect x="481.5" y="1235.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (7 samples, 0.02%)</title><rect x="481.5" y="1219.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (12 samples, 0.04%)</title><rect x="481.7" y="1363.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (12 samples, 0.04%)</title><rect x="481.7" y="1347.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (12 samples, 0.04%)</title><rect x="481.7" y="1331.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (8 samples, 0.02%)</title><rect x="481.8" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.8" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (106 samples, 0.32%)</title><rect x="482.2" y="1395.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.2" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$connectionTimeout (15 samples, 0.05%)</title><rect x="482.2" y="1379.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.2" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$.connectTimeoutExpired (7 samples, 0.02%)</title><rect x="482.2" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.2" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anon$2.&lt;init&gt; (7 samples, 0.02%)</title><rect x="482.2" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.2" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$stop (8 samples, 0.02%)</title><rect x="482.5" y="1363.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (91 samples, 0.28%)</title><rect x="482.7" y="1379.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.7" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$573/453578933.apply$mcV$sp (77 samples, 0.23%)</title><rect x="482.8" y="1363.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (77 samples, 0.23%)</title><rect x="482.8" y="1347.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.8" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (16 samples, 0.05%)</title><rect x="482.9" y="1331.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.02%)</title><rect x="482.9" y="1315.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1290206611.apply (8 samples, 0.02%)</title><rect x="482.9" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.02%)</title><rect x="482.9" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.02%)</title><rect x="482.9" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.02%)</title><rect x="482.9" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.02%)</title><rect x="482.9" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (7 samples, 0.02%)</title><rect x="482.9" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.9" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (57 samples, 0.17%)</title><rect x="483.5" y="1331.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (38 samples, 0.12%)</title><rect x="483.6" y="1315.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.6" y="1326.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_SocketChannelImpl_checkConnect (11 samples, 0.03%)</title><rect x="483.6" y="1299.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="486.6" y="1310.0"></text>
</g>
<g>
<title>handleSocketError (10 samples, 0.03%)</title><rect x="483.7" y="1283.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="486.7" y="1294.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (9 samples, 0.03%)</title><rect x="483.7" y="1267.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="486.7" y="1278.0"></text>
</g>
<g>
<title>java/net/ConnectException.&lt;init&gt; (10 samples, 0.03%)</title><rect x="484.4" y="1299.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.4" y="1310.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (9 samples, 0.03%)</title><rect x="484.4" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.4" y="1294.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (9 samples, 0.03%)</title><rect x="484.4" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (9 samples, 0.03%)</title><rect x="484.4" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (9 samples, 0.03%)</title><rect x="484.4" y="1235.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.03%)</title><rect x="484.4" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.03%)</title><rect x="484.4" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.4" y="1214.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (8 samples, 0.02%)</title><rect x="484.4" y="1187.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="487.4" y="1198.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (8 samples, 0.02%)</title><rect x="484.4" y="1171.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="487.4" y="1182.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (7 samples, 0.02%)</title><rect x="484.4" y="1155.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="487.4" y="1166.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (7 samples, 0.02%)</title><rect x="484.4" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="487.4" y="1150.0"></text>
</g>
<g>
<title>poll (7 samples, 0.02%)</title><rect x="484.7" y="1299.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="487.7" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (15 samples, 0.05%)</title><rect x="485.0" y="1315.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (13 samples, 0.04%)</title><rect x="485.1" y="1299.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (12 samples, 0.04%)</title><rect x="485.1" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.1" y="1294.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (7 samples, 0.02%)</title><rect x="485.1" y="1267.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="488.1" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$stop (13 samples, 0.04%)</title><rect x="485.5" y="1363.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (10 samples, 0.03%)</title><rect x="485.6" y="1347.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (9 samples, 0.03%)</title><rect x="485.6" y="1331.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (9 samples, 0.03%)</title><rect x="485.6" y="1315.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (9 samples, 0.03%)</title><rect x="485.6" y="1299.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (59 samples, 0.18%)</title><rect x="486.0" y="1395.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.0" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (57 samples, 0.17%)</title><rect x="486.1" y="1379.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$550/1003976206.apply$mcV$sp (57 samples, 0.17%)</title><rect x="486.1" y="1363.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (56 samples, 0.17%)</title><rect x="486.1" y="1347.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (11 samples, 0.03%)</title><rect x="486.1" y="1331.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/Dns.resolve (10 samples, 0.03%)</title><rect x="486.2" y="1315.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (16 samples, 0.05%)</title><rect x="486.5" y="1331.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (16 samples, 0.05%)</title><rect x="486.5" y="1315.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (16 samples, 0.05%)</title><rect x="486.5" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.5" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (12 samples, 0.04%)</title><rect x="486.6" y="1283.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.6" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (10 samples, 0.03%)</title><rect x="486.6" y="1267.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.6" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (10 samples, 0.03%)</title><rect x="486.6" y="1251.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.6" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (9 samples, 0.03%)</title><rect x="486.7" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.7" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (8 samples, 0.02%)</title><rect x="486.7" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (8 samples, 0.02%)</title><rect x="486.7" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.7" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (27 samples, 0.08%)</title><rect x="487.1" y="1331.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (27 samples, 0.08%)</title><rect x="487.1" y="1315.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$572/1263458036.apply$mcV$sp (27 samples, 0.08%)</title><rect x="487.1" y="1299.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.1" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (27 samples, 0.08%)</title><rect x="487.1" y="1283.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.1" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (21 samples, 0.06%)</title><rect x="487.3" y="1267.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (20 samples, 0.06%)</title><rect x="487.3" y="1251.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.3" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (20 samples, 0.06%)</title><rect x="487.3" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.3" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (20 samples, 0.06%)</title><rect x="487.3" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.05%)</title><rect x="487.4" y="1203.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="490.4" y="1214.0"></text>
</g>
<g>
<title>__connect (17 samples, 0.05%)</title><rect x="487.4" y="1187.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="490.4" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.05%)</title><rect x="487.5" y="1171.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="490.5" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.05%)</title><rect x="487.5" y="1155.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.5" y="1166.0"></text>
</g>
<g>
<title>sys_connect (15 samples, 0.05%)</title><rect x="487.5" y="1139.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.5" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (15 samples, 0.05%)</title><rect x="487.5" y="1123.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.5" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (14 samples, 0.04%)</title><rect x="487.5" y="1107.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="490.5" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (14 samples, 0.04%)</title><rect x="487.5" y="1091.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="490.5" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (14 samples, 0.04%)</title><rect x="487.5" y="1075.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="490.5" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (13 samples, 0.04%)</title><rect x="487.5" y="1059.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.5" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (27 samples, 0.08%)</title><rect x="488.1" y="1395.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.1" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (26 samples, 0.08%)</title><rect x="488.1" y="1379.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$571/857769676.apply$mcV$sp (25 samples, 0.08%)</title><rect x="488.2" y="1363.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.2" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (24 samples, 0.07%)</title><rect x="488.2" y="1347.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.2" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (23 samples, 0.07%)</title><rect x="488.2" y="1331.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (23 samples, 0.07%)</title><rect x="488.2" y="1315.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$572/1263458036.apply$mcV$sp (23 samples, 0.07%)</title><rect x="488.2" y="1299.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.2" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (23 samples, 0.07%)</title><rect x="488.2" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (15 samples, 0.05%)</title><rect x="488.5" y="1267.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (12 samples, 0.04%)</title><rect x="488.6" y="1251.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.6" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (12 samples, 0.04%)</title><rect x="488.6" y="1235.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (12 samples, 0.04%)</title><rect x="488.6" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.03%)</title><rect x="488.6" y="1203.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="491.6" y="1214.0"></text>
</g>
<g>
<title>__connect (9 samples, 0.03%)</title><rect x="488.7" y="1187.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="491.7" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="488.7" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="491.7" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.03%)</title><rect x="488.7" y="1155.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="491.7" y="1166.0"></text>
</g>
<g>
<title>sys_connect (9 samples, 0.03%)</title><rect x="488.7" y="1139.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="491.7" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (9 samples, 0.03%)</title><rect x="488.7" y="1123.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="491.7" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (9 samples, 0.03%)</title><rect x="488.7" y="1107.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="491.7" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (9 samples, 0.03%)</title><rect x="488.7" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="491.7" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (9 samples, 0.03%)</title><rect x="488.7" y="1075.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="491.7" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (9 samples, 0.03%)</title><rect x="488.7" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.7" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (8 samples, 0.02%)</title><rect x="488.7" y="1043.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="491.7" y="1054.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.04%)</title><rect x="489.1" y="1395.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="492.1" y="1406.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (1,743 samples, 5.28%)</title><rect x="489.5" y="1395.0" width="62.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.5" y="1406.0">scala/..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (819 samples, 2.48%)</title><rect x="490.0" y="1379.0" width="29.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.0" y="1390.0">ak..</text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (599 samples, 1.81%)</title><rect x="490.1" y="1363.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.1" y="1374.0">a..</text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (19 samples, 0.06%)</title><rect x="490.4" y="1347.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (8 samples, 0.02%)</title><rect x="490.5" y="1331.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (8 samples, 0.02%)</title><rect x="490.5" y="1315.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (8 samples, 0.02%)</title><rect x="490.5" y="1299.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.5" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (8 samples, 0.02%)</title><rect x="490.5" y="1283.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.5" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (8 samples, 0.02%)</title><rect x="490.7" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (558 samples, 1.69%)</title><rect x="491.1" y="1347.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (211 samples, 0.64%)</title><rect x="491.5" y="1331.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1290206611.apply (208 samples, 0.63%)</title><rect x="491.5" y="1315.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (208 samples, 0.63%)</title><rect x="491.5" y="1299.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (208 samples, 0.63%)</title><rect x="491.5" y="1283.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (203 samples, 0.61%)</title><rect x="491.7" y="1267.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (203 samples, 0.61%)</title><rect x="491.7" y="1251.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (197 samples, 0.60%)</title><rect x="491.9" y="1235.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (181 samples, 0.55%)</title><rect x="492.4" y="1219.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (178 samples, 0.54%)</title><rect x="492.5" y="1203.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (178 samples, 0.54%)</title><rect x="492.5" y="1187.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (162 samples, 0.49%)</title><rect x="492.5" y="1171.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (156 samples, 0.47%)</title><rect x="492.5" y="1155.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (156 samples, 0.47%)</title><rect x="492.5" y="1139.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (156 samples, 0.47%)</title><rect x="492.5" y="1123.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (156 samples, 0.47%)</title><rect x="492.5" y="1107.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (156 samples, 0.47%)</title><rect x="492.5" y="1091.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (156 samples, 0.47%)</title><rect x="492.5" y="1075.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (154 samples, 0.47%)</title><rect x="492.6" y="1059.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.6" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (127 samples, 0.38%)</title><rect x="492.6" y="1043.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (126 samples, 0.38%)</title><rect x="492.6" y="1027.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.6" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (126 samples, 0.38%)</title><rect x="492.6" y="1011.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.6" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (126 samples, 0.38%)</title><rect x="492.6" y="995.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (125 samples, 0.38%)</title><rect x="492.6" y="979.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (125 samples, 0.38%)</title><rect x="492.6" y="963.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (125 samples, 0.38%)</title><rect x="492.6" y="947.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (125 samples, 0.38%)</title><rect x="492.6" y="931.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (118 samples, 0.36%)</title><rect x="492.7" y="915.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (118 samples, 0.36%)</title><rect x="492.7" y="899.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (118 samples, 0.36%)</title><rect x="492.7" y="883.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.7" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.05%)</title><rect x="492.7" y="867.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="495.7" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (99 samples, 0.30%)</title><rect x="493.4" y="867.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="496.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 0.25%)</title><rect x="494.0" y="851.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 0.25%)</title><rect x="494.0" y="835.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.0" y="846.0"></text>
</g>
<g>
<title>sys_futex (76 samples, 0.23%)</title><rect x="494.2" y="819.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.2" y="830.0"></text>
</g>
<g>
<title>do_futex (76 samples, 0.23%)</title><rect x="494.2" y="803.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.2" y="814.0"></text>
</g>
<g>
<title>futex_wake (75 samples, 0.23%)</title><rect x="494.2" y="787.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.2" y="798.0"></text>
</g>
<g>
<title>wake_up_q (67 samples, 0.20%)</title><rect x="494.5" y="771.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="497.5" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 0.20%)</title><rect x="494.5" y="755.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 0.20%)</title><rect x="494.5" y="739.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="497.5" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (27 samples, 0.08%)</title><rect x="497.1" y="1043.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.messageQueue (7 samples, 0.02%)</title><rect x="497.1" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (20 samples, 0.06%)</title><rect x="497.4" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (20 samples, 0.06%)</title><rect x="497.4" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (20 samples, 0.06%)</title><rect x="497.4" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (20 samples, 0.06%)</title><rect x="497.4" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (20 samples, 0.06%)</title><rect x="497.4" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (17 samples, 0.05%)</title><rect x="497.5" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (17 samples, 0.05%)</title><rect x="497.5" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (17 samples, 0.05%)</title><rect x="497.5" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.5" y="926.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (11 samples, 0.03%)</title><rect x="498.3" y="1171.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.3" y="1182.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (12 samples, 0.04%)</title><rect x="499.2" y="1331.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.2" y="1342.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (12 samples, 0.04%)</title><rect x="499.2" y="1315.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.2" y="1326.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.03%)</title><rect x="499.7" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (307 samples, 0.93%)</title><rect x="500.1" y="1331.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.03%)</title><rect x="500.2" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.02%)</title><rect x="500.3" y="1299.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.02%)</title><rect x="500.3" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.02%)</title><rect x="500.3" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (292 samples, 0.88%)</title><rect x="500.6" y="1315.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (292 samples, 0.88%)</title><rect x="500.6" y="1299.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.6" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (286 samples, 0.87%)</title><rect x="500.8" y="1283.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (281 samples, 0.85%)</title><rect x="501.0" y="1267.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (280 samples, 0.85%)</title><rect x="501.0" y="1251.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (206 samples, 0.62%)</title><rect x="501.3" y="1235.0" width="7.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="504.3" y="1246.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (9 samples, 0.03%)</title><rect x="501.3" y="1219.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="504.3" y="1230.0"></text>
</g>
<g>
<title>__read (197 samples, 0.60%)</title><rect x="501.6" y="1219.0" width="7.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="504.6" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (174 samples, 0.53%)</title><rect x="502.4" y="1203.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="505.4" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (170 samples, 0.51%)</title><rect x="502.4" y="1187.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="505.4" y="1198.0"></text>
</g>
<g>
<title>sys_read (157 samples, 0.48%)</title><rect x="502.9" y="1171.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.9" y="1182.0"></text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.02%)</title><rect x="502.9" y="1155.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="505.9" y="1166.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.02%)</title><rect x="502.9" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.9" y="1150.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.02%)</title><rect x="502.9" y="1123.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="505.9" y="1134.0"></text>
</g>
<g>
<title>vfs_read (146 samples, 0.44%)</title><rect x="503.3" y="1155.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.3" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (111 samples, 0.34%)</title><rect x="503.4" y="1139.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="506.4" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (108 samples, 0.33%)</title><rect x="503.4" y="1123.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.4" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (103 samples, 0.31%)</title><rect x="503.5" y="1107.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.5" y="1118.0"></text>
</g>
<g>
<title>sock_recvmsg (99 samples, 0.30%)</title><rect x="503.7" y="1091.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="506.7" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (82 samples, 0.25%)</title><rect x="503.9" y="1075.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.9" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (73 samples, 0.22%)</title><rect x="504.2" y="1059.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.2" y="1070.0"></text>
</g>
<g>
<title>__kfree_skb (36 samples, 0.11%)</title><rect x="504.4" y="1043.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="507.4" y="1054.0"></text>
</g>
<g>
<title>skb_release_all (28 samples, 0.08%)</title><rect x="504.6" y="1027.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="507.6" y="1038.0"></text>
</g>
<g>
<title>skb_release_data (28 samples, 0.08%)</title><rect x="504.6" y="1011.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="507.6" y="1022.0"></text>
</g>
<g>
<title>__put_page (15 samples, 0.05%)</title><rect x="504.8" y="995.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.8" y="1006.0"></text>
</g>
<g>
<title>free_unref_page (14 samples, 0.04%)</title><rect x="504.8" y="979.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.8" y="990.0"></text>
</g>
<g>
<title>free_unref_page_prepare.part.65 (7 samples, 0.02%)</title><rect x="505.0" y="963.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="508.0" y="974.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.03%)</title><rect x="505.3" y="995.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="508.3" y="1006.0"></text>
</g>
<g>
<title>page_frag_free (9 samples, 0.03%)</title><rect x="505.3" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.3" y="990.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.04%)</title><rect x="505.9" y="1043.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="508.9" y="1054.0"></text>
</g>
<g>
<title>copy_page_to_iter (9 samples, 0.03%)</title><rect x="506.1" y="1027.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.1" y="1038.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.03%)</title><rect x="506.1" y="1011.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="509.1" y="1022.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.03%)</title><rect x="506.8" y="1075.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="509.8" y="1086.0"></text>
</g>
<g>
<title>rw_verify_area (32 samples, 0.10%)</title><rect x="507.4" y="1139.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="510.4" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (25 samples, 0.08%)</title><rect x="507.6" y="1123.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.6" y="1134.0"></text>
</g>
<g>
<title>apparmor_file_permission (16 samples, 0.05%)</title><rect x="507.6" y="1107.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="510.6" y="1118.0"></text>
</g>
<g>
<title>common_file_perm (16 samples, 0.05%)</title><rect x="507.6" y="1091.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.6" y="1102.0"></text>
</g>
<g>
<title>aa_file_perm (8 samples, 0.02%)</title><rect x="507.9" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.9" y="1086.0"></text>
</g>
<g>
<title>convertReturnVal (27 samples, 0.08%)</title><rect x="509.2" y="1235.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="512.2" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (23 samples, 0.07%)</title><rect x="509.4" y="1219.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="512.4" y="1230.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (10 samples, 0.03%)</title><rect x="509.4" y="1203.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="512.4" y="1214.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (16 samples, 0.05%)</title><rect x="510.3" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (16 samples, 0.05%)</title><rect x="510.3" y="1219.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (16 samples, 0.05%)</title><rect x="510.3" y="1203.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (16 samples, 0.05%)</title><rect x="510.3" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (16 samples, 0.05%)</title><rect x="510.3" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.3" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (15 samples, 0.05%)</title><rect x="510.4" y="1155.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="513.4" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (15 samples, 0.05%)</title><rect x="510.4" y="1139.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="513.4" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (14 samples, 0.04%)</title><rect x="510.4" y="1123.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="513.4" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (12 samples, 0.04%)</title><rect x="510.5" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="513.5" y="1118.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.pullMode (9 samples, 0.03%)</title><rect x="511.1" y="1347.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (16 samples, 0.05%)</title><rect x="511.5" y="1363.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (16 samples, 0.05%)</title><rect x="511.5" y="1347.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (8 samples, 0.02%)</title><rect x="511.6" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (198 samples, 0.60%)</title><rect x="512.1" y="1363.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (194 samples, 0.59%)</title><rect x="512.2" y="1347.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.2" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (192 samples, 0.58%)</title><rect x="512.3" y="1331.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.3" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (190 samples, 0.58%)</title><rect x="512.4" y="1315.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.4" y="1326.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (12 samples, 0.04%)</title><rect x="512.4" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (12 samples, 0.04%)</title><rect x="512.4" y="1283.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (10 samples, 0.03%)</title><rect x="512.4" y="1267.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (10 samples, 0.03%)</title><rect x="512.4" y="1251.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (10 samples, 0.03%)</title><rect x="512.4" y="1235.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.4" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (177 samples, 0.54%)</title><rect x="512.8" y="1299.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (171 samples, 0.52%)</title><rect x="513.0" y="1283.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (166 samples, 0.50%)</title><rect x="513.1" y="1267.0" width="6.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="516.1" y="1278.0"></text>
</g>
<g>
<title>__write (165 samples, 0.50%)</title><rect x="513.2" y="1251.0" width="5.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="516.2" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (149 samples, 0.45%)</title><rect x="513.7" y="1235.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="516.7" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (147 samples, 0.45%)</title><rect x="513.7" y="1219.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.7" y="1230.0"></text>
</g>
<g>
<title>sys_write (142 samples, 0.43%)</title><rect x="513.9" y="1203.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.9" y="1214.0"></text>
</g>
<g>
<title>vfs_write (135 samples, 0.41%)</title><rect x="514.2" y="1187.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="517.2" y="1198.0"></text>
</g>
<g>
<title>__vfs_write (126 samples, 0.38%)</title><rect x="514.2" y="1171.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.2" y="1182.0"></text>
</g>
<g>
<title>new_sync_write (123 samples, 0.37%)</title><rect x="514.3" y="1155.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="517.3" y="1166.0"></text>
</g>
<g>
<title>pipe_write (117 samples, 0.35%)</title><rect x="514.5" y="1139.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.5" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (99 samples, 0.30%)</title><rect x="514.7" y="1123.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.7" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (99 samples, 0.30%)</title><rect x="514.7" y="1107.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="517.7" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (99 samples, 0.30%)</title><rect x="514.7" y="1091.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.7" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (895 samples, 2.71%)</title><rect x="519.2" y="1379.0" width="32.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.2" y="1390.0">ak..</text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (65 samples, 0.20%)</title><rect x="519.3" y="1363.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (60 samples, 0.18%)</title><rect x="519.3" y="1347.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.3" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (40 samples, 0.12%)</title><rect x="519.4" y="1331.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.acquire (9 samples, 0.03%)</title><rect x="519.5" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.5" y="1326.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.takeBufferFromPool (8 samples, 0.02%)</title><rect x="519.5" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.5" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.copyToBuffer (7 samples, 0.02%)</title><rect x="519.8" y="1315.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.8" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (7 samples, 0.02%)</title><rect x="519.8" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.8" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyToBuffer (17 samples, 0.05%)</title><rect x="520.3" y="1315.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.3" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyItToTheBuffer$1 (17 samples, 0.05%)</title><rect x="520.3" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.3" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (12 samples, 0.04%)</title><rect x="520.3" y="1283.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.3" y="1294.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (10 samples, 0.03%)</title><rect x="520.3" y="1267.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.3" y="1278.0"></text>
</g>
<g>
<title>akka/util/ByteString.nonEmpty (16 samples, 0.05%)</title><rect x="520.9" y="1331.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (16 samples, 0.05%)</title><rect x="520.9" y="1315.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (16 samples, 0.05%)</title><rect x="520.9" y="1299.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.9" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (16 samples, 0.05%)</title><rect x="520.9" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (16 samples, 0.05%)</title><rect x="520.9" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (16 samples, 0.05%)</title><rect x="520.9" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.9" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (16 samples, 0.05%)</title><rect x="520.9" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (16 samples, 0.05%)</title><rect x="520.9" y="1219.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (16 samples, 0.05%)</title><rect x="520.9" y="1203.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.compare (16 samples, 0.05%)</title><rect x="520.9" y="1187.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.9" y="1198.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.03%)</title><rect x="521.1" y="1171.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.1" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (827 samples, 2.50%)</title><rect x="521.6" y="1363.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.6" y="1374.0">ak..</text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (825 samples, 2.50%)</title><rect x="521.6" y="1347.0" width="29.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.6" y="1358.0">ak..</text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (825 samples, 2.50%)</title><rect x="521.6" y="1331.0" width="29.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.6" y="1342.0">ak..</text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (175 samples, 0.53%)</title><rect x="521.9" y="1315.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1290206611.apply (175 samples, 0.53%)</title><rect x="521.9" y="1299.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (174 samples, 0.53%)</title><rect x="522.0" y="1283.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (174 samples, 0.53%)</title><rect x="522.0" y="1267.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (170 samples, 0.51%)</title><rect x="522.1" y="1251.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (170 samples, 0.51%)</title><rect x="522.1" y="1235.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (167 samples, 0.51%)</title><rect x="522.1" y="1219.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (163 samples, 0.49%)</title><rect x="522.3" y="1203.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (162 samples, 0.49%)</title><rect x="522.3" y="1187.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (162 samples, 0.49%)</title><rect x="522.3" y="1171.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (149 samples, 0.45%)</title><rect x="522.3" y="1155.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (148 samples, 0.45%)</title><rect x="522.3" y="1139.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (148 samples, 0.45%)</title><rect x="522.3" y="1123.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (148 samples, 0.45%)</title><rect x="522.3" y="1107.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (146 samples, 0.44%)</title><rect x="522.3" y="1091.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (146 samples, 0.44%)</title><rect x="522.3" y="1075.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (146 samples, 0.44%)</title><rect x="522.3" y="1059.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (146 samples, 0.44%)</title><rect x="522.3" y="1043.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (138 samples, 0.42%)</title><rect x="522.3" y="1027.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (137 samples, 0.41%)</title><rect x="522.3" y="1011.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.3" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (137 samples, 0.41%)</title><rect x="522.3" y="995.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.3" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (137 samples, 0.41%)</title><rect x="522.3" y="979.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.3" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (134 samples, 0.41%)</title><rect x="522.3" y="963.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (134 samples, 0.41%)</title><rect x="522.3" y="947.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (134 samples, 0.41%)</title><rect x="522.3" y="931.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (133 samples, 0.40%)</title><rect x="522.4" y="915.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (128 samples, 0.39%)</title><rect x="522.5" y="899.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (128 samples, 0.39%)</title><rect x="522.5" y="883.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (128 samples, 0.39%)</title><rect x="522.5" y="867.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.5" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.04%)</title><rect x="522.6" y="851.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="525.6" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (112 samples, 0.34%)</title><rect x="523.1" y="851.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="526.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 0.30%)</title><rect x="523.5" y="835.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.30%)</title><rect x="523.5" y="819.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="526.5" y="830.0"></text>
</g>
<g>
<title>sys_futex (97 samples, 0.29%)</title><rect x="523.6" y="803.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.6" y="814.0"></text>
</g>
<g>
<title>do_futex (97 samples, 0.29%)</title><rect x="523.6" y="787.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.6" y="798.0"></text>
</g>
<g>
<title>futex_wake (95 samples, 0.29%)</title><rect x="523.6" y="771.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="526.6" y="782.0"></text>
</g>
<g>
<title>wake_up_q (88 samples, 0.27%)</title><rect x="523.9" y="755.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="526.9" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (87 samples, 0.26%)</title><rect x="523.9" y="739.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="526.9" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (87 samples, 0.26%)</title><rect x="523.9" y="723.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.9" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (8 samples, 0.02%)</title><rect x="527.3" y="1027.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (8 samples, 0.02%)</title><rect x="527.3" y="1011.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.3" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (8 samples, 0.02%)</title><rect x="527.3" y="995.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.3" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (8 samples, 0.02%)</title><rect x="527.3" y="979.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (8 samples, 0.02%)</title><rect x="527.3" y="963.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (8 samples, 0.02%)</title><rect x="527.3" y="947.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.3" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreterOrNull (7 samples, 0.02%)</title><rect x="527.7" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.7" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (631 samples, 1.91%)</title><rect x="528.6" y="1315.0" width="22.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.6" y="1326.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.10%)</title><rect x="528.8" y="1299.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (25 samples, 0.08%)</title><rect x="529.0" y="1283.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (15 samples, 0.05%)</title><rect x="529.4" y="1267.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (15 samples, 0.05%)</title><rect x="529.4" y="1251.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (11 samples, 0.03%)</title><rect x="529.4" y="1235.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.4" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (584 samples, 1.77%)</title><rect x="530.2" y="1299.0" width="20.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.2" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (583 samples, 1.76%)</title><rect x="530.2" y="1283.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (581 samples, 1.76%)</title><rect x="530.3" y="1267.0" width="20.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (580 samples, 1.76%)</title><rect x="530.3" y="1251.0" width="20.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.3" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (579 samples, 1.75%)</title><rect x="530.4" y="1235.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (559 samples, 1.69%)</title><rect x="530.8" y="1219.0" width="20.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="533.8" y="1230.0"></text>
</g>
<g>
<title>__write (559 samples, 1.69%)</title><rect x="530.8" y="1203.0" width="20.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="533.8" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (532 samples, 1.61%)</title><rect x="531.7" y="1187.0" width="19.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.7" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (528 samples, 1.60%)</title><rect x="531.7" y="1171.0" width="18.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="534.7" y="1182.0"></text>
</g>
<g>
<title>sys_write (513 samples, 1.55%)</title><rect x="532.2" y="1155.0" width="18.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="535.2" y="1166.0"></text>
</g>
<g>
<title>__fdget_pos (19 samples, 0.06%)</title><rect x="532.2" y="1139.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="535.2" y="1150.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.06%)</title><rect x="532.2" y="1123.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="535.2" y="1134.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.05%)</title><rect x="532.3" y="1107.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="535.3" y="1118.0"></text>
</g>
<g>
<title>vfs_write (487 samples, 1.47%)</title><rect x="533.1" y="1139.0" width="17.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.1" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (454 samples, 1.37%)</title><rect x="533.4" y="1123.0" width="16.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="536.4" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (451 samples, 1.37%)</title><rect x="533.4" y="1107.0" width="16.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.4" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (445 samples, 1.35%)</title><rect x="533.6" y="1091.0" width="15.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.6" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (443 samples, 1.34%)</title><rect x="533.7" y="1075.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.7" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (420 samples, 1.27%)</title><rect x="533.9" y="1059.0" width="15.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.9" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (414 samples, 1.25%)</title><rect x="534.0" y="1043.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.0" y="1054.0"></text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.03%)</title><rect x="534.3" y="1027.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="537.3" y="1038.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (377 samples, 1.14%)</title><rect x="535.3" y="1027.0" width="13.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="538.3" y="1038.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.03%)</title><rect x="535.9" y="1011.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="538.9" y="1022.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.03%)</title><rect x="536.0" y="995.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="539.0" y="1006.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (50 samples, 0.15%)</title><rect x="536.9" y="1011.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.9" y="1022.0"></text>
</g>
<g>
<title>__alloc_skb (44 samples, 0.13%)</title><rect x="537.1" y="995.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="540.1" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (17 samples, 0.05%)</title><rect x="537.4" y="979.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.4" y="990.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 0.05%)</title><rect x="537.4" y="963.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.4" y="974.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (14 samples, 0.04%)</title><rect x="538.1" y="979.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.1" y="990.0"></text>
</g>
<g>
<title>skb_entail (12 samples, 0.04%)</title><rect x="538.7" y="1011.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="541.7" y="1022.0"></text>
</g>
<g>
<title>tcp_push (236 samples, 0.71%)</title><rect x="539.3" y="1011.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="542.3" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (234 samples, 0.71%)</title><rect x="539.3" y="995.0" width="8.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.3" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (232 samples, 0.70%)</title><rect x="539.4" y="979.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="542.4" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (182 samples, 0.55%)</title><rect x="539.7" y="963.0" width="6.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="542.7" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (147 samples, 0.45%)</title><rect x="540.6" y="947.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="543.6" y="958.0"></text>
</g>
<g>
<title>ip_local_out (132 samples, 0.40%)</title><rect x="540.9" y="931.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.9" y="942.0"></text>
</g>
<g>
<title>ip_output (129 samples, 0.39%)</title><rect x="541.0" y="915.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.0" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (127 samples, 0.38%)</title><rect x="541.0" y="899.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.0" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (117 samples, 0.35%)</title><rect x="541.4" y="883.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.4" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (96 samples, 0.29%)</title><rect x="542.1" y="867.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.1" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (95 samples, 0.29%)</title><rect x="542.1" y="851.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.1" y="862.0"></text>
</g>
<g>
<title>netdev_pick_tx (8 samples, 0.02%)</title><rect x="542.5" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="545.5" y="846.0"></text>
</g>
<g>
<title>sch_direct_xmit (77 samples, 0.23%)</title><rect x="542.8" y="835.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.8" y="846.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (13 samples, 0.04%)</title><rect x="542.8" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="545.8" y="830.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (48 samples, 0.15%)</title><rect x="543.3" y="819.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.3" y="830.0"></text>
</g>
<g>
<title>ena_start_xmit?[ena] (42 samples, 0.13%)</title><rect x="543.5" y="803.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.5" y="814.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (12 samples, 0.04%)</title><rect x="545.1" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.1" y="830.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.03%)</title><rect x="545.2" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="548.2" y="814.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.02%)</title><rect x="545.9" y="947.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.9" y="958.0"></text>
</g>
<g>
<title>sched_clock_cpu (7 samples, 0.02%)</title><rect x="546.3" y="963.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="549.3" y="974.0"></text>
</g>
<g>
<title>sched_clock (7 samples, 0.02%)</title><rect x="546.3" y="947.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="549.3" y="958.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (7 samples, 0.02%)</title><rect x="546.3" y="931.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="549.3" y="942.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (24 samples, 0.07%)</title><rect x="546.6" y="963.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.6" y="974.0"></text>
</g>
<g>
<title>tcp_rearm_rto (14 samples, 0.04%)</title><rect x="546.9" y="947.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="549.9" y="958.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (12 samples, 0.04%)</title><rect x="547.0" y="931.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="550.0" y="942.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.03%)</title><rect x="547.1" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.1" y="926.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.03%)</title><rect x="547.1" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.1" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.02%)</title><rect x="547.1" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.1" y="894.0"></text>
</g>
<g>
<title>tcp_send_mss (22 samples, 0.07%)</title><rect x="548.0" y="1011.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="551.0" y="1022.0"></text>
</g>
<g>
<title>tcp_current_mss (20 samples, 0.06%)</title><rect x="548.0" y="995.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="551.0" y="1006.0"></text>
</g>
<g>
<title>tcp_established_options (7 samples, 0.02%)</title><rect x="548.4" y="979.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="551.4" y="990.0"></text>
</g>
<g>
<title>security_socket_sendmsg (15 samples, 0.05%)</title><rect x="548.9" y="1059.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="551.9" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (12 samples, 0.04%)</title><rect x="549.0" y="1043.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="552.0" y="1054.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.04%)</title><rect x="549.0" y="1027.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="552.0" y="1038.0"></text>
</g>
<g>
<title>rw_verify_area (25 samples, 0.08%)</title><rect x="549.6" y="1123.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.6" y="1134.0"></text>
</g>
<g>
<title>security_file_permission (19 samples, 0.06%)</title><rect x="549.8" y="1107.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.8" y="1118.0"></text>
</g>
<g>
<title>apparmor_file_permission (17 samples, 0.05%)</title><rect x="549.8" y="1091.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="552.8" y="1102.0"></text>
</g>
<g>
<title>common_file_perm (17 samples, 0.05%)</title><rect x="549.8" y="1075.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.8" y="1086.0"></text>
</g>
<g>
<title>aa_file_perm (10 samples, 0.03%)</title><rect x="550.1" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.1" y="1070.0"></text>
</g>
<g>
<title>scala/PartialFunction$.scala$PartialFunction$$fallbackOccurred (12 samples, 0.04%)</title><rect x="551.4" y="1379.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.4" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (9 samples, 0.03%)</title><rect x="551.4" y="1363.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.4" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (83 samples, 0.25%)</title><rect x="551.8" y="1443.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (83 samples, 0.25%)</title><rect x="551.8" y="1427.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (83 samples, 0.25%)</title><rect x="551.8" y="1411.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.8" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (82 samples, 0.25%)</title><rect x="551.8" y="1395.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.8" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (9 samples, 0.03%)</title><rect x="551.8" y="1379.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.8" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (8 samples, 0.02%)</title><rect x="551.9" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (8 samples, 0.02%)</title><rect x="551.9" y="1347.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.02%)</title><rect x="551.9" y="1331.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.9" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.02%)</title><rect x="551.9" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.02%)</title><rect x="551.9" y="1299.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="554.9" y="1310.0"></text>
</g>
<g>
<title>__write (8 samples, 0.02%)</title><rect x="551.9" y="1283.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="554.9" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="551.9" y="1267.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (71 samples, 0.21%)</title><rect x="552.2" y="1379.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (14 samples, 0.04%)</title><rect x="552.2" y="1363.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.04%)</title><rect x="552.2" y="1347.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (13 samples, 0.04%)</title><rect x="552.2" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (13 samples, 0.04%)</title><rect x="552.2" y="1315.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.2" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (12 samples, 0.04%)</title><rect x="552.2" y="1299.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.2" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.route (11 samples, 0.03%)</title><rect x="552.3" y="1283.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.3" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.send (11 samples, 0.03%)</title><rect x="552.3" y="1267.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.3" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (10 samples, 0.03%)</title><rect x="552.3" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (9 samples, 0.03%)</title><rect x="552.3" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (9 samples, 0.03%)</title><rect x="552.3" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.02%)</title><rect x="552.3" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.02%)</title><rect x="552.3" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.02%)</title><rect x="552.3" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.02%)</title><rect x="552.3" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.02%)</title><rect x="552.3" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.02%)</title><rect x="552.3" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.02%)</title><rect x="552.3" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.02%)</title><rect x="552.3" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.02%)</title><rect x="552.3" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.02%)</title><rect x="552.3" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.02%)</title><rect x="552.3" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.02%)</title><rect x="552.3" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.02%)</title><rect x="552.3" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.02%)</title><rect x="552.3" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (8 samples, 0.02%)</title><rect x="552.3" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.02%)</title><rect x="552.3" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.02%)</title><rect x="552.3" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.02%)</title><rect x="552.3" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.3" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.02%)</title><rect x="552.3" y="915.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="555.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="552.3" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.02%)</title><rect x="552.3" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.3" y="894.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.02%)</title><rect x="552.4" y="867.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.4" y="878.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.02%)</title><rect x="552.4" y="851.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.4" y="862.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.02%)</title><rect x="552.4" y="835.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.4" y="846.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.02%)</title><rect x="552.4" y="819.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.4" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.02%)</title><rect x="552.4" y="803.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.02%)</title><rect x="552.4" y="787.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="555.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (47 samples, 0.14%)</title><rect x="553.0" y="1363.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (33 samples, 0.10%)</title><rect x="553.2" y="1347.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.2" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (33 samples, 0.10%)</title><rect x="553.2" y="1331.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.2" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (17 samples, 0.05%)</title><rect x="553.2" y="1315.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="556.2" y="1326.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (12 samples, 0.04%)</title><rect x="553.2" y="1299.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="556.2" y="1310.0"></text>
</g>
<g>
<title>jni_NewObject (8 samples, 0.02%)</title><rect x="553.3" y="1283.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="556.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.03%)</title><rect x="553.8" y="1315.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="556.8" y="1326.0"></text>
</g>
<g>
<title>__write (7 samples, 0.02%)</title><rect x="553.9" y="1299.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="556.9" y="1310.0"></text>
</g>
<g>
<title>accept (7 samples, 0.02%)</title><rect x="553.9" y="1283.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="556.9" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="553.9" y="1267.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.9" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.02%)</title><rect x="553.9" y="1251.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.9" y="1262.0"></text>
</g>
<g>
<title>sys_accept (7 samples, 0.02%)</title><rect x="553.9" y="1235.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.9" y="1246.0"></text>
</g>
<g>
<title>SYSC_accept4 (7 samples, 0.02%)</title><rect x="553.9" y="1219.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="556.9" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (7 samples, 0.02%)</title><rect x="554.4" y="1347.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.4" y="1358.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.aroundReceive (12 samples, 0.04%)</title><rect x="554.8" y="1443.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (12 samples, 0.04%)</title><rect x="554.8" y="1427.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (12 samples, 0.04%)</title><rect x="554.8" y="1411.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.8" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (12 samples, 0.04%)</title><rect x="554.8" y="1395.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.8" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$anonfun$receiveClusterEvent$1.applyOrElse (10 samples, 0.03%)</title><rect x="554.8" y="1379.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.8" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.delayedQuarantine (7 samples, 0.02%)</title><rect x="554.8" y="1363.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.8" y="1374.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.quarantine (7 samples, 0.02%)</title><rect x="554.8" y="1347.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.8" y="1358.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.quarantine (7 samples, 0.02%)</title><rect x="554.8" y="1331.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.8" y="1342.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.association (7 samples, 0.02%)</title><rect x="554.8" y="1315.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.8" y="1326.0"></text>
</g>
<g>
<title>akka/remote/artery/AssociationRegistry.association (7 samples, 0.02%)</title><rect x="554.8" y="1299.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.8" y="1310.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.associate (7 samples, 0.02%)</title><rect x="554.8" y="1283.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.8" y="1294.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.runOutboundStreams (7 samples, 0.02%)</title><rect x="554.8" y="1267.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (6,937 samples, 21.00%)</title><rect x="555.2" y="1443.0" width="247.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.2" y="1454.0">akka/stream/impl/fusing/ActorGrap..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (6,937 samples, 21.00%)</title><rect x="555.2" y="1427.0" width="247.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.2" y="1438.0">akka/actor/Actor.aroundReceive$</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (6,937 samples, 21.00%)</title><rect x="555.2" y="1411.0" width="247.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.2" y="1422.0">akka/actor/Actor.aroundReceive</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (6,924 samples, 20.96%)</title><rect x="555.3" y="1395.0" width="247.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.3" y="1406.0">akka/stream/impl/fusing/ActorGrap..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (5,783 samples, 17.51%)</title><rect x="555.8" y="1379.0" width="206.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.8" y="1390.0">akka/stream/impl/fusing/Act..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (5,774 samples, 17.48%)</title><rect x="555.9" y="1363.0" width="206.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.9" y="1374.0">akka/stream/impl/fusing/Gra..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (5,774 samples, 17.48%)</title><rect x="555.9" y="1347.0" width="206.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.9" y="1358.0">akka/stream/impl/fusing/Gra..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (691 samples, 2.09%)</title><rect x="555.9" y="1331.0" width="24.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.9" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$480/665491506.apply (216 samples, 0.65%)</title><rect x="555.9" y="1315.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (214 samples, 0.65%)</title><rect x="556.0" y="1299.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (214 samples, 0.65%)</title><rect x="556.0" y="1283.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (15 samples, 0.05%)</title><rect x="556.7" y="1267.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (14 samples, 0.04%)</title><rect x="556.7" y="1251.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.7" y="1262.0"></text>
</g>
<g>
<title>scala/Option.foreach (11 samples, 0.03%)</title><rect x="556.7" y="1235.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$492/871763313.apply (11 samples, 0.03%)</title><rect x="556.7" y="1219.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$cancelTimer$1 (11 samples, 0.03%)</title><rect x="556.7" y="1203.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.cancel (9 samples, 0.03%)</title><rect x="556.7" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.cancel (9 samples, 0.03%)</title><rect x="556.7" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.extractTask (7 samples, 0.02%)</title><rect x="556.7" y="1155.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.7" y="1166.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (7 samples, 0.02%)</title><rect x="556.7" y="1139.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (35 samples, 0.11%)</title><rect x="557.2" y="1267.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (12 samples, 0.04%)</title><rect x="557.3" y="1251.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.05%)</title><rect x="557.7" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (7 samples, 0.02%)</title><rect x="557.9" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Path.toString (7 samples, 0.02%)</title><rect x="557.9" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.withDefaultHeaders (8 samples, 0.02%)</title><rect x="558.5" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.withDefaultHeaders$ (8 samples, 0.02%)</title><rect x="558.5" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.withDefaultHeaders (8 samples, 0.02%)</title><rect x="558.5" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.withUri (8 samples, 0.02%)</title><rect x="558.8" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.copy (8 samples, 0.02%)</title><rect x="558.8" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.&lt;init&gt; (8 samples, 0.02%)</title><rect x="558.8" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.verifyUri (7 samples, 0.02%)</title><rect x="558.9" y="1219.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (110 samples, 0.33%)</title><rect x="559.4" y="1267.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (109 samples, 0.33%)</title><rect x="559.4" y="1251.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (7 samples, 0.02%)</title><rect x="559.5" y="1235.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (7 samples, 0.02%)</title><rect x="559.5" y="1219.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (99 samples, 0.30%)</title><rect x="559.7" y="1235.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.7" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (99 samples, 0.30%)</title><rect x="559.7" y="1219.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.7" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (96 samples, 0.29%)</title><rect x="559.8" y="1203.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.8" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (84 samples, 0.25%)</title><rect x="559.8" y="1187.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$405/1142004135.apply (76 samples, 0.23%)</title><rect x="559.9" y="1171.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (72 samples, 0.22%)</title><rect x="560.0" y="1155.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (72 samples, 0.22%)</title><rect x="560.0" y="1139.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (37 samples, 0.11%)</title><rect x="560.2" y="1123.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (34 samples, 0.10%)</title><rect x="560.3" y="1107.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (34 samples, 0.10%)</title><rect x="560.3" y="1091.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (34 samples, 0.10%)</title><rect x="560.3" y="1075.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ch16o$1 (18 samples, 0.05%)</title><rect x="560.4" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h16$1 (14 samples, 0.04%)</title><rect x="560.5" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h16c$1 (8 samples, 0.02%)</title><rect x="561.1" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h16$1 (7 samples, 0.02%)</title><rect x="561.1" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (30 samples, 0.09%)</title><rect x="561.5" y="1123.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (26 samples, 0.08%)</title><rect x="561.7" y="1107.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (10 samples, 0.03%)</title><rect x="561.7" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (10 samples, 0.03%)</title><rect x="561.7" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (10 samples, 0.03%)</title><rect x="561.7" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.7" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.lastChar (9 samples, 0.03%)</title><rect x="561.7" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.7" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.charAt (9 samples, 0.03%)</title><rect x="561.7" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.7" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (12 samples, 0.04%)</title><rect x="562.8" y="1187.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$476/825439446.apply (126 samples, 0.38%)</title><rect x="563.7" y="1315.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (125 samples, 0.38%)</title><rect x="563.7" y="1299.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (125 samples, 0.38%)</title><rect x="563.7" y="1283.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$582/2431149.apply$mcV$sp (78 samples, 0.24%)</title><rect x="563.7" y="1267.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (78 samples, 0.24%)</title><rect x="563.7" y="1251.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$532/321491370.apply (77 samples, 0.23%)</title><rect x="563.7" y="1235.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (77 samples, 0.23%)</title><rect x="563.7" y="1219.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (77 samples, 0.23%)</title><rect x="563.7" y="1203.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (77 samples, 0.23%)</title><rect x="563.7" y="1187.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1325/2000360650.apply (52 samples, 0.16%)</title><rect x="563.7" y="1171.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3$adapted (52 samples, 0.16%)</title><rect x="563.7" y="1155.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3 (52 samples, 0.16%)</title><rect x="563.7" y="1139.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptFailed (27 samples, 0.08%)</title><rect x="563.7" y="1123.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (27 samples, 0.08%)</title><rect x="563.7" y="1107.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (27 samples, 0.08%)</title><rect x="563.7" y="1091.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (27 samples, 0.08%)</title><rect x="563.7" y="1075.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.02%)</title><rect x="564.3" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onConnectionAttemptFailed (25 samples, 0.08%)</title><rect x="564.7" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.7" y="1134.0"></text>
</g>
<g>
<title>akka/event/BusLogging.warning (9 samples, 0.03%)</title><rect x="564.7" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.7" y="1118.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.warning$ (8 samples, 0.02%)</title><rect x="564.7" y="1091.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.7" y="1102.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.warning (8 samples, 0.02%)</title><rect x="564.7" y="1075.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.7" y="1086.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyWarning (7 samples, 0.02%)</title><rect x="564.7" y="1059.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (12 samples, 0.04%)</title><rect x="565.0" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (12 samples, 0.04%)</title><rect x="565.0" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (12 samples, 0.04%)</title><rect x="565.0" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1326/51309337.apply (10 samples, 0.03%)</title><rect x="565.1" y="1059.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$onConnectionAttemptFailed$1$adapted (10 samples, 0.03%)</title><rect x="565.1" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$onConnectionAttemptFailed$1 (10 samples, 0.03%)</title><rect x="565.1" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewConnectionEmbargo (10 samples, 0.03%)</title><rect x="565.1" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (10 samples, 0.03%)</title><rect x="565.1" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (10 samples, 0.03%)</title><rect x="565.1" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (10 samples, 0.03%)</title><rect x="565.1" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$585/1079374903.apply (25 samples, 0.08%)</title><rect x="565.5" y="1171.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (25 samples, 0.08%)</title><rect x="565.5" y="1155.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (25 samples, 0.08%)</title><rect x="565.5" y="1139.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (23 samples, 0.07%)</title><rect x="565.6" y="1123.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (23 samples, 0.07%)</title><rect x="565.6" y="1107.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (23 samples, 0.07%)</title><rect x="565.6" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (22 samples, 0.07%)</title><rect x="565.7" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot$$Lambda$610/1695382382.apply$mcV$sp (47 samples, 0.14%)</title><rect x="566.5" y="1267.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.$anonfun$updateState$1 (47 samples, 0.14%)</title><rect x="566.5" y="1251.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (36 samples, 0.11%)</title><rect x="566.7" y="1235.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (36 samples, 0.11%)</title><rect x="566.7" y="1219.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (36 samples, 0.11%)</title><rect x="566.7" y="1203.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (36 samples, 0.11%)</title><rect x="566.7" y="1187.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (15 samples, 0.05%)</title><rect x="567.0" y="1171.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (15 samples, 0.05%)</title><rect x="567.0" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (13 samples, 0.04%)</title><rect x="567.1" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (13 samples, 0.04%)</title><rect x="567.1" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (13 samples, 0.04%)</title><rect x="567.1" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (13 samples, 0.04%)</title><rect x="567.1" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$507/1838621408.apply (13 samples, 0.04%)</title><rect x="567.1" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (13 samples, 0.04%)</title><rect x="567.1" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (13 samples, 0.04%)</title><rect x="567.1" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (13 samples, 0.04%)</title><rect x="567.1" y="1027.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (13 samples, 0.04%)</title><rect x="567.1" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (13 samples, 0.04%)</title><rect x="567.1" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (13 samples, 0.04%)</title><rect x="567.1" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (9 samples, 0.03%)</title><rect x="567.1" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.1" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (9 samples, 0.03%)</title><rect x="567.1" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.1" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (9 samples, 0.03%)</title><rect x="567.1" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.1" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (9 samples, 0.03%)</title><rect x="567.1" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.02%)</title><rect x="567.6" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (33 samples, 0.10%)</title><rect x="568.4" y="1315.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (33 samples, 0.10%)</title><rect x="568.4" y="1299.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (31 samples, 0.09%)</title><rect x="568.4" y="1283.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (31 samples, 0.09%)</title><rect x="568.4" y="1267.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (30 samples, 0.09%)</title><rect x="568.4" y="1251.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (30 samples, 0.09%)</title><rect x="568.4" y="1235.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (30 samples, 0.09%)</title><rect x="568.4" y="1219.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (30 samples, 0.09%)</title><rect x="568.4" y="1203.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (16 samples, 0.05%)</title><rect x="568.4" y="1187.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (16 samples, 0.05%)</title><rect x="568.4" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unsubscribeAddressTerminated (8 samples, 0.02%)</title><rect x="568.5" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (8 samples, 0.02%)</title><rect x="569.0" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (8 samples, 0.02%)</title><rect x="569.0" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (8 samples, 0.02%)</title><rect x="569.0" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (8 samples, 0.02%)</title><rect x="569.0" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (8 samples, 0.02%)</title><rect x="569.0" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (7 samples, 0.02%)</title><rect x="569.0" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1030/1345087712.apply (15 samples, 0.05%)</title><rect x="569.6" y="1315.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6$adapted (13 samples, 0.04%)</title><rect x="569.6" y="1299.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6 (13 samples, 0.04%)</title><rect x="569.6" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.futureCompleted (13 samples, 0.04%)</title><rect x="569.6" y="1267.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.tryPull (9 samples, 0.03%)</title><rect x="569.7" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (7 samples, 0.02%)</title><rect x="569.8" y="1235.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.chasePull (7 samples, 0.02%)</title><rect x="569.8" y="1219.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$537/1811494766.apply (182 samples, 0.55%)</title><rect x="570.2" y="1315.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (177 samples, 0.54%)</title><rect x="570.3" y="1299.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (177 samples, 0.54%)</title><rect x="570.3" y="1283.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (177 samples, 0.54%)</title><rect x="570.3" y="1267.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$794/63725620.apply (25 samples, 0.08%)</title><rect x="570.5" y="1251.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (25 samples, 0.08%)</title><rect x="570.5" y="1235.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (25 samples, 0.08%)</title><rect x="570.5" y="1219.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (25 samples, 0.08%)</title><rect x="570.5" y="1203.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (23 samples, 0.07%)</title><rect x="570.6" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (12 samples, 0.04%)</title><rect x="570.7" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (10 samples, 0.03%)</title><rect x="570.7" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (9 samples, 0.03%)</title><rect x="571.1" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (8 samples, 0.02%)</title><rect x="571.1" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1099/537239878.apply (41 samples, 0.12%)</title><rect x="571.4" y="1251.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2$adapted (31 samples, 0.09%)</title><rect x="571.8" y="1235.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2 (31 samples, 0.09%)</title><rect x="571.8" y="1219.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (31 samples, 0.09%)</title><rect x="571.8" y="1203.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$535/1265939193.apply (68 samples, 0.21%)</title><rect x="572.9" y="1251.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (67 samples, 0.20%)</title><rect x="572.9" y="1235.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (67 samples, 0.20%)</title><rect x="572.9" y="1219.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (67 samples, 0.20%)</title><rect x="572.9" y="1203.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (7 samples, 0.02%)</title><rect x="573.0" y="1187.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.02%)</title><rect x="573.0" y="1171.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.02%)</title><rect x="573.0" y="1155.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.0" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.02%)</title><rect x="573.0" y="1139.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.0" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.02%)</title><rect x="573.0" y="1123.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.02%)</title><rect x="573.0" y="1107.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.0" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.02%)</title><rect x="573.0" y="1091.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.02%)</title><rect x="573.0" y="1075.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.unwatch (11 samples, 0.03%)</title><rect x="573.3" y="1187.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatch (11 samples, 0.03%)</title><rect x="573.3" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.3" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (10 samples, 0.03%)</title><rect x="573.7" y="1187.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (10 samples, 0.03%)</title><rect x="573.7" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (23 samples, 0.07%)</title><rect x="574.2" y="1187.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (22 samples, 0.07%)</title><rect x="574.2" y="1171.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.2" y="1182.0"></text>
</g>
<g>
<title>akka/io/Tcp$Connect.toString (22 samples, 0.07%)</title><rect x="574.2" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.2" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (22 samples, 0.07%)</title><rect x="574.2" y="1139.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (22 samples, 0.07%)</title><rect x="574.2" y="1123.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (22 samples, 0.07%)</title><rect x="574.2" y="1107.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (22 samples, 0.07%)</title><rect x="574.2" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (18 samples, 0.05%)</title><rect x="574.2" y="1075.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (18 samples, 0.05%)</title><rect x="574.2" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (18 samples, 0.05%)</title><rect x="574.2" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (16 samples, 0.05%)</title><rect x="574.2" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.02%)</title><rect x="574.2" y="1011.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (7 samples, 0.02%)</title><rect x="574.2" y="995.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (9 samples, 0.03%)</title><rect x="574.4" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.4" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (8 samples, 0.02%)</title><rect x="575.0" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (8 samples, 0.02%)</title><rect x="575.0" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.0" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (8 samples, 0.02%)</title><rect x="575.0" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (8 samples, 0.02%)</title><rect x="575.0" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (8 samples, 0.02%)</title><rect x="575.0" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.0" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (8 samples, 0.02%)</title><rect x="575.0" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.0" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (7 samples, 0.02%)</title><rect x="575.1" y="1091.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.1" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.02%)</title><rect x="575.1" y="1075.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$583/789102383.apply (19 samples, 0.06%)</title><rect x="575.3" y="1251.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1$adapted (16 samples, 0.05%)</title><rect x="575.4" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1 (16 samples, 0.05%)</title><rect x="575.4" y="1219.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (16 samples, 0.05%)</title><rect x="575.4" y="1203.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.4" y="1214.0"></text>
</g>
<g>
<title>itable stub (16 samples, 0.05%)</title><rect x="576.0" y="1251.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="579.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$493/607255038.apply (79 samples, 0.24%)</title><rect x="576.7" y="1315.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (78 samples, 0.24%)</title><rect x="576.7" y="1299.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (78 samples, 0.24%)</title><rect x="576.7" y="1283.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (78 samples, 0.24%)</title><rect x="576.7" y="1267.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (40 samples, 0.12%)</title><rect x="576.9" y="1251.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (29 samples, 0.09%)</title><rect x="577.2" y="1235.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (29 samples, 0.09%)</title><rect x="577.2" y="1219.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (29 samples, 0.09%)</title><rect x="577.2" y="1203.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (29 samples, 0.09%)</title><rect x="577.2" y="1187.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (29 samples, 0.09%)</title><rect x="577.2" y="1171.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.2" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (28 samples, 0.08%)</title><rect x="577.3" y="1155.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="580.3" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (27 samples, 0.08%)</title><rect x="577.3" y="1139.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="580.3" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (27 samples, 0.08%)</title><rect x="577.3" y="1123.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="580.3" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (22 samples, 0.07%)</title><rect x="577.5" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="580.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerMessages$Scheduled.timerId (19 samples, 0.06%)</title><rect x="578.3" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (12 samples, 0.04%)</title><rect x="579.0" y="1251.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.0" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (30 samples, 0.09%)</title><rect x="579.5" y="1315.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.5" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (30 samples, 0.09%)</title><rect x="579.5" y="1299.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.5" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (30 samples, 0.09%)</title><rect x="579.5" y="1283.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.5" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (30 samples, 0.09%)</title><rect x="579.5" y="1267.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.5" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (30 samples, 0.09%)</title><rect x="579.5" y="1251.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (30 samples, 0.09%)</title><rect x="579.5" y="1235.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.5" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (29 samples, 0.09%)</title><rect x="579.6" y="1219.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.6" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (28 samples, 0.08%)</title><rect x="579.6" y="1203.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.6" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (21 samples, 0.06%)</title><rect x="579.9" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.9" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (21 samples, 0.06%)</title><rect x="579.9" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.9" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (21 samples, 0.06%)</title><rect x="579.9" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.9" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (14 samples, 0.04%)</title><rect x="580.1" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.1" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.02%)</title><rect x="580.4" y="1123.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (100 samples, 0.30%)</title><rect x="580.6" y="1331.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.6" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (100 samples, 0.30%)</title><rect x="580.6" y="1315.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (85 samples, 0.26%)</title><rect x="580.8" y="1299.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (85 samples, 0.26%)</title><rect x="580.8" y="1283.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.8" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (71 samples, 0.21%)</title><rect x="581.3" y="1267.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.3" y="1278.0"></text>
</g>
<g>
<title>akka/event/BusLogging.&lt;init&gt; (15 samples, 0.05%)</title><rect x="581.7" y="1251.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.7" y="1262.0"></text>
</g>
<g>
<title>akka/event/BusLogging.&lt;init&gt; (11 samples, 0.03%)</title><rect x="581.8" y="1235.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (45 samples, 0.14%)</title><rect x="582.2" y="1251.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.2" y="1262.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (43 samples, 0.13%)</title><rect x="582.3" y="1235.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1030/1345087712.apply (8 samples, 0.02%)</title><rect x="582.5" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$537/1811494766.apply (9 samples, 0.03%)</title><rect x="582.8" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.8" y="1230.0"></text>
</g>
<g>
<title>itable stub (17 samples, 0.05%)</title><rect x="583.2" y="1219.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="586.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (4,982 samples, 15.08%)</title><rect x="584.2" y="1331.0" width="178.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.2" y="1342.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (4,971 samples, 15.05%)</title><rect x="584.2" y="1315.0" width="177.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.2" y="1326.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$3.onPull (8 samples, 0.02%)</title><rect x="585.4" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="588.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$4.onPush (7 samples, 0.02%)</title><rect x="585.7" y="1299.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$18.onPush (7 samples, 0.02%)</title><rect x="586.8" y="1299.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.8" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$19.onPull (7 samples, 0.02%)</title><rect x="587.1" y="1299.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$5.onPull (7 samples, 0.02%)</title><rect x="587.6" y="1299.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$3.onPull (9 samples, 0.03%)</title><rect x="588.1" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onPush (7 samples, 0.02%)</title><rect x="588.6" y="1299.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPull (8 samples, 0.02%)</title><rect x="588.8" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (11 samples, 0.03%)</title><rect x="589.1" y="1299.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (11 samples, 0.03%)</title><rect x="589.8" y="1299.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (26 samples, 0.08%)</title><rect x="590.2" y="1299.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (25 samples, 0.08%)</title><rect x="590.2" y="1283.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (10 samples, 0.03%)</title><rect x="590.3" y="1267.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.afterPostStop (8 samples, 0.02%)</title><rect x="590.7" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (610 samples, 1.85%)</title><rect x="591.3" y="1299.0" width="21.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.3" y="1310.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (8 samples, 0.02%)</title><rect x="592.6" y="1283.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (35 samples, 0.11%)</title><rect x="592.9" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (15 samples, 0.05%)</title><rect x="593.3" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (438 samples, 1.33%)</title><rect x="594.1" y="1283.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (7 samples, 0.02%)</title><rect x="594.6" y="1267.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.6" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (7 samples, 0.02%)</title><rect x="594.6" y="1251.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.6" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (7 samples, 0.02%)</title><rect x="594.6" y="1235.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.6" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (7 samples, 0.02%)</title><rect x="594.6" y="1219.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.6" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (7 samples, 0.02%)</title><rect x="594.6" y="1203.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.6" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.02%)</title><rect x="594.6" y="1187.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.6" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.02%)</title><rect x="594.6" y="1171.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.6" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.02%)</title><rect x="594.6" y="1155.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (7 samples, 0.02%)</title><rect x="594.6" y="1139.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.02%)</title><rect x="594.6" y="1123.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.02%)</title><rect x="594.6" y="1107.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.onPush (7 samples, 0.02%)</title><rect x="595.1" y="1267.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onPush (12 samples, 0.04%)</title><rect x="595.5" y="1267.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onPush (20 samples, 0.06%)</title><rect x="596.0" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (9 samples, 0.03%)</title><rect x="596.3" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (7 samples, 0.02%)</title><rect x="596.3" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (179 samples, 0.54%)</title><rect x="596.7" y="1267.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1028/1722728545.apply (175 samples, 0.53%)</title><rect x="596.8" y="1251.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (175 samples, 0.53%)</title><rect x="596.8" y="1235.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.watchTermination (19 samples, 0.06%)</title><rect x="596.9" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination$ (19 samples, 0.06%)</title><rect x="596.9" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination (19 samples, 0.06%)</title><rect x="596.9" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (19 samples, 0.06%)</title><rect x="596.9" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (19 samples, 0.06%)</title><rect x="596.9" y="1155.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (16 samples, 0.05%)</title><rect x="597.0" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (16 samples, 0.05%)</title><rect x="597.0" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (15 samples, 0.05%)</title><rect x="597.0" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (12 samples, 0.04%)</title><rect x="597.0" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (11 samples, 0.03%)</title><rect x="597.0" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (9 samples, 0.03%)</title><rect x="597.0" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (149 samples, 0.45%)</title><rect x="597.6" y="1219.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (149 samples, 0.45%)</title><rect x="597.6" y="1203.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (149 samples, 0.45%)</title><rect x="597.6" y="1187.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (149 samples, 0.45%)</title><rect x="597.6" y="1171.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (48 samples, 0.15%)</title><rect x="597.9" y="1155.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (41 samples, 0.12%)</title><rect x="598.2" y="1139.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (32 samples, 0.10%)</title><rect x="598.5" y="1123.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage.createLogic (7 samples, 0.02%)</title><rect x="598.9" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15.&lt;init&gt; (7 samples, 0.02%)</title><rect x="598.9" y="1091.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (34 samples, 0.10%)</title><rect x="599.7" y="1155.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (26 samples, 0.08%)</title><rect x="599.7" y="1139.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (26 samples, 0.08%)</title><rect x="599.7" y="1123.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (26 samples, 0.08%)</title><rect x="599.7" y="1107.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (26 samples, 0.08%)</title><rect x="599.7" y="1091.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (25 samples, 0.08%)</title><rect x="599.7" y="1075.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.7" y="1086.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (17 samples, 0.05%)</title><rect x="600.0" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.0" y="1070.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (10 samples, 0.03%)</title><rect x="600.1" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.1" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (7 samples, 0.02%)</title><rect x="600.1" y="1027.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (7 samples, 0.02%)</title><rect x="600.6" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (15 samples, 0.05%)</title><rect x="601.3" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (15 samples, 0.05%)</title><rect x="601.3" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.04%)</title><rect x="601.4" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.03%)</title><rect x="601.5" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (7 samples, 0.02%)</title><rect x="601.6" y="1091.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.6" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (16 samples, 0.05%)</title><rect x="601.8" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (15 samples, 0.05%)</title><rect x="601.8" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (14 samples, 0.04%)</title><rect x="601.8" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (14 samples, 0.04%)</title><rect x="601.8" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (7 samples, 0.02%)</title><rect x="602.1" y="1091.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (10 samples, 0.03%)</title><rect x="602.5" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1092/517892428.apply (9 samples, 0.03%)</title><rect x="602.6" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (9 samples, 0.03%)</title><rect x="602.6" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (9 samples, 0.03%)</title><rect x="602.6" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (7 samples, 0.02%)</title><rect x="602.6" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (7 samples, 0.02%)</title><rect x="602.6" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (7 samples, 0.02%)</title><rect x="602.6" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.6" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (168 samples, 0.51%)</title><rect x="603.1" y="1267.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (139 samples, 0.42%)</title><rect x="603.3" y="1251.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (139 samples, 0.42%)</title><rect x="603.3" y="1235.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (139 samples, 0.42%)</title><rect x="603.3" y="1219.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (139 samples, 0.42%)</title><rect x="603.3" y="1203.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (139 samples, 0.42%)</title><rect x="603.3" y="1187.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (139 samples, 0.42%)</title><rect x="603.3" y="1171.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (139 samples, 0.42%)</title><rect x="603.3" y="1155.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (139 samples, 0.42%)</title><rect x="603.3" y="1139.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (130 samples, 0.39%)</title><rect x="603.3" y="1123.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (126 samples, 0.38%)</title><rect x="603.4" y="1107.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (126 samples, 0.38%)</title><rect x="603.4" y="1091.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (126 samples, 0.38%)</title><rect x="603.4" y="1075.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (120 samples, 0.36%)</title><rect x="603.4" y="1059.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (120 samples, 0.36%)</title><rect x="603.4" y="1043.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (120 samples, 0.36%)</title><rect x="603.4" y="1027.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (120 samples, 0.36%)</title><rect x="603.4" y="1011.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (114 samples, 0.35%)</title><rect x="603.7" y="995.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (114 samples, 0.35%)</title><rect x="603.7" y="979.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (114 samples, 0.35%)</title><rect x="603.7" y="963.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.7" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.03%)</title><rect x="603.7" y="947.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="606.7" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (101 samples, 0.31%)</title><rect x="604.1" y="947.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="607.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 0.28%)</title><rect x="604.4" y="931.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="607.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (92 samples, 0.28%)</title><rect x="604.4" y="915.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.4" y="926.0"></text>
</g>
<g>
<title>sys_futex (78 samples, 0.24%)</title><rect x="604.9" y="899.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.9" y="910.0"></text>
</g>
<g>
<title>do_futex (77 samples, 0.23%)</title><rect x="604.9" y="883.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.9" y="894.0"></text>
</g>
<g>
<title>futex_wake (75 samples, 0.23%)</title><rect x="604.9" y="867.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.9" y="878.0"></text>
</g>
<g>
<title>wake_up_q (67 samples, 0.20%)</title><rect x="605.2" y="851.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="608.2" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 0.20%)</title><rect x="605.2" y="835.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.2" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 0.20%)</title><rect x="605.2" y="819.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="608.2" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (8 samples, 0.02%)</title><rect x="608.0" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (7 samples, 0.02%)</title><rect x="608.3" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (8 samples, 0.02%)</title><rect x="608.7" y="1251.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.7" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.toByteString1 (7 samples, 0.02%)</title><rect x="608.7" y="1235.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.7" y="1246.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1$.apply (7 samples, 0.02%)</title><rect x="608.7" y="1219.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.7" y="1230.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.&lt;init&gt; (7 samples, 0.02%)</title><rect x="608.7" y="1203.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.7" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.&lt;init&gt; (7 samples, 0.02%)</title><rect x="608.7" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.7" y="1198.0"></text>
</g>
<g>
<title>itable stub (18 samples, 0.05%)</title><rect x="609.1" y="1267.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="612.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (9 samples, 0.03%)</title><rect x="610.4" y="1283.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.4" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (7 samples, 0.02%)</title><rect x="610.5" y="1267.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.5" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (7 samples, 0.02%)</title><rect x="610.5" y="1251.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (7 samples, 0.02%)</title><rect x="610.5" y="1235.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.5" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (7 samples, 0.02%)</title><rect x="610.5" y="1219.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.5" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (7 samples, 0.02%)</title><rect x="610.5" y="1203.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.5" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (7 samples, 0.02%)</title><rect x="610.5" y="1187.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.5" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (7 samples, 0.02%)</title><rect x="610.5" y="1171.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.5" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.02%)</title><rect x="610.5" y="1155.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.5" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.02%)</title><rect x="610.5" y="1139.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.5" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.02%)</title><rect x="610.5" y="1123.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (7 samples, 0.02%)</title><rect x="610.5" y="1107.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.02%)</title><rect x="610.5" y="1091.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.02%)</title><rect x="610.5" y="1075.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (7 samples, 0.02%)</title><rect x="610.7" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (7 samples, 0.02%)</title><rect x="610.7" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (7 samples, 0.02%)</title><rect x="610.7" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onUpstreamFailure (7 samples, 0.02%)</title><rect x="611.2" y="1283.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (29 samples, 0.09%)</title><rect x="611.6" y="1283.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.6" y="1294.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (18 samples, 0.05%)</title><rect x="611.7" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.7" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (18 samples, 0.05%)</title><rect x="611.7" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.7" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (18 samples, 0.05%)</title><rect x="611.7" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.7" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (9 samples, 0.03%)</title><rect x="611.7" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (9 samples, 0.03%)</title><rect x="611.7" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (9 samples, 0.03%)</title><rect x="611.7" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.7" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (9 samples, 0.03%)</title><rect x="611.7" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.7" y="1182.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (8 samples, 0.02%)</title><rect x="612.0" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (361 samples, 1.09%)</title><rect x="613.1" y="1299.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPull (9 samples, 0.03%)</title><rect x="613.1" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$3.onPull (9 samples, 0.03%)</title><rect x="613.4" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$19.onPull (7 samples, 0.02%)</title><rect x="613.8" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$3.onPull (15 samples, 0.05%)</title><rect x="614.2" y="1283.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (8 samples, 0.02%)</title><rect x="614.4" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (13 samples, 0.04%)</title><rect x="615.5" y="1283.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (13 samples, 0.04%)</title><rect x="615.5" y="1267.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (10 samples, 0.03%)</title><rect x="615.6" y="1251.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/InPort.id (7 samples, 0.02%)</title><rect x="615.6" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.onPull (24 samples, 0.07%)</title><rect x="616.1" y="1283.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (20 samples, 0.06%)</title><rect x="616.2" y="1267.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (20 samples, 0.06%)</title><rect x="616.2" y="1251.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (18 samples, 0.05%)</title><rect x="616.3" y="1235.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (11 samples, 0.03%)</title><rect x="616.5" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (9 samples, 0.03%)</title><rect x="616.5" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (9 samples, 0.03%)</title><rect x="616.5" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (8 samples, 0.02%)</title><rect x="617.0" y="1283.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (8 samples, 0.02%)</title><rect x="617.0" y="1267.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.02%)</title><rect x="617.0" y="1251.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.02%)</title><rect x="617.0" y="1235.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.02%)</title><rect x="617.0" y="1219.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.02%)</title><rect x="617.0" y="1203.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.02%)</title><rect x="617.0" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.02%)</title><rect x="617.0" y="1171.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.02%)</title><rect x="617.0" y="1155.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.02%)</title><rect x="617.0" y="1139.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="617.0" y="1123.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.02%)</title><rect x="617.0" y="1107.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="617.0" y="1091.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.02%)</title><rect x="617.0" y="1075.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.02%)</title><rect x="617.0" y="1059.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.02%)</title><rect x="617.0" y="1043.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.02%)</title><rect x="617.0" y="1027.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.02%)</title><rect x="617.0" y="1011.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.02%)</title><rect x="617.0" y="995.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.02%)</title><rect x="617.0" y="979.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.0" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.02%)</title><rect x="617.0" y="963.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="620.0" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (235 samples, 0.71%)</title><rect x="617.2" y="1283.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (232 samples, 0.70%)</title><rect x="617.2" y="1267.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (232 samples, 0.70%)</title><rect x="617.2" y="1251.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (232 samples, 0.70%)</title><rect x="617.2" y="1235.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (232 samples, 0.70%)</title><rect x="617.2" y="1219.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (232 samples, 0.70%)</title><rect x="617.2" y="1203.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (232 samples, 0.70%)</title><rect x="617.2" y="1187.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (232 samples, 0.70%)</title><rect x="617.2" y="1171.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (231 samples, 0.70%)</title><rect x="617.3" y="1155.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (228 samples, 0.69%)</title><rect x="617.3" y="1139.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (228 samples, 0.69%)</title><rect x="617.3" y="1123.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (228 samples, 0.69%)</title><rect x="617.3" y="1107.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (228 samples, 0.69%)</title><rect x="617.3" y="1091.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (225 samples, 0.68%)</title><rect x="617.3" y="1075.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (225 samples, 0.68%)</title><rect x="617.3" y="1059.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (225 samples, 0.68%)</title><rect x="617.3" y="1043.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (225 samples, 0.68%)</title><rect x="617.3" y="1027.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (220 samples, 0.67%)</title><rect x="617.5" y="1011.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (219 samples, 0.66%)</title><rect x="617.5" y="995.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (219 samples, 0.66%)</title><rect x="617.5" y="979.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.5" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (29 samples, 0.09%)</title><rect x="617.7" y="963.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="620.7" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (184 samples, 0.56%)</title><rect x="618.8" y="963.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="621.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 0.50%)</title><rect x="619.4" y="947.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="622.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (165 samples, 0.50%)</title><rect x="619.4" y="931.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="622.4" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (24 samples, 0.07%)</title><rect x="619.8" y="915.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="622.8" y="926.0"></text>
</g>
<g>
<title>schedule (24 samples, 0.07%)</title><rect x="619.8" y="899.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="622.8" y="910.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.07%)</title><rect x="619.8" y="883.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="622.8" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.07%)</title><rect x="619.8" y="867.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="622.8" y="878.0"></text>
</g>
<g>
<title>sys_futex (130 samples, 0.39%)</title><rect x="620.7" y="915.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="623.7" y="926.0"></text>
</g>
<g>
<title>do_futex (130 samples, 0.39%)</title><rect x="620.7" y="899.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.7" y="910.0"></text>
</g>
<g>
<title>futex_wake (128 samples, 0.39%)</title><rect x="620.7" y="883.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="623.7" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.02%)</title><rect x="620.8" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="623.8" y="878.0"></text>
</g>
<g>
<title>wake_up_q (117 samples, 0.35%)</title><rect x="621.1" y="867.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.1" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (116 samples, 0.35%)</title><rect x="621.1" y="851.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="624.1" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (116 samples, 0.35%)</title><rect x="621.1" y="835.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="624.1" y="846.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11$$anon$12.onPull (8 samples, 0.02%)</title><rect x="625.6" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (3,482 samples, 10.54%)</title><rect x="626.0" y="1299.0" width="124.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.0" y="1310.0">akka/stream/imp..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.onPush (24 samples, 0.07%)</title><rect x="626.1" y="1283.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.createEntity (7 samples, 0.02%)</title><rect x="626.1" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse$.apply (12 samples, 0.04%)</title><rect x="626.4" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.&lt;init&gt; (11 samples, 0.03%)</title><rect x="626.5" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (346 samples, 1.05%)</title><rect x="627.0" y="1283.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.akka$http$impl$engine$client$OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$$drainParser (18 samples, 0.05%)</title><rect x="627.0" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.e$1 (8 samples, 0.02%)</title><rect x="627.1" y="1251.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (324 samples, 0.98%)</title><rect x="627.7" y="1267.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (324 samples, 0.98%)</title><rect x="627.7" y="1251.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (324 samples, 0.98%)</title><rect x="627.7" y="1235.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (322 samples, 0.97%)</title><rect x="627.7" y="1219.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (321 samples, 0.97%)</title><rect x="627.7" y="1203.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (321 samples, 0.97%)</title><rect x="627.7" y="1187.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (314 samples, 0.95%)</title><rect x="627.7" y="1171.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$593/926097149.apply (310 samples, 0.94%)</title><rect x="627.8" y="1155.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (309 samples, 0.94%)</title><rect x="627.8" y="1139.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$592/125522925.apply (308 samples, 0.93%)</title><rect x="627.8" y="1123.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (306 samples, 0.93%)</title><rect x="627.9" y="1107.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (306 samples, 0.93%)</title><rect x="627.9" y="1091.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (306 samples, 0.93%)</title><rect x="627.9" y="1075.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (306 samples, 0.93%)</title><rect x="627.9" y="1059.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (305 samples, 0.92%)</title><rect x="628.0" y="1043.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (302 samples, 0.91%)</title><rect x="628.0" y="1027.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (283 samples, 0.86%)</title><rect x="628.0" y="1011.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (283 samples, 0.86%)</title><rect x="628.0" y="995.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (283 samples, 0.86%)</title><rect x="628.0" y="979.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (247 samples, 0.75%)</title><rect x="628.2" y="963.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (145 samples, 0.44%)</title><rect x="628.3" y="947.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (103 samples, 0.31%)</title><rect x="628.9" y="931.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (84 samples, 0.25%)</title><rect x="629.1" y="915.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.1" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (12 samples, 0.04%)</title><rect x="629.1" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/588251519.apply (69 samples, 0.21%)</title><rect x="629.6" y="899.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (68 samples, 0.21%)</title><rect x="629.6" y="883.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (58 samples, 0.18%)</title><rect x="629.8" y="867.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.8" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (55 samples, 0.17%)</title><rect x="629.9" y="851.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.9" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (53 samples, 0.16%)</title><rect x="629.9" y="835.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.9" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (50 samples, 0.15%)</title><rect x="630.0" y="819.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.0" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$596/460048302.apply (47 samples, 0.14%)</title><rect x="630.1" y="803.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.1" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (46 samples, 0.14%)</title><rect x="630.1" y="787.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (46 samples, 0.14%)</title><rect x="630.1" y="771.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (46 samples, 0.14%)</title><rect x="630.1" y="755.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.1" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (46 samples, 0.14%)</title><rect x="630.1" y="739.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (44 samples, 0.13%)</title><rect x="630.1" y="723.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.1" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (44 samples, 0.13%)</title><rect x="630.1" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.1" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (44 samples, 0.13%)</title><rect x="630.1" y="691.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.1" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (42 samples, 0.13%)</title><rect x="630.1" y="675.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.1" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (41 samples, 0.12%)</title><rect x="630.2" y="659.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.2" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (41 samples, 0.12%)</title><rect x="630.2" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.2" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (19 samples, 0.06%)</title><rect x="630.3" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.3" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (19 samples, 0.06%)</title><rect x="630.3" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.3" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (18 samples, 0.05%)</title><rect x="630.3" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.3" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.month (7 samples, 0.02%)</title><rect x="630.4" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.4" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.day$minusname (8 samples, 0.02%)</title><rect x="631.0" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.0" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$ (7 samples, 0.02%)</title><rect x="631.0" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.0" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname (7 samples, 0.02%)</title><rect x="631.0" y="595.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.0" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (7 samples, 0.02%)</title><rect x="632.3" y="915.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (7 samples, 0.02%)</title><rect x="632.3" y="899.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.resultHeader_$eq (19 samples, 0.06%)</title><rect x="632.6" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (78 samples, 0.24%)</title><rect x="633.6" y="947.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (63 samples, 0.19%)</title><rect x="633.9" y="931.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/588251519.apply (61 samples, 0.18%)</title><rect x="634.0" y="915.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.0" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (61 samples, 0.18%)</title><rect x="634.0" y="899.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.0" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (21 samples, 0.06%)</title><rect x="634.0" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.0" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (21 samples, 0.06%)</title><rect x="634.0" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.0" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (21 samples, 0.06%)</title><rect x="634.0" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.0" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (21 samples, 0.06%)</title><rect x="634.0" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.0" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$603/876396357.apply (19 samples, 0.06%)</title><rect x="634.0" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.0" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (19 samples, 0.06%)</title><rect x="634.0" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.0" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (19 samples, 0.06%)</title><rect x="634.0" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.0" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (19 samples, 0.06%)</title><rect x="634.0" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.0" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (19 samples, 0.06%)</title><rect x="634.0" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.0" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (10 samples, 0.03%)</title><rect x="634.0" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.0" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (7 samples, 0.02%)</title><rect x="634.4" y="739.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.4" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (7 samples, 0.02%)</title><rect x="634.4" y="723.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.4" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (7 samples, 0.02%)</title><rect x="634.4" y="707.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.4" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (20 samples, 0.06%)</title><rect x="634.7" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.7" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (18 samples, 0.05%)</title><rect x="634.8" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.8" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (18 samples, 0.05%)</title><rect x="634.8" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.8" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (18 samples, 0.05%)</title><rect x="634.8" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$596/460048302.apply (18 samples, 0.05%)</title><rect x="634.8" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (18 samples, 0.05%)</title><rect x="634.8" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (18 samples, 0.05%)</title><rect x="634.8" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (18 samples, 0.05%)</title><rect x="634.8" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (18 samples, 0.05%)</title><rect x="634.8" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.8" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (18 samples, 0.05%)</title><rect x="634.8" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (18 samples, 0.05%)</title><rect x="634.8" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (16 samples, 0.05%)</title><rect x="634.8" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (16 samples, 0.05%)</title><rect x="634.8" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (16 samples, 0.05%)</title><rect x="634.8" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.8" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (16 samples, 0.05%)</title><rect x="634.8" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.8" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (13 samples, 0.04%)</title><rect x="635.5" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.5" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (13 samples, 0.04%)</title><rect x="635.5" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.5" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (13 samples, 0.04%)</title><rect x="635.5" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.5" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (13 samples, 0.04%)</title><rect x="635.5" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.5" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$594/1242494006.apply (13 samples, 0.04%)</title><rect x="635.5" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.5" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (12 samples, 0.04%)</title><rect x="635.5" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.5" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (12 samples, 0.04%)</title><rect x="635.5" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.5" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (12 samples, 0.04%)</title><rect x="635.5" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.5" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (10 samples, 0.03%)</title><rect x="635.6" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.6" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (7 samples, 0.02%)</title><rect x="635.6" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.6" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (7 samples, 0.02%)</title><rect x="635.6" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.6" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (7 samples, 0.02%)</title><rect x="635.6" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.6" y="718.0"></text>
</g>
<g>
<title>scala/math/package$.signum (9 samples, 0.03%)</title><rect x="636.6" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (28 samples, 0.08%)</title><rect x="637.1" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseProtocol (9 samples, 0.03%)</title><rect x="638.1" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseProtocol$ (9 samples, 0.03%)</title><rect x="638.1" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseProtocol (9 samples, 0.03%)</title><rect x="638.1" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.c$1 (7 samples, 0.02%)</title><rect x="638.2" y="963.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseStatus (9 samples, 0.03%)</title><rect x="638.5" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.doPull (7 samples, 0.02%)</title><rect x="639.0" y="1171.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull$ (7 samples, 0.02%)</title><rect x="639.0" y="1155.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull (7 samples, 0.02%)</title><rect x="639.0" y="1139.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (419 samples, 1.27%)</title><rect x="639.3" y="1283.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (7 samples, 0.02%)</title><rect x="639.3" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (398 samples, 1.20%)</title><rect x="639.6" y="1267.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (371 samples, 1.12%)</title><rect x="639.7" y="1251.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (370 samples, 1.12%)</title><rect x="639.8" y="1235.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (370 samples, 1.12%)</title><rect x="639.8" y="1219.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (370 samples, 1.12%)</title><rect x="639.8" y="1203.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$507/1838621408.apply (281 samples, 0.85%)</title><rect x="640.0" y="1187.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (280 samples, 0.85%)</title><rect x="640.0" y="1171.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (85 samples, 0.26%)</title><rect x="640.0" y="1155.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (84 samples, 0.25%)</title><rect x="640.1" y="1139.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (83 samples, 0.25%)</title><rect x="640.1" y="1123.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (83 samples, 0.25%)</title><rect x="640.1" y="1107.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (81 samples, 0.25%)</title><rect x="640.2" y="1091.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (46 samples, 0.14%)</title><rect x="640.3" y="1075.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (46 samples, 0.14%)</title><rect x="640.3" y="1059.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (46 samples, 0.14%)</title><rect x="640.3" y="1043.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (46 samples, 0.14%)</title><rect x="640.3" y="1027.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (14 samples, 0.04%)</title><rect x="640.5" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (12 samples, 0.04%)</title><rect x="640.6" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.6" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (12 samples, 0.04%)</title><rect x="640.6" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (16 samples, 0.05%)</title><rect x="642.1" y="1075.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (16 samples, 0.05%)</title><rect x="642.1" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (11 samples, 0.03%)</title><rect x="642.1" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (11 samples, 0.03%)</title><rect x="642.1" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (9 samples, 0.03%)</title><rect x="642.1" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.1" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (9 samples, 0.03%)</title><rect x="642.1" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (195 samples, 0.59%)</title><rect x="643.1" y="1155.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (195 samples, 0.59%)</title><rect x="643.1" y="1139.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (195 samples, 0.59%)</title><rect x="643.1" y="1123.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (194 samples, 0.59%)</title><rect x="643.1" y="1107.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (194 samples, 0.59%)</title><rect x="643.1" y="1091.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (112 samples, 0.34%)</title><rect x="643.1" y="1075.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (112 samples, 0.34%)</title><rect x="643.1" y="1059.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (111 samples, 0.34%)</title><rect x="643.2" y="1043.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (111 samples, 0.34%)</title><rect x="643.2" y="1027.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (8 samples, 0.02%)</title><rect x="643.4" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.4" y="1022.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (8 samples, 0.02%)</title><rect x="643.4" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (49 samples, 0.15%)</title><rect x="643.7" y="1011.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.7" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.createLogicAndMaterializedValue (8 samples, 0.02%)</title><rect x="643.8" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (37 samples, 0.11%)</title><rect x="644.1" y="995.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.1" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (37 samples, 0.11%)</title><rect x="644.1" y="979.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (7 samples, 0.02%)</title><rect x="644.5" y="963.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.&lt;init&gt; (7 samples, 0.02%)</title><rect x="644.5" y="947.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.5" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (18 samples, 0.05%)</title><rect x="645.8" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.8" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (18 samples, 0.05%)</title><rect x="645.8" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.05%)</title><rect x="645.8" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.8" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.03%)</title><rect x="646.1" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.1" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (8 samples, 0.02%)</title><rect x="646.5" y="1011.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (7 samples, 0.02%)</title><rect x="646.5" y="995.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (8 samples, 0.02%)</title><rect x="647.1" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (8 samples, 0.02%)</title><rect x="647.1" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (46 samples, 0.14%)</title><rect x="647.4" y="1075.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (46 samples, 0.14%)</title><rect x="647.4" y="1059.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.4" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (35 samples, 0.11%)</title><rect x="647.4" y="1043.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (35 samples, 0.11%)</title><rect x="647.4" y="1027.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.4" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (31 samples, 0.09%)</title><rect x="647.4" y="1011.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.4" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (27 samples, 0.08%)</title><rect x="647.5" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (20 samples, 0.06%)</title><rect x="647.5" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (11 samples, 0.03%)</title><rect x="647.5" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (10 samples, 0.03%)</title><rect x="648.7" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.7" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.viaMat (9 samples, 0.03%)</title><rect x="649.1" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (8 samples, 0.02%)</title><rect x="650.1" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.pushRequest (24 samples, 0.07%)</title><rect x="650.4" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.emitRequest (24 samples, 0.07%)</title><rect x="650.4" y="1171.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.push (18 samples, 0.05%)</title><rect x="650.6" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.pushSubstream (18 samples, 0.05%)</title><rect x="650.6" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (13 samples, 0.04%)</title><rect x="650.7" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (13 samples, 0.04%)</title><rect x="650.7" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (11 samples, 0.03%)</title><rect x="650.8" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (7 samples, 0.02%)</title><rect x="650.9" y="1075.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (7 samples, 0.02%)</title><rect x="650.9" y="1059.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (7 samples, 0.02%)</title><rect x="650.9" y="1043.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (37 samples, 0.11%)</title><rect x="651.5" y="1187.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (23 samples, 0.07%)</title><rect x="651.8" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (16 samples, 0.05%)</title><rect x="653.0" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (7 samples, 0.02%)</title><rect x="653.0" y="1235.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.03%)</title><rect x="653.2" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.find (7 samples, 0.02%)</title><rect x="653.6" y="1251.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.find$ (7 samples, 0.02%)</title><rect x="653.6" y="1235.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (9 samples, 0.03%)</title><rect x="653.8" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.8" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (7 samples, 0.02%)</title><rect x="653.9" y="1251.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (7 samples, 0.02%)</title><rect x="653.9" y="1235.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (7 samples, 0.02%)</title><rect x="653.9" y="1219.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (459 samples, 1.39%)</title><rect x="654.3" y="1283.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (448 samples, 1.36%)</title><rect x="654.5" y="1267.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (448 samples, 1.36%)</title><rect x="654.5" y="1251.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (448 samples, 1.36%)</title><rect x="654.5" y="1235.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (438 samples, 1.33%)</title><rect x="654.6" y="1219.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (438 samples, 1.33%)</title><rect x="654.6" y="1203.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (438 samples, 1.33%)</title><rect x="654.6" y="1187.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (434 samples, 1.31%)</title><rect x="654.6" y="1171.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1079/1201046901.apply (316 samples, 0.96%)</title><rect x="654.6" y="1155.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (311 samples, 0.94%)</title><rect x="654.8" y="1139.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$1105/118472125.apply (309 samples, 0.94%)</title><rect x="654.9" y="1123.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (309 samples, 0.94%)</title><rect x="654.9" y="1107.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (308 samples, 0.93%)</title><rect x="654.9" y="1091.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (307 samples, 0.93%)</title><rect x="654.9" y="1075.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (307 samples, 0.93%)</title><rect x="654.9" y="1059.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (307 samples, 0.93%)</title><rect x="654.9" y="1043.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (276 samples, 0.84%)</title><rect x="655.0" y="1027.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (166 samples, 0.50%)</title><rect x="655.1" y="1011.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (166 samples, 0.50%)</title><rect x="655.1" y="995.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (166 samples, 0.50%)</title><rect x="655.1" y="979.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (99 samples, 0.30%)</title><rect x="655.2" y="963.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (68 samples, 0.21%)</title><rect x="655.2" y="947.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (28 samples, 0.08%)</title><rect x="655.5" y="931.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.5" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (15 samples, 0.05%)</title><rect x="655.8" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (15 samples, 0.05%)</title><rect x="655.8" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.resultHeader_$eq (27 samples, 0.08%)</title><rect x="656.5" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.5" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (7 samples, 0.02%)</title><rect x="657.9" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.9" y="958.0"></text>
</g>
<g>
<title>scala/math/package$.signum (10 samples, 0.03%)</title><rect x="658.2" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (55 samples, 0.17%)</title><rect x="658.7" y="963.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.strictEntity (41 samples, 0.12%)</title><rect x="659.2" y="947.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity$ (41 samples, 0.12%)</title><rect x="659.2" y="931.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.2" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity (41 samples, 0.12%)</title><rect x="659.2" y="915.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.2" y="926.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.slice (38 samples, 0.12%)</title><rect x="659.3" y="899.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.3" y="910.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.slice (33 samples, 0.10%)</title><rect x="659.3" y="883.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.3" y="894.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.drop (33 samples, 0.10%)</title><rect x="659.3" y="867.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.3" y="878.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.drop1 (33 samples, 0.10%)</title><rect x="659.3" y="851.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.3" y="862.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1$.apply (33 samples, 0.10%)</title><rect x="659.3" y="835.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.3" y="846.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.&lt;init&gt; (32 samples, 0.10%)</title><rect x="659.3" y="819.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.3" y="830.0"></text>
</g>
<g>
<title>akka/util/ByteString.&lt;init&gt; (32 samples, 0.10%)</title><rect x="659.3" y="803.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.3" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMethod (8 samples, 0.02%)</title><rect x="661.0" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (100 samples, 0.30%)</title><rect x="661.3" y="1011.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (81 samples, 0.25%)</title><rect x="661.5" y="995.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (79 samples, 0.24%)</title><rect x="661.6" y="979.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.6" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (78 samples, 0.24%)</title><rect x="661.6" y="963.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.6" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser$AlternativeDeliverySchemes$$anon$2.success (7 samples, 0.02%)</title><rect x="661.6" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.6" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (71 samples, 0.21%)</title><rect x="661.9" y="947.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.9" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (51 samples, 0.15%)</title><rect x="662.0" y="931.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.0" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1103/320264010.apply (35 samples, 0.11%)</title><rect x="662.0" y="915.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.0" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (27 samples, 0.08%)</title><rect x="662.2" y="899.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.2" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (25 samples, 0.08%)</title><rect x="662.2" y="883.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.2" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (24 samples, 0.07%)</title><rect x="662.3" y="867.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$26 (12 samples, 0.04%)</title><rect x="662.4" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.4" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.segment (7 samples, 0.02%)</title><rect x="662.4" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.4" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$12 (7 samples, 0.02%)</title><rect x="662.4" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.4" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.pchar (7 samples, 0.02%)</title><rect x="662.4" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.4" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.savePath (9 samples, 0.03%)</title><rect x="662.8" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.8" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (15 samples, 0.05%)</title><rect x="663.2" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.2" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringParserInput.length (8 samples, 0.02%)</title><rect x="663.5" y="899.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.5" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (18 samples, 0.05%)</title><rect x="663.8" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.8" y="942.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.slice (13 samples, 0.04%)</title><rect x="664.4" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.4" y="1006.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.slice (11 samples, 0.03%)</title><rect x="664.5" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (26 samples, 0.08%)</title><rect x="664.9" y="1027.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseProtocol (20 samples, 0.06%)</title><rect x="665.0" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseProtocol$ (20 samples, 0.06%)</title><rect x="665.0" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseProtocol (20 samples, 0.06%)</title><rect x="665.0" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.c$1 (13 samples, 0.04%)</title><rect x="665.1" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.byteChar (12 samples, 0.04%)</title><rect x="665.1" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.byteAt (12 samples, 0.04%)</title><rect x="665.1" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.1" y="942.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.apply (7 samples, 0.02%)</title><rect x="665.2" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.2" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$437/7052407.apply (110 samples, 0.33%)</title><rect x="665.9" y="1155.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (109 samples, 0.33%)</title><rect x="666.0" y="1139.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (109 samples, 0.33%)</title><rect x="666.0" y="1123.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (109 samples, 0.33%)</title><rect x="666.0" y="1107.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (109 samples, 0.33%)</title><rect x="666.0" y="1091.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (107 samples, 0.32%)</title><rect x="666.0" y="1075.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (90 samples, 0.27%)</title><rect x="666.0" y="1059.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (90 samples, 0.27%)</title><rect x="666.0" y="1043.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (89 samples, 0.27%)</title><rect x="666.0" y="1027.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (79 samples, 0.24%)</title><rect x="666.1" y="1011.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (9 samples, 0.03%)</title><rect x="666.2" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (66 samples, 0.20%)</title><rect x="666.5" y="995.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (61 samples, 0.18%)</title><rect x="666.5" y="979.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/588251519.apply (54 samples, 0.16%)</title><rect x="666.7" y="963.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (54 samples, 0.16%)</title><rect x="666.7" y="947.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (23 samples, 0.07%)</title><rect x="666.7" y="931.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.7" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (21 samples, 0.06%)</title><rect x="666.8" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.8" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (21 samples, 0.06%)</title><rect x="666.8" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.8" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (21 samples, 0.06%)</title><rect x="666.8" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.8" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$603/876396357.apply (21 samples, 0.06%)</title><rect x="666.8" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (19 samples, 0.06%)</title><rect x="666.9" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (19 samples, 0.06%)</title><rect x="666.9" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (19 samples, 0.06%)</title><rect x="666.9" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (19 samples, 0.06%)</title><rect x="666.9" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (14 samples, 0.04%)</title><rect x="666.9" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.9" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (7 samples, 0.02%)</title><rect x="666.9" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.9" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (7 samples, 0.02%)</title><rect x="666.9" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.9" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (7 samples, 0.02%)</title><rect x="666.9" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.9" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.apply (20 samples, 0.06%)</title><rect x="667.5" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.5" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (19 samples, 0.06%)</title><rect x="667.5" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.5" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (19 samples, 0.06%)</title><rect x="667.5" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.5" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (19 samples, 0.06%)</title><rect x="667.5" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.5" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31$$Lambda$998/599447413.apply (19 samples, 0.06%)</title><rect x="667.5" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.5" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.$anonfun$apply$31 (18 samples, 0.05%)</title><rect x="667.6" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.6" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.host (18 samples, 0.05%)</title><rect x="667.6" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.6" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host$ (18 samples, 0.05%)</title><rect x="667.6" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.6" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host (18 samples, 0.05%)</title><rect x="667.6" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.6" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort$minuspushed (13 samples, 0.04%)</title><rect x="667.6" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.6" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (12 samples, 0.04%)</title><rect x="667.6" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.6" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (8 samples, 0.02%)</title><rect x="667.6" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.6" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.apply (10 samples, 0.03%)</title><rect x="668.2" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.2" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (9 samples, 0.03%)</title><rect x="668.2" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.2" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (9 samples, 0.03%)</title><rect x="668.2" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.2" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (8 samples, 0.02%)</title><rect x="668.2" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.2" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56$$Lambda$1104/1428744218.apply (7 samples, 0.02%)</title><rect x="668.2" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.2" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.$anonfun$apply$56 (7 samples, 0.02%)</title><rect x="668.2" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.2" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.user$minusagent (7 samples, 0.02%)</title><rect x="668.2" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.2" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent$ (7 samples, 0.02%)</title><rect x="668.2" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.2" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent (7 samples, 0.02%)</title><rect x="668.2" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.2" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (8 samples, 0.02%)</title><rect x="668.9" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (13 samples, 0.04%)</title><rect x="669.3" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (10 samples, 0.03%)</title><rect x="669.4" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (10 samples, 0.03%)</title><rect x="669.4" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.4" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (9 samples, 0.03%)</title><rect x="669.4" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.4" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (7 samples, 0.02%)</title><rect x="669.4" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.4" y="1006.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.02%)</title><rect x="669.9" y="1155.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="672.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (81 samples, 0.25%)</title><rect x="670.7" y="1283.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (76 samples, 0.23%)</title><rect x="670.7" y="1267.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (67 samples, 0.20%)</title><rect x="670.7" y="1251.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderContentLengthHeader$1 (15 samples, 0.05%)</title><rect x="671.0" y="1235.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (13 samples, 0.04%)</title><rect x="671.0" y="1219.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (13 samples, 0.04%)</title><rect x="671.0" y="1203.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (11 samples, 0.03%)</title><rect x="671.1" y="1187.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (24 samples, 0.07%)</title><rect x="671.5" y="1235.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.akka$http$impl$engine$rendering$HttpResponseRendererFactory$$dateHeader (19 samples, 0.06%)</title><rect x="671.7" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$2.onPush (7 samples, 0.02%)</title><rect x="673.6" y="1283.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$4.onPush (8 samples, 0.02%)</title><rect x="673.8" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.onPush (8 samples, 0.02%)</title><rect x="674.1" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (13 samples, 0.04%)</title><rect x="674.4" y="1283.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Queue.tail (10 samples, 0.03%)</title><rect x="674.5" y="1267.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPush (39 samples, 0.12%)</title><rect x="674.9" y="1283.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.apply (26 samples, 0.08%)</title><rect x="675.1" y="1267.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.&lt;init&gt; (24 samples, 0.07%)</title><rect x="675.2" y="1251.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.verifyUri (15 samples, 0.05%)</title><rect x="675.5" y="1235.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.c$1 (14 samples, 0.04%)</title><rect x="675.5" y="1219.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.04%)</title><rect x="675.5" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (10 samples, 0.03%)</title><rect x="675.6" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$4.onPush (75 samples, 0.23%)</title><rect x="676.6" y="1283.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.&lt;init&gt; (49 samples, 0.15%)</title><rect x="676.7" y="1267.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (44 samples, 0.13%)</title><rect x="676.8" y="1251.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (43 samples, 0.13%)</title><rect x="676.8" y="1235.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (38 samples, 0.12%)</title><rect x="676.9" y="1219.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1072/770353633.apply (35 samples, 0.11%)</title><rect x="676.9" y="1203.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (34 samples, 0.10%)</title><rect x="677.0" y="1187.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$1106/1596640075.apply (25 samples, 0.08%)</title><rect x="677.0" y="1171.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$new$1 (25 samples, 0.08%)</title><rect x="677.0" y="1155.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.schedule (20 samples, 0.06%)</title><rect x="677.0" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleOnce (20 samples, 0.06%)</title><rect x="677.0" y="1123.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (20 samples, 0.06%)</title><rect x="677.0" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.0" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (19 samples, 0.06%)</title><rect x="677.1" y="1091.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.1" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (9 samples, 0.03%)</title><rect x="677.4" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.4" y="1086.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (9 samples, 0.03%)</title><rect x="677.4" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.4" y="1070.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (9 samples, 0.03%)</title><rect x="677.4" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.4" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (9 samples, 0.03%)</title><rect x="677.4" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.4" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (9 samples, 0.03%)</title><rect x="677.4" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/1582516792.apply (9 samples, 0.03%)</title><rect x="677.9" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (9 samples, 0.03%)</title><rect x="677.9" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (11 samples, 0.03%)</title><rect x="678.7" y="1267.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$Connection.slot_$eq (8 samples, 0.02%)</title><rect x="678.9" y="1251.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$6.onPush (31 samples, 0.09%)</title><rect x="679.3" y="1283.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.clear (20 samples, 0.06%)</title><rect x="679.5" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.foreach$extension (19 samples, 0.06%)</title><rect x="679.5" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (17 samples, 0.05%)</title><rect x="679.6" y="1235.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (16 samples, 0.05%)</title><rect x="679.6" y="1219.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (14 samples, 0.04%)</title><rect x="679.7" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1072/770353633.apply (14 samples, 0.04%)</title><rect x="679.7" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (14 samples, 0.04%)</title><rect x="679.7" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/1582516792.apply (8 samples, 0.02%)</title><rect x="679.9" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (8 samples, 0.02%)</title><rect x="679.9" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$1217/1919461966.apply (7 samples, 0.02%)</title><rect x="679.9" y="1123.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.9" y="1134.0"></text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (7 samples, 0.02%)</title><rect x="680.8" y="1283.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (17 samples, 0.05%)</title><rect x="681.1" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.akka$stream$impl$Timers$IdleTimeoutBidi$$anon$$onActivity (11 samples, 0.03%)</title><rect x="681.1" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (41 samples, 0.12%)</title><rect x="681.7" y="1283.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SupervisedGraphStageLogic.withSupervision (20 samples, 0.06%)</title><rect x="681.7" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6$$Lambda$529/1250769651.apply (15 samples, 0.05%)</title><rect x="681.9" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.$anonfun$wrappedPf$1 (15 samples, 0.05%)</title><rect x="681.9" y="1235.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (11 samples, 0.03%)</title><rect x="682.0" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (10 samples, 0.03%)</title><rect x="682.1" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.equals (16 samples, 0.05%)</title><rect x="682.6" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.6" y="1278.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.03%)</title><rect x="682.8" y="1251.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="685.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPush (16 samples, 0.05%)</title><rect x="683.3" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (7 samples, 0.02%)</title><rect x="683.4" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (65 samples, 0.20%)</title><rect x="684.0" y="1283.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$$$Lambda$1025/1725090477.apply (20 samples, 0.06%)</title><rect x="684.0" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.$anonfun$parsing$1 (20 samples, 0.06%)</title><rect x="684.0" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.establishAbsoluteUri$1 (20 samples, 0.06%)</title><rect x="684.0" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.effectiveUri (18 samples, 0.05%)</title><rect x="684.1" y="1219.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.findHostAndWsUpgrade$1 (7 samples, 0.02%)</title><rect x="684.3" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (30 samples, 0.09%)</title><rect x="685.2" y="1267.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (23 samples, 0.07%)</title><rect x="685.5" y="1251.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/OutPort.id (23 samples, 0.07%)</title><rect x="685.5" y="1235.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.5" y="1246.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="686.0" y="1219.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="689.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (1,743 samples, 5.28%)</title><rect x="686.3" y="1283.0" width="62.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="1294.0">akka/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1023/218133585.apply (1,724 samples, 5.22%)</title><rect x="686.3" y="1267.0" width="61.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.3" y="1278.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (1,723 samples, 5.22%)</title><rect x="686.3" y="1251.0" width="61.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="1262.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$986/143208134.apply (1,711 samples, 5.18%)</title><rect x="686.6" y="1235.0" width="61.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.6" y="1246.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,709 samples, 5.17%)</title><rect x="686.6" y="1219.0" width="61.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.6" y="1230.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1114/34523775.apply (1,667 samples, 5.05%)</title><rect x="686.9" y="1203.0" width="59.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.9" y="1214.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (1,660 samples, 5.03%)</title><rect x="687.1" y="1187.0" width="59.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.1" y="1198.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1112/72980240.apply (23 samples, 0.07%)</title><rect x="687.2" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (23 samples, 0.07%)</title><rect x="687.2" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (14 samples, 0.04%)</title><rect x="687.2" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$981/69092435.apply (14 samples, 0.04%)</title><rect x="687.2" y="1123.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$1 (13 samples, 0.04%)</title><rect x="687.3" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (12 samples, 0.04%)</title><rect x="687.3" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/1020896413.apply (10 samples, 0.03%)</title><rect x="687.3" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="687.7" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="687.7" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1116/702311906.get$Lambda (9 samples, 0.03%)</title><rect x="687.7" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$986/143208134.apply (1,624 samples, 4.92%)</title><rect x="688.0" y="1171.0" width="58.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.0" y="1182.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,624 samples, 4.92%)</title><rect x="688.0" y="1155.0" width="58.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.0" y="1166.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$985/513850782.apply (19 samples, 0.06%)</title><rect x="688.2" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (18 samples, 0.05%)</title><rect x="688.2" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$980/361844066.apply (17 samples, 0.05%)</title><rect x="688.3" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (17 samples, 0.05%)</title><rect x="688.3" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1108/1057260188.apply (16 samples, 0.05%)</title><rect x="688.3" y="1075.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleRejections$1 (13 samples, 0.04%)</title><rect x="688.4" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.recoverRejectionsWith (11 samples, 0.03%)</title><rect x="688.4" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejectionsWith$ (11 samples, 0.03%)</title><rect x="688.4" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejectionsWith (11 samples, 0.03%)</title><rect x="688.4" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRouteResultWithPF (10 samples, 0.03%)</title><rect x="688.4" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWithPF$ (10 samples, 0.03%)</title><rect x="688.4" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.4" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWithPF (9 samples, 0.03%)</title><rect x="688.5" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRouteResultWith (8 samples, 0.02%)</title><rect x="688.5" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.5" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWith$ (8 samples, 0.02%)</title><rect x="688.5" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.5" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWith (8 samples, 0.02%)</title><rect x="688.5" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.5" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1122/1045640665.apply (1,597 samples, 4.83%)</title><rect x="688.9" y="1139.0" width="57.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.9" y="1150.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (1,597 samples, 4.83%)</title><rect x="688.9" y="1123.0" width="57.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="1134.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$986/143208134.apply (1,592 samples, 4.82%)</title><rect x="689.0" y="1107.0" width="56.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.0" y="1118.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,592 samples, 4.82%)</title><rect x="689.0" y="1091.0" width="56.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.0" y="1102.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$985/513850782.apply (49 samples, 0.15%)</title><rect x="689.1" y="1075.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (49 samples, 0.15%)</title><rect x="689.1" y="1059.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (33 samples, 0.10%)</title><rect x="689.1" y="1043.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1109/1636392466.apply (33 samples, 0.10%)</title><rect x="689.1" y="1027.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (31 samples, 0.09%)</title><rect x="689.1" y="1011.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (30 samples, 0.09%)</title><rect x="689.2" y="995.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1125/1803752213.apply (30 samples, 0.09%)</title><rect x="689.2" y="979.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.2" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (27 samples, 0.08%)</title><rect x="689.3" y="963.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.3" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1112/72980240.apply (27 samples, 0.08%)</title><rect x="689.3" y="947.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.3" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (27 samples, 0.08%)</title><rect x="689.3" y="931.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.3" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (27 samples, 0.08%)</title><rect x="689.3" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.3" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1128/1604898625.apply (25 samples, 0.08%)</title><rect x="689.3" y="899.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.3" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (24 samples, 0.07%)</title><rect x="689.3" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.3" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1116/702311906.apply (20 samples, 0.06%)</title><rect x="689.4" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (20 samples, 0.06%)</title><rect x="689.4" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$984/1760182284.apply (19 samples, 0.06%)</title><rect x="689.4" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.4" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (14 samples, 0.04%)</title><rect x="689.5" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.5" y="830.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$983/1997535698.apply (14 samples, 0.04%)</title><rect x="689.5" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.5" y="814.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$1 (9 samples, 0.03%)</title><rect x="689.7" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.7" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$980/361844066.apply (16 samples, 0.05%)</title><rect x="690.3" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (16 samples, 0.05%)</title><rect x="690.3" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$979/1355057062.apply (15 samples, 0.05%)</title><rect x="690.3" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$2 (10 samples, 0.03%)</title><rect x="690.4" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1137/1935178823.apply (1,513 samples, 4.58%)</title><rect x="690.8" y="1075.0" width="54.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.8" y="1086.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (1,512 samples, 4.58%)</title><rect x="690.9" y="1059.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.9" y="1070.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$986/143208134.apply (1,508 samples, 4.57%)</title><rect x="691.0" y="1043.0" width="53.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.0" y="1054.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,508 samples, 4.57%)</title><rect x="691.0" y="1027.0" width="53.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.0" y="1038.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$985/513850782.apply (23 samples, 0.07%)</title><rect x="691.0" y="1011.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (23 samples, 0.07%)</title><rect x="691.0" y="995.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (14 samples, 0.04%)</title><rect x="691.0" y="979.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$955/165992973.apply (14 samples, 0.04%)</title><rect x="691.0" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$Empty$1 (14 samples, 0.04%)</title><rect x="691.0" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1112/72980240.apply (14 samples, 0.04%)</title><rect x="691.0" y="931.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (14 samples, 0.04%)</title><rect x="691.0" y="915.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (11 samples, 0.03%)</title><rect x="691.0" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1135/1198827304.apply (9 samples, 0.03%)</title><rect x="691.0" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$980/361844066.apply (9 samples, 0.03%)</title><rect x="691.5" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.5" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (9 samples, 0.03%)</title><rect x="691.5" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1138/1442860396.apply (1,483 samples, 4.49%)</title><rect x="691.8" y="1011.0" width="53.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.8" y="1022.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (1,478 samples, 4.47%)</title><rect x="692.0" y="995.0" width="52.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.0" y="1006.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1116/702311906.apply (64 samples, 0.19%)</title><rect x="692.0" y="979.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (64 samples, 0.19%)</title><rect x="692.0" y="963.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$984/1760182284.apply (64 samples, 0.19%)</title><rect x="692.0" y="947.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (64 samples, 0.19%)</title><rect x="692.0" y="931.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.0" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1136/1362755029.apply (63 samples, 0.19%)</title><rect x="692.0" y="915.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.0" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (60 samples, 0.18%)</title><rect x="692.1" y="899.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$982/58894259.apply (51 samples, 0.15%)</title><rect x="692.1" y="883.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (51 samples, 0.15%)</title><rect x="692.1" y="867.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.1" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (51 samples, 0.15%)</title><rect x="692.1" y="851.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1128/1604898625.apply (51 samples, 0.15%)</title><rect x="692.1" y="835.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (51 samples, 0.15%)</title><rect x="692.1" y="819.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.1" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$984/1760182284.apply (49 samples, 0.15%)</title><rect x="692.1" y="803.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.1" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (49 samples, 0.15%)</title><rect x="692.1" y="787.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.1" y="798.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1150/1152667698.apply (49 samples, 0.15%)</title><rect x="692.1" y="771.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (47 samples, 0.14%)</title><rect x="692.2" y="755.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.2" y="766.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.requestUnmarshaller (17 samples, 0.05%)</title><rect x="692.3" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.3" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.entity (22 samples, 0.07%)</title><rect x="693.1" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.1" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity$ (22 samples, 0.07%)</title><rect x="693.1" y="723.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.1" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity (20 samples, 0.06%)</title><rect x="693.2" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.2" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (16 samples, 0.05%)</title><rect x="693.3" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.3" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (16 samples, 0.05%)</title><rect x="693.3" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.3" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections (16 samples, 0.05%)</title><rect x="693.3" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.3" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (16 samples, 0.05%)</title><rect x="693.3" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.3" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (16 samples, 0.05%)</title><rect x="693.3" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.3" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections (16 samples, 0.05%)</title><rect x="693.3" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.3" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRejections (10 samples, 0.03%)</title><rect x="693.3" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.3" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRejections$ (10 samples, 0.03%)</title><rect x="693.3" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.3" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRejections (10 samples, 0.03%)</title><rect x="693.3" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.3" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1137/1935178823.apply (1,404 samples, 4.25%)</title><rect x="694.3" y="979.0" width="50.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.3" y="990.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (1,404 samples, 4.25%)</title><rect x="694.3" y="963.0" width="50.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.3" y="974.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$986/143208134.apply (1,244 samples, 3.77%)</title><rect x="694.3" y="947.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.3" y="958.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,244 samples, 3.77%)</title><rect x="694.3" y="931.0" width="44.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.3" y="942.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$985/513850782.apply (18 samples, 0.05%)</title><rect x="694.3" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.3" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (18 samples, 0.05%)</title><rect x="694.3" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.3" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$980/361844066.apply (12 samples, 0.04%)</title><rect x="694.5" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.5" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (12 samples, 0.04%)</title><rect x="694.5" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.5" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1153/1919692265.apply (12 samples, 0.04%)</title><rect x="694.5" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.5" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$1 (11 samples, 0.03%)</title><rect x="694.5" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.5" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1160/331054759.apply (1,226 samples, 3.71%)</title><rect x="694.9" y="915.0" width="43.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.9" y="926.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (1,225 samples, 3.71%)</title><rect x="694.9" y="899.0" width="43.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.9" y="910.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1157/2104494574.apply (1,188 samples, 3.60%)</title><rect x="694.9" y="883.0" width="42.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.9" y="894.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (1,188 samples, 3.60%)</title><rect x="694.9" y="867.0" width="42.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.9" y="878.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,188 samples, 3.60%)</title><rect x="694.9" y="851.0" width="42.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.9" y="862.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1152/272860462.apply (7 samples, 0.02%)</title><rect x="695.0" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1163/1931222452.apply (1,180 samples, 3.57%)</title><rect x="695.2" y="835.0" width="42.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.2" y="846.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (1,178 samples, 3.57%)</title><rect x="695.3" y="819.0" width="42.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.3" y="830.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,177 samples, 3.56%)</title><rect x="695.3" y="803.0" width="42.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.3" y="814.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1061/1106369461.apply (1,167 samples, 3.53%)</title><rect x="695.7" y="787.0" width="41.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.7" y="798.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (1,166 samples, 3.53%)</title><rect x="695.7" y="771.0" width="41.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.7" y="782.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1063/743379158.apply (19 samples, 0.06%)</title><rect x="695.8" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.8" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (19 samples, 0.06%)</title><rect x="695.8" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.8" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (19 samples, 0.06%)</title><rect x="695.8" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.8" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (17 samples, 0.05%)</title><rect x="695.8" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (17 samples, 0.05%)</title><rect x="695.8" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1072/770353633.apply (17 samples, 0.05%)</title><rect x="695.8" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (17 samples, 0.05%)</title><rect x="695.8" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.8" y="670.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1151/905209674.apply (16 samples, 0.05%)</title><rect x="695.8" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.8" y="654.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (16 samples, 0.05%)</title><rect x="695.8" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="638.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (16 samples, 0.05%)</title><rect x="695.8" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.8" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (16 samples, 0.05%)</title><rect x="695.8" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.8" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (16 samples, 0.05%)</title><rect x="695.8" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.8" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (16 samples, 0.05%)</title><rect x="695.8" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.8" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (16 samples, 0.05%)</title><rect x="695.8" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.8" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (16 samples, 0.05%)</title><rect x="695.8" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="542.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (15 samples, 0.05%)</title><rect x="695.9" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.9" y="526.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (15 samples, 0.05%)</title><rect x="695.9" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.9" y="510.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (15 samples, 0.05%)</title><rect x="695.9" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.9" y="494.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (15 samples, 0.05%)</title><rect x="695.9" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.9" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (14 samples, 0.04%)</title><rect x="695.9" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.9" y="462.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (8 samples, 0.02%)</title><rect x="696.0" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.0" y="446.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (8 samples, 0.02%)</title><rect x="696.0" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.0" y="430.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (8 samples, 0.02%)</title><rect x="696.0" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.0" y="414.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (8 samples, 0.02%)</title><rect x="696.0" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.0" y="398.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,143 samples, 3.46%)</title><rect x="696.5" y="755.0" width="40.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.5" y="766.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1061/1106369461.apply (1,129 samples, 3.42%)</title><rect x="696.6" y="739.0" width="40.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.6" y="750.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (1,127 samples, 3.41%)</title><rect x="696.7" y="723.0" width="40.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.7" y="734.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1063/743379158.apply (22 samples, 0.07%)</title><rect x="696.8" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (21 samples, 0.06%)</title><rect x="696.8" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (21 samples, 0.06%)</title><rect x="696.8" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (21 samples, 0.06%)</title><rect x="696.8" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.8" y="670.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (12 samples, 0.04%)</title><rect x="697.1" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.1" y="654.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (9 samples, 0.03%)</title><rect x="697.2" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.2" y="638.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (9 samples, 0.03%)</title><rect x="697.2" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.2" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,102 samples, 3.34%)</title><rect x="697.6" y="707.0" width="39.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.6" y="718.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1053/1802423753.apply (7 samples, 0.02%)</title><rect x="697.8" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1065/1382316179.apply (1,079 samples, 3.27%)</title><rect x="698.2" y="691.0" width="38.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.2" y="702.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (1,076 samples, 3.26%)</title><rect x="698.3" y="675.0" width="38.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.3" y="686.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (1,075 samples, 3.25%)</title><rect x="698.4" y="659.0" width="38.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.4" y="670.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (259 samples, 0.78%)</title><rect x="698.4" y="643.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.4" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (70 samples, 0.21%)</title><rect x="698.4" y="627.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (70 samples, 0.21%)</title><rect x="698.4" y="611.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.4" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (70 samples, 0.21%)</title><rect x="698.4" y="595.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (64 samples, 0.19%)</title><rect x="698.6" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.6" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (64 samples, 0.19%)</title><rect x="698.6" y="563.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (64 samples, 0.19%)</title><rect x="698.6" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (17 samples, 0.05%)</title><rect x="698.7" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (39 samples, 0.12%)</title><rect x="699.5" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.5" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (26 samples, 0.08%)</title><rect x="699.6" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (11 samples, 0.03%)</title><rect x="699.8" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.8" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStageModule.&lt;init&gt; (10 samples, 0.03%)</title><rect x="700.5" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.5" y="526.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (41 samples, 0.12%)</title><rect x="700.9" y="627.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.9" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (41 samples, 0.12%)</title><rect x="700.9" y="611.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.9" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (41 samples, 0.12%)</title><rect x="700.9" y="595.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.9" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (127 samples, 0.38%)</title><rect x="702.4" y="627.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.&lt;init&gt; (15 samples, 0.05%)</title><rect x="702.4" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.4" y="622.0"></text>
</g>
<g>
<title>akka/stream/Inlet$.apply (8 samples, 0.02%)</title><rect x="702.4" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/SinkShape$.of (7 samples, 0.02%)</title><rect x="702.7" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.7" y="606.0"></text>
</g>
<g>
<title>akka/stream/SinkShape.&lt;init&gt; (7 samples, 0.02%)</title><rect x="702.7" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.7" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (7 samples, 0.02%)</title><rect x="702.7" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.7" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (104 samples, 0.31%)</title><rect x="703.0" y="611.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.0" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (12 samples, 0.04%)</title><rect x="703.0" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.traversal (7 samples, 0.02%)</title><rect x="703.0" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.0" y="590.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (84 samples, 0.25%)</title><rect x="703.5" y="595.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.5" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (71 samples, 0.21%)</title><rect x="703.5" y="579.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.5" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (12 samples, 0.04%)</title><rect x="703.8" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.8" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStageModule.shape (10 samples, 0.03%)</title><rect x="704.2" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.2" y="574.0"></text>
</g>
<g>
<title>akka/util/Collections$EmptyImmutableSeq$.isEmpty (8 samples, 0.02%)</title><rect x="704.2" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.2" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (22 samples, 0.07%)</title><rect x="704.6" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.6" y="574.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (22 samples, 0.07%)</title><rect x="704.6" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.6" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (22 samples, 0.07%)</title><rect x="704.6" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.6" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (22 samples, 0.07%)</title><rect x="704.6" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.6" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (16 samples, 0.05%)</title><rect x="704.8" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.8" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (15 samples, 0.05%)</title><rect x="704.9" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (15 samples, 0.05%)</title><rect x="704.9" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.9" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (13 samples, 0.04%)</title><rect x="704.9" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (12 samples, 0.04%)</title><rect x="705.0" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.0" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (12 samples, 0.04%)</title><rect x="705.0" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.0" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.size (7 samples, 0.02%)</title><rect x="705.0" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.0" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (18 samples, 0.05%)</title><rect x="705.4" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (15 samples, 0.05%)</title><rect x="705.5" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.5" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (11 samples, 0.03%)</title><rect x="705.6" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.6" y="542.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.02%)</title><rect x="705.8" y="515.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="708.8" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStageModule.&lt;init&gt; (13 samples, 0.04%)</title><rect x="706.0" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.0" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (20 samples, 0.06%)</title><rect x="707.0" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.0" y="638.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (20 samples, 0.06%)</title><rect x="707.0" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.0" y="622.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (20 samples, 0.06%)</title><rect x="707.0" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.0" y="606.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (8 samples, 0.02%)</title><rect x="707.0" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.forName (12 samples, 0.04%)</title><rect x="707.3" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.3" y="590.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup (10 samples, 0.03%)</title><rect x="707.3" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (814 samples, 2.46%)</title><rect x="707.7" y="643.0" width="29.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.7" y="654.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (797 samples, 2.41%)</title><rect x="707.7" y="627.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.7" y="638.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (796 samples, 2.41%)</title><rect x="707.7" y="611.0" width="28.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.7" y="622.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (795 samples, 2.41%)</title><rect x="707.8" y="595.0" width="28.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.8" y="606.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (794 samples, 2.40%)</title><rect x="707.8" y="579.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.8" y="590.0">ak..</text>
</g>
<g>
<title>akka/stream/Attributes.and (16 samples, 0.05%)</title><rect x="708.1" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.1" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (7 samples, 0.02%)</title><rect x="708.4" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (8 samples, 0.02%)</title><rect x="708.7" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.7" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (8 samples, 0.02%)</title><rect x="708.7" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.7" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (8 samples, 0.02%)</title><rect x="708.7" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (67 samples, 0.20%)</title><rect x="709.0" y="563.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (51 samples, 0.15%)</title><rect x="709.2" y="547.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.2" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (27 samples, 0.08%)</title><rect x="709.2" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.2" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.&lt;init&gt; (15 samples, 0.05%)</title><rect x="709.4" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (13 samples, 0.04%)</title><rect x="709.5" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.5" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (7 samples, 0.02%)</title><rect x="709.7" y="483.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (7 samples, 0.02%)</title><rect x="709.7" y="467.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.7" y="478.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (7 samples, 0.02%)</title><rect x="709.7" y="451.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (7 samples, 0.02%)</title><rect x="709.7" y="435.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.7" y="446.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (24 samples, 0.07%)</title><rect x="710.1" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.1" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (7 samples, 0.02%)</title><rect x="710.2" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.2" y="526.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (10 samples, 0.03%)</title><rect x="710.6" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.02%)</title><rect x="711.1" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.02%)</title><rect x="711.1" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.1" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (488 samples, 1.48%)</title><rect x="711.4" y="563.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (357 samples, 1.08%)</title><rect x="711.6" y="547.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.6" y="558.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (357 samples, 1.08%)</title><rect x="711.6" y="531.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.6" y="542.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (357 samples, 1.08%)</title><rect x="711.6" y="515.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.6" y="526.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (356 samples, 1.08%)</title><rect x="711.6" y="499.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.6" y="510.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (348 samples, 1.05%)</title><rect x="711.9" y="483.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.9" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (33 samples, 0.10%)</title><rect x="712.0" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.0" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (33 samples, 0.10%)</title><rect x="712.0" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.0" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (33 samples, 0.10%)</title><rect x="712.0" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.0" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (17 samples, 0.05%)</title><rect x="712.1" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (17 samples, 0.05%)</title><rect x="712.1" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (16 samples, 0.05%)</title><rect x="712.1" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.1" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.05%)</title><rect x="712.1" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.1" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (15 samples, 0.05%)</title><rect x="712.2" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.2" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 0.04%)</title><rect x="712.2" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.2" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.03%)</title><rect x="712.3" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.03%)</title><rect x="712.3" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.03%)</title><rect x="712.3" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.02%)</title><rect x="712.4" y="275.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.02%)</title><rect x="712.4" y="259.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.4" y="270.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (13 samples, 0.04%)</title><rect x="712.8" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.8" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (12 samples, 0.04%)</title><rect x="712.8" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (12 samples, 0.04%)</title><rect x="712.8" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (10 samples, 0.03%)</title><rect x="712.9" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.9" y="382.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (63 samples, 0.19%)</title><rect x="713.2" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.2" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (63 samples, 0.19%)</title><rect x="713.2" y="451.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.2" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (63 samples, 0.19%)</title><rect x="713.2" y="435.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.2" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (62 samples, 0.19%)</title><rect x="713.3" y="419.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (29 samples, 0.09%)</title><rect x="713.3" y="403.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (29 samples, 0.09%)</title><rect x="713.3" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (29 samples, 0.09%)</title><rect x="713.3" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (29 samples, 0.09%)</title><rect x="713.3" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (29 samples, 0.09%)</title><rect x="713.3" y="339.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (29 samples, 0.09%)</title><rect x="713.3" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.3" y="334.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (13 samples, 0.04%)</title><rect x="713.8" y="307.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.8" y="318.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (12 samples, 0.04%)</title><rect x="713.9" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.9" y="302.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (12 samples, 0.04%)</title><rect x="713.9" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.9" y="286.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (12 samples, 0.04%)</title><rect x="713.9" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (12 samples, 0.04%)</title><rect x="713.9" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (32 samples, 0.10%)</title><rect x="714.3" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (30 samples, 0.09%)</title><rect x="714.3" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (30 samples, 0.09%)</title><rect x="714.3" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (29 samples, 0.09%)</title><rect x="714.3" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (25 samples, 0.08%)</title><rect x="714.4" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.4" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (24 samples, 0.07%)</title><rect x="714.4" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.4" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (22 samples, 0.07%)</title><rect x="714.5" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (18 samples, 0.05%)</title><rect x="714.6" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.05%)</title><rect x="714.6" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (15 samples, 0.05%)</title><rect x="714.7" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.03%)</title><rect x="714.8" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.8" y="254.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.&lt;init&gt; (11 samples, 0.03%)</title><rect x="715.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.5" y="478.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (235 samples, 0.71%)</title><rect x="715.9" y="467.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.9" y="478.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (20 samples, 0.06%)</title><rect x="716.0" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.0" y="462.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (19 samples, 0.06%)</title><rect x="716.0" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.0" y="446.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (14 samples, 0.04%)</title><rect x="716.0" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.0" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (11 samples, 0.03%)</title><rect x="716.1" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.1" y="414.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.02%)</title><rect x="716.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.2" y="398.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (179 samples, 0.54%)</title><rect x="716.7" y="451.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.7" y="462.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (8 samples, 0.02%)</title><rect x="716.7" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.7" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (8 samples, 0.02%)</title><rect x="716.7" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.7" y="430.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (8 samples, 0.02%)</title><rect x="716.7" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.7" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (8 samples, 0.02%)</title><rect x="716.7" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.7" y="398.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.swapMailbox (8 samples, 0.02%)</title><rect x="716.7" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.7" y="382.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.swapMailbox$ (8 samples, 0.02%)</title><rect x="716.7" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.7" y="366.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.swapMailbox (8 samples, 0.02%)</title><rect x="716.7" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.7" y="350.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (8 samples, 0.02%)</title><rect x="716.7" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.7" y="334.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (8 samples, 0.02%)</title><rect x="716.7" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.7" y="318.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (8 samples, 0.02%)</title><rect x="716.7" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.7" y="302.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (140 samples, 0.42%)</title><rect x="717.0" y="435.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.0" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (125 samples, 0.38%)</title><rect x="717.0" y="419.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.0" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (125 samples, 0.38%)</title><rect x="717.0" y="403.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.0" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (125 samples, 0.38%)</title><rect x="717.0" y="387.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.0" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (125 samples, 0.38%)</title><rect x="717.0" y="371.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.0" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (125 samples, 0.38%)</title><rect x="717.0" y="355.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.0" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (121 samples, 0.37%)</title><rect x="717.1" y="339.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.1" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (118 samples, 0.36%)</title><rect x="717.1" y="323.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.1" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (118 samples, 0.36%)</title><rect x="717.1" y="307.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.1" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (118 samples, 0.36%)</title><rect x="717.1" y="291.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.1" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (116 samples, 0.35%)</title><rect x="717.1" y="275.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (116 samples, 0.35%)</title><rect x="717.1" y="259.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (116 samples, 0.35%)</title><rect x="717.1" y="243.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (115 samples, 0.35%)</title><rect x="717.2" y="227.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (113 samples, 0.34%)</title><rect x="717.3" y="211.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (112 samples, 0.34%)</title><rect x="717.3" y="195.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (112 samples, 0.34%)</title><rect x="717.3" y="179.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.3" y="190.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.03%)</title><rect x="717.3" y="163.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="720.3" y="174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (102 samples, 0.31%)</title><rect x="717.6" y="163.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="720.6" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 0.27%)</title><rect x="718.2" y="147.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.2" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (88 samples, 0.27%)</title><rect x="718.2" y="131.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.2" y="142.0"></text>
</g>
<g>
<title>sys_futex (76 samples, 0.23%)</title><rect x="718.6" y="115.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.6" y="126.0"></text>
</g>
<g>
<title>do_futex (76 samples, 0.23%)</title><rect x="718.6" y="99.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.6" y="110.0"></text>
</g>
<g>
<title>futex_wake (76 samples, 0.23%)</title><rect x="718.6" y="83.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="721.6" y="94.0"></text>
</g>
<g>
<title>wake_up_q (68 samples, 0.21%)</title><rect x="718.9" y="67.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.9" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 0.20%)</title><rect x="718.9" y="51.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 0.20%)</title><rect x="718.9" y="35.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.9" y="46.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.underlying (10 samples, 0.03%)</title><rect x="721.5" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.5" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (24 samples, 0.07%)</title><rect x="722.2" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.2" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getString (9 samples, 0.03%)</title><rect x="722.4" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getPathEntry (9 samples, 0.03%)</title><rect x="722.4" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.02%)</title><rect x="722.5" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.5" y="398.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (13 samples, 0.04%)</title><rect x="723.1" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (11 samples, 0.03%)</title><rect x="723.2" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (9 samples, 0.03%)</title><rect x="723.2" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (13 samples, 0.04%)</title><rect x="723.8" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.8" y="462.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (13 samples, 0.04%)</title><rect x="723.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.8" y="446.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (13 samples, 0.04%)</title><rect x="723.8" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.8" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (13 samples, 0.04%)</title><rect x="723.8" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (13 samples, 0.04%)</title><rect x="723.8" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (13 samples, 0.04%)</title><rect x="723.8" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.8" y="382.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.isEmpty (10 samples, 0.03%)</title><rect x="723.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.8" y="366.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty$ (10 samples, 0.03%)</title><rect x="723.8" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.8" y="350.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty (10 samples, 0.03%)</title><rect x="723.8" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.8" y="334.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (10 samples, 0.03%)</title><rect x="723.8" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (10 samples, 0.03%)</title><rect x="723.8" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.8" y="302.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (111 samples, 0.34%)</title><rect x="724.5" y="547.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.5" y="558.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (88 samples, 0.27%)</title><rect x="724.5" y="531.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.5" y="542.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (88 samples, 0.27%)</title><rect x="724.5" y="515.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.5" y="526.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (87 samples, 0.26%)</title><rect x="724.5" y="499.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.5" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (85 samples, 0.26%)</title><rect x="724.6" y="483.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.6" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (85 samples, 0.26%)</title><rect x="724.6" y="467.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.6" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (85 samples, 0.26%)</title><rect x="724.6" y="451.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (85 samples, 0.26%)</title><rect x="724.6" y="435.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (44 samples, 0.13%)</title><rect x="724.6" y="419.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.6" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (42 samples, 0.13%)</title><rect x="724.7" y="403.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.7" y="414.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.04%)</title><rect x="724.7" y="387.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="727.7" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (14 samples, 0.04%)</title><rect x="725.3" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.3" y="398.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="725.5" y="371.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="728.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/ArraySeq$ofRef.iterator (10 samples, 0.03%)</title><rect x="725.8" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (40 samples, 0.12%)</title><rect x="726.2" y="419.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.2" y="430.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (34 samples, 0.10%)</title><rect x="726.4" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.4" y="414.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (23 samples, 0.07%)</title><rect x="727.7" y="531.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.7" y="542.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (22 samples, 0.07%)</title><rect x="727.7" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.7" y="526.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (21 samples, 0.06%)</title><rect x="727.7" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.7" y="510.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (21 samples, 0.06%)</title><rect x="727.7" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.7" y="494.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (21 samples, 0.06%)</title><rect x="727.7" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.7" y="478.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (21 samples, 0.06%)</title><rect x="727.7" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.7" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (21 samples, 0.06%)</title><rect x="727.7" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.7" y="446.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (21 samples, 0.06%)</title><rect x="727.7" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.04%)</title><rect x="727.8" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.02%)</title><rect x="728.0" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.02%)</title><rect x="728.0" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (7 samples, 0.02%)</title><rect x="728.6" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (33 samples, 0.10%)</title><rect x="728.8" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.8" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (16 samples, 0.05%)</title><rect x="729.3" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.3" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (16 samples, 0.05%)</title><rect x="729.3" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.3" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (35 samples, 0.11%)</title><rect x="730.1" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (35 samples, 0.11%)</title><rect x="730.1" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.1" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.concat (28 samples, 0.08%)</title><rect x="730.1" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.1" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat$ (28 samples, 0.08%)</title><rect x="730.1" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.1" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat (28 samples, 0.08%)</title><rect x="730.1" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.1" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat$.normalizeConcat (28 samples, 0.08%)</title><rect x="730.1" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.1" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.&lt;init&gt; (27 samples, 0.08%)</title><rect x="730.2" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.2" y="478.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (46 samples, 0.14%)</title><rect x="731.3" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (45 samples, 0.14%)</title><rect x="731.4" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (39 samples, 0.12%)</title><rect x="731.4" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 0.11%)</title><rect x="731.5" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (10 samples, 0.03%)</title><rect x="731.8" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.8" y="510.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="731.9" y="483.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="734.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (11 samples, 0.03%)</title><rect x="732.1" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.1" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (24 samples, 0.07%)</title><rect x="733.0" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (16 samples, 0.05%)</title><rect x="733.2" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.2" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (13 samples, 0.04%)</title><rect x="733.2" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.2" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (9 samples, 0.03%)</title><rect x="733.3" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.3" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (13 samples, 0.04%)</title><rect x="733.8" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.8" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (22 samples, 0.07%)</title><rect x="734.3" y="563.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$$$Lambda$1067/204258086.apply (22 samples, 0.07%)</title><rect x="734.3" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.3" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.$anonfun$head$1 (21 samples, 0.06%)</title><rect x="734.3" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.3" y="542.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.map (20 samples, 0.06%)</title><rect x="734.3" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.3" y="526.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (16 samples, 0.05%)</title><rect x="734.5" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.5" y="510.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (16 samples, 0.05%)</title><rect x="734.5" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.5" y="494.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.prepare (8 samples, 0.02%)</title><rect x="734.7" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.04%)</title><rect x="735.1" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.03%)</title><rect x="735.1" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.1" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (17 samples, 0.05%)</title><rect x="736.2" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.2" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (16 samples, 0.05%)</title><rect x="736.2" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.2" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (15 samples, 0.05%)</title><rect x="736.2" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.2" y="606.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.03%)</title><rect x="737.0" y="739.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="740.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (35 samples, 0.11%)</title><rect x="737.4" y="883.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.4" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (33 samples, 0.10%)</title><rect x="737.4" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (30 samples, 0.09%)</title><rect x="737.4" y="851.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1165/851058329.apply (30 samples, 0.09%)</title><rect x="737.4" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.4" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (30 samples, 0.09%)</title><rect x="737.4" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.4" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1164/2088217702.apply (30 samples, 0.09%)</title><rect x="737.4" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.4" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (30 samples, 0.09%)</title><rect x="737.4" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.4" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1138/1442860396.apply (30 samples, 0.09%)</title><rect x="737.4" y="771.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.4" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (30 samples, 0.09%)</title><rect x="737.4" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.4" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1160/331054759.apply (28 samples, 0.08%)</title><rect x="737.4" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.4" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (28 samples, 0.08%)</title><rect x="737.4" y="723.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.4" y="734.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1167/1949291414.apply (15 samples, 0.05%)</title><rect x="737.4" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.4" y="718.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (15 samples, 0.05%)</title><rect x="737.4" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.4" y="702.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (15 samples, 0.05%)</title><rect x="737.4" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.4" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (7 samples, 0.02%)</title><rect x="737.5" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.5" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (13 samples, 0.04%)</title><rect x="738.0" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (12 samples, 0.04%)</title><rect x="738.0" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (11 samples, 0.03%)</title><rect x="738.0" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1165/851058329.apply (11 samples, 0.03%)</title><rect x="738.0" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (11 samples, 0.03%)</title><rect x="738.0" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.0" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1164/2088217702.apply (11 samples, 0.03%)</title><rect x="738.0" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.0" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (11 samples, 0.03%)</title><rect x="738.0" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.0" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (11 samples, 0.03%)</title><rect x="738.0" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.0" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (11 samples, 0.03%)</title><rect x="738.0" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.0" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1170/1620701862.apply (11 samples, 0.03%)</title><rect x="738.0" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.0" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (11 samples, 0.03%)</title><rect x="738.0" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.0" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (9 samples, 0.03%)</title><rect x="738.0" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.0" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (9 samples, 0.03%)</title><rect x="738.0" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.0" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (9 samples, 0.03%)</title><rect x="738.0" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.0" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (9 samples, 0.03%)</title><rect x="738.0" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.0" y="494.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (9 samples, 0.03%)</title><rect x="738.0" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.0" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1149/1422287275.apply (160 samples, 0.48%)</title><rect x="738.7" y="947.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (159 samples, 0.48%)</title><rect x="738.7" y="931.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (159 samples, 0.48%)</title><rect x="738.7" y="915.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.7" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1155/514248236.apply (154 samples, 0.47%)</title><rect x="738.9" y="899.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (154 samples, 0.47%)</title><rect x="738.9" y="883.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (154 samples, 0.47%)</title><rect x="738.9" y="867.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.9" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1156/1831935398.apply (147 samples, 0.45%)</title><rect x="739.1" y="851.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.1" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (147 samples, 0.45%)</title><rect x="739.1" y="835.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.1" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (147 samples, 0.45%)</title><rect x="739.1" y="819.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.1" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (147 samples, 0.45%)</title><rect x="739.1" y="803.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.1" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (147 samples, 0.45%)</title><rect x="739.1" y="787.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.1" y="798.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (138 samples, 0.42%)</title><rect x="739.4" y="771.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.4" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (132 samples, 0.40%)</title><rect x="739.6" y="755.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.6" y="766.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (14 samples, 0.04%)</title><rect x="739.7" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.7" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.traversal (10 samples, 0.03%)</title><rect x="739.8" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.8" y="734.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.withAttributes (10 samples, 0.03%)</title><rect x="740.4" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.4" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (10 samples, 0.03%)</title><rect x="740.4" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.4" y="734.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (98 samples, 0.30%)</title><rect x="740.8" y="739.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.8" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (81 samples, 0.25%)</title><rect x="740.9" y="723.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.9" y="734.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (49 samples, 0.15%)</title><rect x="741.2" y="707.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.2" y="718.0"></text>
</g>
<g>
<title>akka/stream/Shape$.hasOnePort (10 samples, 0.03%)</title><rect x="741.2" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (9 samples, 0.03%)</title><rect x="741.9" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.9" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (9 samples, 0.03%)</title><rect x="741.9" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.9" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (14 samples, 0.04%)</title><rect x="742.3" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.3" y="702.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="742.5" y="675.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="745.5" y="686.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (11 samples, 0.03%)</title><rect x="743.4" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.4" y="718.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (7 samples, 0.02%)</title><rect x="743.5" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.5" y="702.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (7 samples, 0.02%)</title><rect x="743.5" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.5" y="686.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStageModule.&lt;init&gt; (12 samples, 0.04%)</title><rect x="743.8" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.8" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1160/331054759.apply (10 samples, 0.03%)</title><rect x="744.4" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.4" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (10 samples, 0.03%)</title><rect x="744.4" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/310793865.apply (25 samples, 0.08%)</title><rect x="744.9" y="1075.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (25 samples, 0.08%)</title><rect x="744.9" y="1059.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$978/1578840075.apply (25 samples, 0.08%)</title><rect x="744.9" y="1043.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (25 samples, 0.08%)</title><rect x="744.9" y="1027.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (23 samples, 0.07%)</title><rect x="744.9" y="1011.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (23 samples, 0.07%)</title><rect x="744.9" y="995.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$964/933552131.apply (17 samples, 0.05%)</title><rect x="745.0" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (16 samples, 0.05%)</title><rect x="745.0" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (16 samples, 0.05%)</title><rect x="745.0" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$1123/2119026420.apply (15 samples, 0.05%)</title><rect x="745.0" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (15 samples, 0.05%)</title><rect x="745.0" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (15 samples, 0.05%)</title><rect x="745.0" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (15 samples, 0.05%)</title><rect x="745.0" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$5.apply (9 samples, 0.03%)</title><rect x="745.3" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.3" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$5.apply (9 samples, 0.03%)</title><rect x="745.3" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.3" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.&lt;init&gt; (9 samples, 0.03%)</title><rect x="745.3" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.3" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleException$1 (7 samples, 0.02%)</title><rect x="746.0" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1021/270229637.apply (34 samples, 0.10%)</title><rect x="746.4" y="1203.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (34 samples, 0.10%)</title><rect x="746.4" y="1187.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1022/911109007.apply (34 samples, 0.10%)</title><rect x="746.4" y="1171.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (29 samples, 0.09%)</title><rect x="746.6" y="1155.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (17 samples, 0.05%)</title><rect x="746.6" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1109/1636392466.apply (15 samples, 0.05%)</title><rect x="746.7" y="1123.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (15 samples, 0.05%)</title><rect x="746.7" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (11 samples, 0.03%)</title><rect x="746.7" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$.handleRejections (7 samples, 0.02%)</title><rect x="747.3" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleRejections$ (7 samples, 0.02%)</title><rect x="747.3" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleRejections (7 samples, 0.02%)</title><rect x="747.3" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/Object.equals (8 samples, 0.02%)</title><rect x="748.1" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (15 samples, 0.05%)</title><rect x="748.5" y="1283.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (7 samples, 0.02%)</title><rect x="748.7" y="1267.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/StatefulMapConcat$$anon$47.onPush (7 samples, 0.02%)</title><rect x="749.1" y="1283.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$$anon$12.onPush (10 samples, 0.03%)</title><rect x="749.4" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.onPush (12 samples, 0.04%)</title><rect x="749.9" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPull (9 samples, 0.03%)</title><rect x="750.4" y="1299.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (11 samples, 0.03%)</title><rect x="751.1" y="1299.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (7 samples, 0.02%)</title><rect x="751.5" y="1299.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPull (10 samples, 0.03%)</title><rect x="752.1" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (12 samples, 0.04%)</title><rect x="752.4" y="1299.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.4" y="1310.0"></text>
</g>
<g>
<title>itable stub (209 samples, 0.63%)</title><rect x="753.4" y="1299.0" width="7.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="756.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (24 samples, 0.07%)</title><rect x="760.9" y="1299.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (23 samples, 0.07%)</title><rect x="760.9" y="1283.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (22 samples, 0.07%)</title><rect x="760.9" y="1267.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (11 samples, 0.03%)</title><rect x="761.8" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (11 samples, 0.03%)</title><rect x="761.8" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (7 samples, 0.02%)</title><rect x="761.8" y="1283.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (7 samples, 0.02%)</title><rect x="761.8" y="1267.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (1,127 samples, 3.41%)</title><rect x="762.3" y="1379.0" width="40.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.3" y="1390.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (984 samples, 2.98%)</title><rect x="762.7" y="1363.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.7" y="1374.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (983 samples, 2.98%)</title><rect x="762.7" y="1347.0" width="35.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.7" y="1358.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (983 samples, 2.98%)</title><rect x="762.7" y="1331.0" width="35.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.7" y="1342.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (299 samples, 0.91%)</title><rect x="762.7" y="1315.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13$$Lambda$545/1196624859.apply (7 samples, 0.02%)</title><rect x="762.9" y="1299.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$523/407338662.apply (280 samples, 0.85%)</title><rect x="763.2" y="1299.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (280 samples, 0.85%)</title><rect x="763.2" y="1283.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (280 samples, 0.85%)</title><rect x="763.2" y="1267.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (240 samples, 0.73%)</title><rect x="763.2" y="1251.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (230 samples, 0.70%)</title><rect x="763.3" y="1235.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$608/1604957097.apply (8 samples, 0.02%)</title><rect x="763.3" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1$adapted (7 samples, 0.02%)</title><rect x="763.4" y="1203.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1 (7 samples, 0.02%)</title><rect x="763.4" y="1187.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (7 samples, 0.02%)</title><rect x="763.4" y="1171.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$609/624005192.apply (221 samples, 0.67%)</title><rect x="763.6" y="1219.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (220 samples, 0.67%)</title><rect x="763.7" y="1203.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (219 samples, 0.66%)</title><rect x="763.7" y="1187.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (219 samples, 0.66%)</title><rect x="763.7" y="1171.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (219 samples, 0.66%)</title><rect x="763.7" y="1155.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (219 samples, 0.66%)</title><rect x="763.7" y="1139.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (216 samples, 0.65%)</title><rect x="763.7" y="1123.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$503/1755031919.apply (46 samples, 0.14%)</title><rect x="764.1" y="1107.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (45 samples, 0.14%)</title><rect x="764.1" y="1091.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$515/1453672366.apply (16 samples, 0.05%)</title><rect x="764.1" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseDispatchable$1 (15 samples, 0.05%)</title><rect x="764.2" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponseDispatch.onResponseDispatchable (15 samples, 0.05%)</title><rect x="764.2" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$517/1096406930.apply (17 samples, 0.05%)</title><rect x="764.8" y="1075.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseEntityCompleted$1 (17 samples, 0.05%)</title><rect x="764.8" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForEndOfResponseEntity.onResponseEntityCompleted (17 samples, 0.05%)</title><rect x="764.8" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.willCloseAfter (15 samples, 0.05%)</title><rect x="764.9" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$willClose (11 samples, 0.03%)</title><rect x="765.0" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.header (11 samples, 0.03%)</title><rect x="765.0" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.header$ (11 samples, 0.03%)</title><rect x="765.0" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.header (10 samples, 0.03%)</title><rect x="765.1" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.1" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpHeader$.fastFind (7 samples, 0.02%)</title><rect x="765.1" y="947.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.1" y="958.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.02%)</title><rect x="765.4" y="1075.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="768.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (34 samples, 0.10%)</title><rect x="765.9" y="1107.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.9" y="1118.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (25 samples, 0.08%)</title><rect x="765.9" y="1091.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.9" y="1102.0"></text>
</g>
<g>
<title>akka/event/DefaultLoggingFilter.isDebugEnabled (10 samples, 0.03%)</title><rect x="766.1" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.1" y="1086.0"></text>
</g>
<g>
<title>akka/event/BusLogging$$anonfun$$lessinit$greater$3.apply (9 samples, 0.03%)</title><rect x="766.1" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.1" y="1070.0"></text>
</g>
<g>
<title>akka/event/BusLogging$$anonfun$$lessinit$greater$3.apply (7 samples, 0.02%)</title><rect x="766.1" y="1043.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.1" y="1054.0"></text>
</g>
<g>
<title>akka/event/EventStream.logLevel (7 samples, 0.02%)</title><rect x="766.1" y="1027.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.1" y="1038.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.logLevel$ (7 samples, 0.02%)</title><rect x="766.1" y="1011.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.1" y="1022.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (11 samples, 0.03%)</title><rect x="766.4" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.4" y="1086.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (9 samples, 0.03%)</title><rect x="766.5" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.5" y="1070.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (8 samples, 0.02%)</title><rect x="766.5" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.5" y="1054.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (8 samples, 0.02%)</title><rect x="766.5" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.5" y="1038.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (7 samples, 0.02%)</title><rect x="766.5" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.5" y="1022.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (7 samples, 0.02%)</title><rect x="766.5" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.log (8 samples, 0.02%)</title><rect x="766.8" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log$ (8 samples, 0.02%)</title><rect x="766.8" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log (8 samples, 0.02%)</title><rect x="766.8" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (9 samples, 0.03%)</title><rect x="767.2" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (8 samples, 0.02%)</title><rect x="767.2" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (8 samples, 0.02%)</title><rect x="767.2" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (8 samples, 0.02%)</title><rect x="767.2" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (8 samples, 0.02%)</title><rect x="767.2" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleOnce (9 samples, 0.03%)</title><rect x="768.0" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.0" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (9 samples, 0.03%)</title><rect x="768.0" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (68 samples, 0.21%)</title><rect x="768.4" y="1107.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (48 samples, 0.15%)</title><rect x="768.9" y="1091.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.9" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.03%)</title><rect x="770.1" y="1075.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="773.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.02%)</title><rect x="770.9" y="1107.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.02%)</title><rect x="770.9" y="1091.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (30 samples, 0.09%)</title><rect x="771.8" y="1251.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (30 samples, 0.09%)</title><rect x="771.8" y="1235.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1301/861208067.apply (30 samples, 0.09%)</title><rect x="771.8" y="1219.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (30 samples, 0.09%)</title><rect x="771.8" y="1203.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (30 samples, 0.09%)</title><rect x="771.8" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (30 samples, 0.09%)</title><rect x="771.8" y="1171.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (30 samples, 0.09%)</title><rect x="771.8" y="1155.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (30 samples, 0.09%)</title><rect x="771.8" y="1139.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (30 samples, 0.09%)</title><rect x="771.8" y="1123.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (14 samples, 0.04%)</title><rect x="771.9" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (14 samples, 0.04%)</title><rect x="771.9" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="1102.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (14 samples, 0.04%)</title><rect x="771.9" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$667/210066944.apply (14 samples, 0.04%)</title><rect x="771.9" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (14 samples, 0.04%)</title><rect x="771.9" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (14 samples, 0.04%)</title><rect x="771.9" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (14 samples, 0.04%)</title><rect x="771.9" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (14 samples, 0.04%)</title><rect x="771.9" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (14 samples, 0.04%)</title><rect x="771.9" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.04%)</title><rect x="771.9" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.04%)</title><rect x="771.9" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.9" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (14 samples, 0.04%)</title><rect x="771.9" y="931.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="774.9" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (14 samples, 0.04%)</title><rect x="771.9" y="915.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="774.9" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (13 samples, 0.04%)</title><rect x="771.9" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="774.9" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (13 samples, 0.04%)</title><rect x="771.9" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="774.9" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet$$Lambda$522/1551296673.apply (7 samples, 0.02%)</title><rect x="773.2" y="1299.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (29 samples, 0.09%)</title><rect x="773.4" y="1315.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (29 samples, 0.09%)</title><rect x="773.4" y="1299.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (25 samples, 0.08%)</title><rect x="773.5" y="1283.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (25 samples, 0.08%)</title><rect x="773.5" y="1267.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.5" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (21 samples, 0.06%)</title><rect x="773.6" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.6" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (20 samples, 0.06%)</title><rect x="773.6" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.6" y="1246.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (20 samples, 0.06%)</title><rect x="773.6" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.6" y="1230.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="774.1" y="1203.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="777.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (655 samples, 1.98%)</title><rect x="774.4" y="1315.0" width="23.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.4" y="1326.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (652 samples, 1.97%)</title><rect x="774.4" y="1299.0" width="23.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.4" y="1310.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (101 samples, 0.31%)</title><rect x="775.0" y="1283.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (9 samples, 0.03%)</title><rect x="775.1" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (90 samples, 0.27%)</title><rect x="775.4" y="1267.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (57 samples, 0.17%)</title><rect x="775.4" y="1251.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.afterRequestFinished (17 samples, 0.05%)</title><rect x="775.5" y="1235.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (16 samples, 0.05%)</title><rect x="775.6" y="1219.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (8 samples, 0.02%)</title><rect x="775.6" y="1203.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleOnce (8 samples, 0.02%)</title><rect x="775.8" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.8" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (30 samples, 0.09%)</title><rect x="776.4" y="1235.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (30 samples, 0.09%)</title><rect x="776.4" y="1219.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (30 samples, 0.09%)</title><rect x="776.4" y="1203.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (30 samples, 0.09%)</title><rect x="776.4" y="1187.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (29 samples, 0.09%)</title><rect x="776.4" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.4" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (29 samples, 0.09%)</title><rect x="776.4" y="1155.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.4" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (29 samples, 0.09%)</title><rect x="776.4" y="1139.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (29 samples, 0.09%)</title><rect x="776.4" y="1123.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (29 samples, 0.09%)</title><rect x="776.4" y="1107.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (29 samples, 0.09%)</title><rect x="776.4" y="1091.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (23 samples, 0.07%)</title><rect x="776.4" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (23 samples, 0.07%)</title><rect x="776.4" y="1059.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (22 samples, 0.07%)</title><rect x="776.5" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.5" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (22 samples, 0.07%)</title><rect x="776.5" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (22 samples, 0.07%)</title><rect x="776.5" y="1011.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.5" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (21 samples, 0.06%)</title><rect x="776.5" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 0.06%)</title><rect x="776.5" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (21 samples, 0.06%)</title><rect x="776.5" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (20 samples, 0.06%)</title><rect x="776.5" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (18 samples, 0.05%)</title><rect x="776.6" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.05%)</title><rect x="776.6" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.05%)</title><rect x="776.6" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.6" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.05%)</title><rect x="776.6" y="883.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="779.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.04%)</title><rect x="776.8" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.04%)</title><rect x="776.8" y="851.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="779.8" y="862.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.04%)</title><rect x="776.8" y="835.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.8" y="846.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.04%)</title><rect x="776.8" y="819.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="779.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.04%)</title><rect x="776.8" y="803.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.8" y="814.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.03%)</title><rect x="776.9" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.9" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.03%)</title><rect x="776.9" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.9" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.03%)</title><rect x="776.9" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.9" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$2.onPush (11 samples, 0.03%)</title><rect x="777.5" y="1251.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (7 samples, 0.02%)</title><rect x="777.6" y="1235.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (11 samples, 0.03%)</title><rect x="778.1" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (23 samples, 0.07%)</title><rect x="778.6" y="1283.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPull (7 samples, 0.02%)</title><rect x="778.8" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (459 samples, 1.39%)</title><rect x="779.4" y="1283.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (29 samples, 0.09%)</title><rect x="779.4" y="1267.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (12 samples, 0.04%)</title><rect x="779.8" y="1251.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (12 samples, 0.04%)</title><rect x="779.8" y="1235.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (12 samples, 0.04%)</title><rect x="779.8" y="1219.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (12 samples, 0.04%)</title><rect x="779.8" y="1203.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (7 samples, 0.02%)</title><rect x="780.2" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (11 samples, 0.03%)</title><rect x="780.5" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (10 samples, 0.03%)</title><rect x="780.5" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (256 samples, 0.77%)</title><rect x="781.5" y="1267.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$418/1697232625.apply (213 samples, 0.64%)</title><rect x="781.7" y="1251.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (213 samples, 0.64%)</title><rect x="781.7" y="1235.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (213 samples, 0.64%)</title><rect x="781.7" y="1219.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (53 samples, 0.16%)</title><rect x="781.7" y="1203.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (53 samples, 0.16%)</title><rect x="781.7" y="1187.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (46 samples, 0.14%)</title><rect x="782.0" y="1171.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (36 samples, 0.11%)</title><rect x="782.2" y="1155.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (28 samples, 0.08%)</title><rect x="782.2" y="1139.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (15 samples, 0.05%)</title><rect x="782.4" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (7 samples, 0.02%)</title><rect x="782.6" y="1107.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStageModule.&lt;init&gt; (7 samples, 0.02%)</title><rect x="783.2" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (160 samples, 0.48%)</title><rect x="783.6" y="1203.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (27 samples, 0.08%)</title><rect x="783.6" y="1187.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.6" y="1198.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.$plus$plus (7 samples, 0.02%)</title><rect x="784.3" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (67 samples, 0.20%)</title><rect x="784.6" y="1187.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render$1 (39 samples, 0.12%)</title><rect x="784.7" y="1171.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (39 samples, 0.12%)</title><rect x="784.7" y="1155.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (38 samples, 0.12%)</title><rect x="784.8" y="1139.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (38 samples, 0.12%)</title><rect x="784.8" y="1123.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (38 samples, 0.12%)</title><rect x="784.8" y="1107.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (35 samples, 0.11%)</title><rect x="784.8" y="1091.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.render (33 samples, 0.10%)</title><rect x="784.9" y="1075.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (33 samples, 0.10%)</title><rect x="784.9" y="1059.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (33 samples, 0.10%)</title><rect x="784.9" y="1043.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (10 samples, 0.03%)</title><rect x="784.9" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (9 samples, 0.03%)</title><rect x="784.9" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (7 samples, 0.02%)</title><rect x="784.9" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (7 samples, 0.02%)</title><rect x="784.9" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.renderValue (23 samples, 0.07%)</title><rect x="785.3" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (23 samples, 0.07%)</title><rect x="785.3" y="1011.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (23 samples, 0.07%)</title><rect x="785.3" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (23 samples, 0.07%)</title><rect x="785.3" y="979.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.3" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (18 samples, 0.05%)</title><rect x="785.4" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (16 samples, 0.05%)</title><rect x="785.5" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.5" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.encode (14 samples, 0.04%)</title><rect x="785.5" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.5" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.rec$3 (12 samples, 0.04%)</title><rect x="785.6" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (21 samples, 0.06%)</title><rect x="786.1" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (21 samples, 0.06%)</title><rect x="786.1" y="1155.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (21 samples, 0.06%)</title><rect x="786.1" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (21 samples, 0.06%)</title><rect x="786.1" y="1123.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (19 samples, 0.06%)</title><rect x="786.2" y="1107.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (19 samples, 0.06%)</title><rect x="786.2" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (19 samples, 0.06%)</title><rect x="786.2" y="1075.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (19 samples, 0.06%)</title><rect x="786.2" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (18 samples, 0.05%)</title><rect x="786.2" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (17 samples, 0.05%)</title><rect x="786.2" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.2" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (17 samples, 0.05%)</title><rect x="786.2" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (17 samples, 0.05%)</title><rect x="786.2" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (17 samples, 0.05%)</title><rect x="786.2" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.2" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (17 samples, 0.05%)</title><rect x="786.2" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (14 samples, 0.04%)</title><rect x="786.3" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (9 samples, 0.03%)</title><rect x="786.3" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (9 samples, 0.03%)</title><rect x="786.3" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.3" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.render (9 samples, 0.03%)</title><rect x="786.3" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (8 samples, 0.02%)</title><rect x="786.3" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (8 samples, 0.02%)</title><rect x="786.3" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (8 samples, 0.02%)</title><rect x="786.3" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.rec$1 (8 samples, 0.02%)</title><rect x="786.3" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.3" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (40 samples, 0.12%)</title><rect x="787.0" y="1187.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (22 samples, 0.07%)</title><rect x="787.1" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (19 samples, 0.06%)</title><rect x="787.1" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (19 samples, 0.06%)</title><rect x="787.1" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (16 samples, 0.05%)</title><rect x="787.1" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (10 samples, 0.03%)</title><rect x="787.2" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (9 samples, 0.03%)</title><rect x="788.1" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.1" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (7 samples, 0.02%)</title><rect x="788.2" y="1155.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/RenderSupport$.renderEntityContentType (20 samples, 0.06%)</title><rect x="788.4" y="1187.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (17 samples, 0.05%)</title><rect x="788.5" y="1171.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (17 samples, 0.05%)</title><rect x="788.5" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (17 samples, 0.05%)</title><rect x="788.5" y="1139.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (17 samples, 0.05%)</title><rect x="788.5" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (15 samples, 0.05%)</title><rect x="788.5" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.render (7 samples, 0.02%)</title><rect x="788.6" y="1091.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.6" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map.out (7 samples, 0.02%)</title><rect x="789.4" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (11 samples, 0.03%)</title><rect x="789.7" y="1251.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (9 samples, 0.03%)</title><rect x="789.7" y="1235.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.portToConn (9 samples, 0.03%)</title><rect x="789.7" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (17 samples, 0.05%)</title><rect x="790.1" y="1251.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (16 samples, 0.05%)</title><rect x="790.1" y="1235.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/OutPort.id (15 samples, 0.05%)</title><rect x="790.1" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.1" y="1230.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.02%)</title><rect x="790.4" y="1203.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="793.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (12 samples, 0.04%)</title><rect x="790.7" y="1267.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (9 samples, 0.03%)</title><rect x="790.7" y="1251.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="793.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (9 samples, 0.03%)</title><rect x="790.7" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (109 samples, 0.33%)</title><rect x="791.1" y="1267.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (94 samples, 0.28%)</title><rect x="791.1" y="1251.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (94 samples, 0.28%)</title><rect x="791.1" y="1235.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (94 samples, 0.28%)</title><rect x="791.1" y="1219.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (94 samples, 0.28%)</title><rect x="791.1" y="1203.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (94 samples, 0.28%)</title><rect x="791.1" y="1187.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (94 samples, 0.28%)</title><rect x="791.1" y="1171.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (94 samples, 0.28%)</title><rect x="791.1" y="1155.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (94 samples, 0.28%)</title><rect x="791.1" y="1139.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (86 samples, 0.26%)</title><rect x="791.1" y="1123.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (83 samples, 0.25%)</title><rect x="791.1" y="1107.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (83 samples, 0.25%)</title><rect x="791.1" y="1091.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (83 samples, 0.25%)</title><rect x="791.1" y="1075.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (81 samples, 0.25%)</title><rect x="791.1" y="1059.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (81 samples, 0.25%)</title><rect x="791.1" y="1043.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (81 samples, 0.25%)</title><rect x="791.1" y="1027.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (81 samples, 0.25%)</title><rect x="791.1" y="1011.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (80 samples, 0.24%)</title><rect x="791.2" y="995.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (80 samples, 0.24%)</title><rect x="791.2" y="979.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (80 samples, 0.24%)</title><rect x="791.2" y="963.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.2" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.02%)</title><rect x="791.2" y="947.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="794.2" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (72 samples, 0.22%)</title><rect x="791.5" y="947.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="794.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.19%)</title><rect x="791.7" y="931.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="794.7" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 0.19%)</title><rect x="791.7" y="915.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="794.7" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (23 samples, 0.07%)</title><rect x="791.7" y="899.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.7" y="910.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.07%)</title><rect x="791.7" y="883.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.7" y="894.0"></text>
</g>
<g>
<title>__schedule (23 samples, 0.07%)</title><rect x="791.7" y="867.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="794.7" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (22 samples, 0.07%)</title><rect x="791.8" y="851.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="794.8" y="862.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.12%)</title><rect x="792.6" y="899.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="795.6" y="910.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.12%)</title><rect x="792.6" y="883.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.6" y="894.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 0.12%)</title><rect x="792.6" y="867.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="795.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.10%)</title><rect x="792.7" y="851.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.7" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (33 samples, 0.10%)</title><rect x="792.7" y="835.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="795.7" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.10%)</title><rect x="792.7" y="819.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="795.7" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (7 samples, 0.02%)</title><rect x="794.2" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.2" y="1134.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (7 samples, 0.02%)</title><rect x="794.6" y="1251.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.onPush (23 samples, 0.07%)</title><rect x="795.0" y="1267.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (9 samples, 0.03%)</title><rect x="795.3" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (7 samples, 0.02%)</title><rect x="795.4" y="1235.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.4" y="1246.0"></text>
</g>
<g>
<title>itable stub (36 samples, 0.11%)</title><rect x="796.3" y="1283.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="799.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (97 samples, 0.29%)</title><rect x="797.8" y="1363.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.8" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (89 samples, 0.27%)</title><rect x="797.9" y="1347.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (86 samples, 0.26%)</title><rect x="797.9" y="1331.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (57 samples, 0.17%)</title><rect x="797.9" y="1315.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (43 samples, 0.13%)</title><rect x="798.4" y="1299.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.03%)</title><rect x="798.4" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (24 samples, 0.07%)</title><rect x="798.8" y="1283.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (24 samples, 0.07%)</title><rect x="798.8" y="1267.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (20 samples, 0.06%)</title><rect x="798.9" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (20 samples, 0.06%)</title><rect x="798.9" y="1235.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (20 samples, 0.06%)</title><rect x="798.9" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (20 samples, 0.06%)</title><rect x="798.9" y="1203.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (20 samples, 0.06%)</title><rect x="798.9" y="1187.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (16 samples, 0.05%)</title><rect x="799.0" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (16 samples, 0.05%)</title><rect x="799.0" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (16 samples, 0.05%)</title><rect x="799.0" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (16 samples, 0.05%)</title><rect x="799.0" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (15 samples, 0.05%)</title><rect x="799.0" y="1107.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.05%)</title><rect x="799.0" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.05%)</title><rect x="799.0" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (15 samples, 0.05%)</title><rect x="799.0" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.05%)</title><rect x="799.0" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.05%)</title><rect x="799.0" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.05%)</title><rect x="799.0" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.0" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.04%)</title><rect x="799.1" y="995.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="802.1" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="799.2" y="979.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.03%)</title><rect x="799.2" y="963.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="802.2" y="974.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.02%)</title><rect x="799.3" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="802.3" y="958.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.02%)</title><rect x="799.3" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.02%)</title><rect x="799.3" y="915.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.3" y="926.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.02%)</title><rect x="799.3" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.3" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.02%)</title><rect x="799.3" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="802.3" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.02%)</title><rect x="799.3" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="802.3" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (8 samples, 0.02%)</title><rect x="799.6" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (8 samples, 0.02%)</title><rect x="799.6" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (17 samples, 0.05%)</title><rect x="800.0" y="1315.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (17 samples, 0.05%)</title><rect x="800.0" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (17 samples, 0.05%)</title><rect x="800.0" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (17 samples, 0.05%)</title><rect x="800.0" y="1267.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.0" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (17 samples, 0.05%)</title><rect x="800.0" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.0" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (14 samples, 0.04%)</title><rect x="800.1" y="1235.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.1" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (7 samples, 0.02%)</title><rect x="800.1" y="1219.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.1" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (7 samples, 0.02%)</title><rect x="800.1" y="1203.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.1" y="1214.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (7 samples, 0.02%)</title><rect x="800.3" y="1219.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (10 samples, 0.03%)</title><rect x="800.6" y="1315.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (10 samples, 0.03%)</title><rect x="800.6" y="1299.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.6" y="1310.0"></text>
</g>
<g>
<title>itable stub (17 samples, 0.05%)</title><rect x="801.3" y="1363.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="804.3" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.poll (7 samples, 0.02%)</title><rect x="801.9" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (12 samples, 0.04%)</title><rect x="802.2" y="1363.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (8 samples, 0.02%)</title><rect x="802.3" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.3" y="1358.0"></text>
</g>
<g>
<title>itable stub (12 samples, 0.04%)</title><rect x="802.6" y="1395.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="805.6" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (98 samples, 0.30%)</title><rect x="803.5" y="1475.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (74 samples, 0.22%)</title><rect x="804.3" y="1459.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.3" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (74 samples, 0.22%)</title><rect x="804.3" y="1443.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.3" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (74 samples, 0.22%)</title><rect x="804.3" y="1427.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.3" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (71 samples, 0.21%)</title><rect x="804.4" y="1411.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.casItem (39 samples, 0.12%)</title><rect x="805.5" y="1395.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (39 samples, 0.12%)</title><rect x="805.5" y="1379.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (39 samples, 0.12%)</title><rect x="805.5" y="1363.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.5" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (113 samples, 0.34%)</title><rect x="807.0" y="1475.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.0" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (107 samples, 0.32%)</title><rect x="807.0" y="1459.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.0" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (107 samples, 0.32%)</title><rect x="807.0" y="1443.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (103 samples, 0.31%)</title><rect x="807.1" y="1427.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (103 samples, 0.31%)</title><rect x="807.1" y="1411.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (103 samples, 0.31%)</title><rect x="807.1" y="1395.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (101 samples, 0.31%)</title><rect x="807.2" y="1379.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (11 samples, 0.03%)</title><rect x="807.2" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.2" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (11 samples, 0.03%)</title><rect x="807.2" y="1347.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (9 samples, 0.03%)</title><rect x="807.6" y="1363.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (9 samples, 0.03%)</title><rect x="807.6" y="1347.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.6" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (9 samples, 0.03%)</title><rect x="807.6" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (16 samples, 0.05%)</title><rect x="807.9" y="1363.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (16 samples, 0.05%)</title><rect x="807.9" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (16 samples, 0.05%)</title><rect x="807.9" y="1331.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (9 samples, 0.03%)</title><rect x="808.0" y="1315.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.hasNonLocalAddress$1 (9 samples, 0.03%)</title><rect x="808.0" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (15 samples, 0.05%)</title><rect x="808.5" y="1363.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (15 samples, 0.05%)</title><rect x="808.5" y="1347.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (15 samples, 0.05%)</title><rect x="808.5" y="1331.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (15 samples, 0.05%)</title><rect x="808.5" y="1315.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (15 samples, 0.05%)</title><rect x="808.5" y="1299.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (12 samples, 0.04%)</title><rect x="808.6" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.04%)</title><rect x="808.6" y="1267.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.04%)</title><rect x="808.6" y="1251.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.04%)</title><rect x="808.6" y="1235.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.04%)</title><rect x="808.6" y="1219.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.04%)</title><rect x="808.6" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.04%)</title><rect x="808.6" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.04%)</title><rect x="808.6" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.04%)</title><rect x="808.6" y="1155.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.04%)</title><rect x="808.6" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.04%)</title><rect x="808.6" y="1123.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.6" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.03%)</title><rect x="808.7" y="1107.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="811.7" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="808.7" y="1091.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.7" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.03%)</title><rect x="808.7" y="1075.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.7" y="1086.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.02%)</title><rect x="808.7" y="1059.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="811.7" y="1070.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.02%)</title><rect x="808.7" y="1043.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.7" y="1054.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.02%)</title><rect x="808.7" y="1027.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="811.7" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.02%)</title><rect x="808.8" y="1011.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="811.8" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.02%)</title><rect x="808.8" y="995.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="811.8" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.02%)</title><rect x="808.8" y="979.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="811.8" y="990.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (42 samples, 0.13%)</title><rect x="809.2" y="1363.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (42 samples, 0.13%)</title><rect x="809.2" y="1347.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (42 samples, 0.13%)</title><rect x="809.2" y="1331.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (42 samples, 0.13%)</title><rect x="809.2" y="1315.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (15 samples, 0.05%)</title><rect x="809.3" y="1299.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.3" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (14 samples, 0.04%)</title><rect x="809.3" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.3" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$676/1817790582.apply (14 samples, 0.04%)</title><rect x="809.3" y="1267.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.3" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (14 samples, 0.04%)</title><rect x="809.3" y="1251.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.3" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (14 samples, 0.04%)</title><rect x="809.3" y="1235.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (14 samples, 0.04%)</title><rect x="809.3" y="1219.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.3" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1303/88550864.apply (14 samples, 0.04%)</title><rect x="809.3" y="1203.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.3" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (12 samples, 0.04%)</title><rect x="809.4" y="1187.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.4" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (12 samples, 0.04%)</title><rect x="809.4" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (12 samples, 0.04%)</title><rect x="809.4" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1290206611.apply (12 samples, 0.04%)</title><rect x="809.4" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (12 samples, 0.04%)</title><rect x="809.4" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (12 samples, 0.04%)</title><rect x="809.4" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (11 samples, 0.03%)</title><rect x="809.5" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (11 samples, 0.03%)</title><rect x="809.5" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (11 samples, 0.03%)</title><rect x="809.5" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/1248321118.apply (9 samples, 0.03%)</title><rect x="809.5" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (9 samples, 0.03%)</title><rect x="809.5" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (9 samples, 0.03%)</title><rect x="809.5" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (8 samples, 0.02%)</title><rect x="809.5" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.02%)</title><rect x="809.5" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.02%)</title><rect x="809.5" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.5" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.02%)</title><rect x="809.5" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.5" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.02%)</title><rect x="809.5" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.5" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.02%)</title><rect x="809.5" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.5" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.02%)</title><rect x="809.5" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.02%)</title><rect x="809.5" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.5" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.02%)</title><rect x="809.5" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.5" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="809.5" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.5" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.02%)</title><rect x="809.5" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.5" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.02%)</title><rect x="809.5" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.5" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.02%)</title><rect x="809.5" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.02%)</title><rect x="809.5" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.02%)</title><rect x="809.5" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.02%)</title><rect x="809.5" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.5" y="766.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.$plus$plus (13 samples, 0.04%)</title><rect x="810.0" y="1299.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus$ (13 samples, 0.04%)</title><rect x="810.0" y="1283.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus (13 samples, 0.04%)</title><rect x="810.0" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.concat (13 samples, 0.04%)</title><rect x="810.0" y="1251.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat$ (13 samples, 0.04%)</title><rect x="810.0" y="1235.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat (13 samples, 0.04%)</title><rect x="810.0" y="1219.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (12 samples, 0.04%)</title><rect x="810.0" y="1203.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (12 samples, 0.04%)</title><rect x="810.0" y="1187.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (12 samples, 0.04%)</title><rect x="810.0" y="1171.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (12 samples, 0.04%)</title><rect x="810.0" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (12 samples, 0.04%)</title><rect x="810.0" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (185 samples, 0.56%)</title><rect x="811.7" y="1555.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.7" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (40 samples, 0.12%)</title><rect x="812.6" y="1539.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (21 samples, 0.06%)</title><rect x="813.2" y="1523.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (118 samples, 0.36%)</title><rect x="814.1" y="1539.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (118 samples, 0.36%)</title><rect x="814.1" y="1523.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.1" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (111 samples, 0.34%)</title><rect x="814.3" y="1507.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="817.3" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 0.27%)</title><rect x="815.1" y="1491.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="818.1" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (90 samples, 0.27%)</title><rect x="815.1" y="1475.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.1" y="1486.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 0.05%)</title><rect x="815.1" y="1459.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.1" y="1470.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.04%)</title><rect x="815.2" y="1443.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="818.2" y="1454.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.04%)</title><rect x="815.2" y="1427.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.2" y="1438.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.03%)</title><rect x="815.3" y="1411.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.3" y="1422.0"></text>
</g>
<g>
<title>sys_futex (73 samples, 0.22%)</title><rect x="815.7" y="1459.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.7" y="1470.0"></text>
</g>
<g>
<title>do_futex (73 samples, 0.22%)</title><rect x="815.7" y="1443.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="818.7" y="1454.0"></text>
</g>
<g>
<title>futex_wake (73 samples, 0.22%)</title><rect x="815.7" y="1427.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="818.7" y="1438.0"></text>
</g>
<g>
<title>mark_wake_futex (12 samples, 0.04%)</title><rect x="816.1" y="1411.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="819.1" y="1422.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.15%)</title><rect x="816.5" y="1411.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.5" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (49 samples, 0.15%)</title><rect x="816.5" y="1395.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="819.5" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 0.15%)</title><rect x="816.5" y="1379.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,574 samples, 4.76%)</title><rect x="818.3" y="1571.0" width="56.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.3" y="1582.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (11 samples, 0.03%)</title><rect x="818.4" y="1555.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,562 samples, 4.73%)</title><rect x="818.8" y="1555.0" width="55.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.8" y="1566.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (379 samples, 1.15%)</title><rect x="819.8" y="1539.0" width="13.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="822.8" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (23 samples, 0.07%)</title><rect x="820.8" y="1523.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="823.8" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (77 samples, 0.23%)</title><rect x="821.6" y="1523.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="824.6" y="1534.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (15 samples, 0.05%)</title><rect x="823.2" y="1507.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="826.2" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.04%)</title><rect x="823.9" y="1507.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="826.9" y="1518.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 0.03%)</title><rect x="824.4" y="1523.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="827.4" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (198 samples, 0.60%)</title><rect x="824.9" y="1523.0" width="7.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="827.9" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 0.28%)</title><rect x="828.6" y="1507.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="831.6" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (90 samples, 0.27%)</title><rect x="828.6" y="1491.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.6" y="1502.0"></text>
</g>
<g>
<title>sys_futex (36 samples, 0.11%)</title><rect x="830.5" y="1475.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="833.5" y="1486.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.10%)</title><rect x="830.6" y="1459.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="833.6" y="1470.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.08%)</title><rect x="830.7" y="1443.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="833.7" y="1454.0"></text>
</g>
<g>
<title>get_futex_key (10 samples, 0.03%)</title><rect x="831.2" y="1427.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="834.2" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.02%)</title><rect x="832.0" y="1523.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="835.0" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_wait (7 samples, 0.02%)</title><rect x="832.9" y="1523.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="835.9" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1,153 samples, 3.49%)</title><rect x="833.3" y="1539.0" width="41.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="836.3" y="1550.0">[un..</text>
</g>
<g>
<title>__pthread_cond_wait (1,127 samples, 3.41%)</title><rect x="833.4" y="1523.0" width="40.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="836.4" y="1534.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (959 samples, 2.90%)</title><rect x="839.3" y="1507.0" width="34.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="842.3" y="1518.0">en..</text>
</g>
<g>
<title>do_syscall_64 (955 samples, 2.89%)</title><rect x="839.4" y="1491.0" width="34.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.4" y="1502.0">do..</text>
</g>
<g>
<title>sys_futex (915 samples, 2.77%)</title><rect x="840.8" y="1475.0" width="32.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="843.8" y="1486.0">sy..</text>
</g>
<g>
<title>do_futex (893 samples, 2.70%)</title><rect x="841.6" y="1459.0" width="31.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.6" y="1470.0">do..</text>
</g>
<g>
<title>futex_wait (864 samples, 2.62%)</title><rect x="842.3" y="1443.0" width="30.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="845.3" y="1454.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (792 samples, 2.40%)</title><rect x="843.1" y="1427.0" width="28.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.1" y="1438.0">fu..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (7 samples, 0.02%)</title><rect x="844.0" y="1411.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.0" y="1422.0"></text>
</g>
<g>
<title>schedule (752 samples, 2.28%)</title><rect x="844.6" y="1411.0" width="26.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="847.6" y="1422.0">s..</text>
</g>
<g>
<title>__schedule (730 samples, 2.21%)</title><rect x="845.3" y="1395.0" width="26.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.3" y="1406.0">_..</text>
</g>
<g>
<title>finish_task_switch (696 samples, 2.11%)</title><rect x="846.5" y="1379.0" width="24.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.5" y="1390.0">f..</text>
</g>
<g>
<title>ret_from_intr (35 samples, 0.11%)</title><rect x="870.1" y="1363.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="873.1" y="1374.0"></text>
</g>
<g>
<title>do_IRQ (35 samples, 0.11%)</title><rect x="870.1" y="1347.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="873.1" y="1358.0"></text>
</g>
<g>
<title>irq_exit (35 samples, 0.11%)</title><rect x="870.1" y="1331.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="873.1" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (35 samples, 0.11%)</title><rect x="870.1" y="1315.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.1" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 0.08%)</title><rect x="870.5" y="1299.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.5" y="1310.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (24 samples, 0.07%)</title><rect x="870.5" y="1283.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.5" y="1294.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (20 samples, 0.06%)</title><rect x="870.6" y="1267.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="873.6" y="1278.0"></text>
</g>
<g>
<title>napi_gro_receive (13 samples, 0.04%)</title><rect x="870.9" y="1251.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.9" y="1262.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (11 samples, 0.03%)</title><rect x="870.9" y="1235.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="873.9" y="1246.0"></text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 0.03%)</title><rect x="870.9" y="1219.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="873.9" y="1230.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.03%)</title><rect x="870.9" y="1203.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.9" y="1214.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.03%)</title><rect x="870.9" y="1187.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.9" y="1198.0"></text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 0.03%)</title><rect x="871.0" y="1171.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="874.0" y="1182.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 0.03%)</title><rect x="871.0" y="1155.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.0" y="1166.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 0.03%)</title><rect x="871.0" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.0" y="1150.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 0.03%)</title><rect x="871.0" y="1123.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="874.0" y="1134.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 0.02%)</title><rect x="871.0" y="1107.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="874.0" y="1118.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.02%)</title><rect x="871.0" y="1091.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.0" y="1102.0"></text>
</g>
<g>
<title>futex_wait_setup (39 samples, 0.12%)</title><rect x="871.4" y="1427.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="874.4" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (12 samples, 0.04%)</title><rect x="872.3" y="1411.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="875.3" y="1422.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.03%)</title><rect x="873.1" y="1443.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="876.1" y="1454.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.03%)</title><rect x="873.7" y="1523.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="876.7" y="1534.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (8 samples, 0.02%)</title><rect x="874.0" y="1523.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="877.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (942 samples, 2.85%)</title><rect x="874.6" y="1571.0" width="33.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.6" y="1582.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (939 samples, 2.84%)</title><rect x="874.7" y="1555.0" width="33.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.7" y="1566.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (226 samples, 0.68%)</title><rect x="875.4" y="1539.0" width="8.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="878.4" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (12 samples, 0.04%)</title><rect x="876.0" y="1523.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="879.0" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (53 samples, 0.16%)</title><rect x="876.5" y="1523.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="879.5" y="1534.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (18 samples, 0.05%)</title><rect x="877.8" y="1507.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="880.8" y="1518.0"></text>
</g>
<g>
<title>gettimeofday (11 samples, 0.03%)</title><rect x="878.0" y="1491.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="881.0" y="1502.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.03%)</title><rect x="878.0" y="1475.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="881.0" y="1486.0"></text>
</g>
<g>
<title>__lll_unlock_wake (95 samples, 0.29%)</title><rect x="878.7" y="1523.0" width="3.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="881.7" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.15%)</title><rect x="880.2" y="1507.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="883.2" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.15%)</title><rect x="880.2" y="1491.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="883.2" y="1502.0"></text>
</g>
<g>
<title>sys_futex (25 samples, 0.08%)</title><rect x="881.0" y="1475.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="884.0" y="1486.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.07%)</title><rect x="881.1" y="1459.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.1" y="1470.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.05%)</title><rect x="881.2" y="1443.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.2" y="1454.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.02%)</title><rect x="881.5" y="1427.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.5" y="1438.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (10 samples, 0.03%)</title><rect x="882.9" y="1523.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="885.9" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (671 samples, 2.03%)</title><rect x="883.8" y="1539.0" width="23.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="886.8" y="1550.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (590 samples, 1.79%)</title><rect x="886.6" y="1523.0" width="21.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.6" y="1534.0">e..</text>
</g>
<g>
<title>do_syscall_64 (588 samples, 1.78%)</title><rect x="886.7" y="1507.0" width="21.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="889.7" y="1518.0">d..</text>
</g>
<g>
<title>sys_futex (557 samples, 1.69%)</title><rect x="887.8" y="1491.0" width="19.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="890.8" y="1502.0"></text>
</g>
<g>
<title>do_futex (543 samples, 1.64%)</title><rect x="888.2" y="1475.0" width="19.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.2" y="1486.0"></text>
</g>
<g>
<title>futex_wait (531 samples, 1.61%)</title><rect x="888.4" y="1459.0" width="18.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.4" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (442 samples, 1.34%)</title><rect x="889.2" y="1443.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="892.2" y="1454.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (35 samples, 0.11%)</title><rect x="889.9" y="1427.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="892.9" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.09%)</title><rect x="889.9" y="1411.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="892.9" y="1422.0"></text>
</g>
<g>
<title>schedule (382 samples, 1.16%)</title><rect x="891.4" y="1427.0" width="13.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="894.4" y="1438.0"></text>
</g>
<g>
<title>__schedule (372 samples, 1.13%)</title><rect x="891.7" y="1411.0" width="13.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="894.7" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (365 samples, 1.10%)</title><rect x="892.0" y="1395.0" width="13.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.0" y="1406.0"></text>
</g>
<g>
<title>ret_from_intr (23 samples, 0.07%)</title><rect x="904.2" y="1379.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.2" y="1390.0"></text>
</g>
<g>
<title>do_IRQ (23 samples, 0.07%)</title><rect x="904.2" y="1363.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="907.2" y="1374.0"></text>
</g>
<g>
<title>irq_exit (23 samples, 0.07%)</title><rect x="904.2" y="1347.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.2" y="1358.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 0.07%)</title><rect x="904.2" y="1331.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.2" y="1342.0"></text>
</g>
<g>
<title>net_rx_action (14 samples, 0.04%)</title><rect x="904.5" y="1315.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.5" y="1326.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (14 samples, 0.04%)</title><rect x="904.5" y="1299.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.5" y="1310.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (7 samples, 0.02%)</title><rect x="904.8" y="1283.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.8" y="1294.0"></text>
</g>
<g>
<title>futex_wait_setup (20 samples, 0.06%)</title><rect x="905.0" y="1443.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="908.0" y="1454.0"></text>
</g>
<g>
<title>get_futex_value_locked (7 samples, 0.02%)</title><rect x="905.4" y="1427.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.4" y="1438.0"></text>
</g>
<g>
<title>hrtimer_cancel (32 samples, 0.10%)</title><rect x="905.9" y="1443.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="908.9" y="1454.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (29 samples, 0.09%)</title><rect x="906.0" y="1427.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="909.0" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.08%)</title><rect x="906.1" y="1411.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="909.1" y="1422.0"></text>
</g>
<g>
<title>hrtimer_init (7 samples, 0.02%)</title><rect x="907.0" y="1443.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="910.0" y="1454.0"></text>
</g>
<g>
<title>__hrtimer_init (7 samples, 0.02%)</title><rect x="907.0" y="1427.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.0" y="1438.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (8 samples, 0.02%)</title><rect x="907.9" y="1539.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="910.9" y="1550.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.02%)</title><rect x="908.3" y="1571.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="911.3" y="1582.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (30 samples, 0.09%)</title><rect x="908.8" y="1603.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="911.8" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.08%)</title><rect x="908.9" y="1587.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.9" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.08%)</title><rect x="908.9" y="1571.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="911.9" y="1582.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.07%)</title><rect x="909.1" y="1555.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="912.1" y="1566.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.07%)</title><rect x="909.1" y="1539.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.1" y="1550.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.07%)</title><rect x="909.1" y="1523.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="912.1" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.06%)</title><rect x="909.2" y="1507.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.2" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.06%)</title><rect x="909.2" y="1491.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="912.2" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.06%)</title><rect x="909.2" y="1475.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.2" y="1486.0"></text>
</g>
<g>
<title>start_thread (7,838 samples, 23.73%)</title><rect x="910.0" y="1603.0" width="280.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="913.0" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (7,838 samples, 23.73%)</title><rect x="910.0" y="1587.0" width="280.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="913.0" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (7,838 samples, 23.73%)</title><rect x="910.0" y="1571.0" width="280.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.0" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (930 samples, 2.82%)</title><rect x="910.0" y="1555.0" width="33.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.0" y="1566.0">Co..</text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (844 samples, 2.56%)</title><rect x="910.0" y="1539.0" width="30.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="913.0" y="1550.0">G1..</text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (816 samples, 2.47%)</title><rect x="910.0" y="1523.0" width="29.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="913.0" y="1534.0">Di..</text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (804 samples, 2.43%)</title><rect x="910.4" y="1507.0" width="28.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="913.4" y="1518.0">G1..</text>
</g>
<g>
<title>G1HotCardCache::insert(signed char*) (17 samples, 0.05%)</title><rect x="911.6" y="1491.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="914.6" y="1502.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (677 samples, 2.05%)</title><rect x="912.3" y="1491.0" width="24.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="915.3" y="1502.0">b..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (90 samples, 0.27%)</title><rect x="917.1" y="1475.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="920.1" y="1486.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (55 samples, 0.17%)</title><rect x="918.3" y="1459.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="921.3" y="1470.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (21 samples, 0.06%)</title><rect x="920.5" y="1475.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="923.5" y="1486.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (7 samples, 0.02%)</title><rect x="921.2" y="1475.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="924.2" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (13 samples, 0.04%)</title><rect x="921.5" y="1475.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.5" y="1486.0"></text>
</g>
<g>
<title>oopDesc::size() (30 samples, 0.09%)</title><rect x="921.9" y="1475.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="924.9" y="1486.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (7 samples, 0.02%)</title><rect x="923.0" y="1475.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="926.0" y="1486.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (13 samples, 0.04%)</title><rect x="923.3" y="1475.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="926.3" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*, MemRegion) (15 samples, 0.05%)</title><rect x="923.7" y="1475.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.7" y="1486.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (10 samples, 0.03%)</title><rect x="923.9" y="1459.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="926.9" y="1470.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (314 samples, 0.95%)</title><rect x="924.3" y="1475.0" width="11.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="927.3" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (66 samples, 0.20%)</title><rect x="933.0" y="1459.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.0" y="1470.0"></text>
</g>
<g>
<title>SparsePRT::add_card(int, int) (36 samples, 0.11%)</title><rect x="934.0" y="1443.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="937.0" y="1454.0"></text>
</g>
<g>
<title>SparsePRT::expand() (7 samples, 0.02%)</title><rect x="934.9" y="1427.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="937.9" y="1438.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (28 samples, 0.08%)</title><rect x="935.5" y="1475.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="938.5" y="1486.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (11 samples, 0.03%)</title><rect x="936.1" y="1459.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="939.1" y="1470.0"></text>
</g>
<g>
<title>oopDesc::size() (15 samples, 0.05%)</title><rect x="936.5" y="1491.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="939.5" y="1502.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (47 samples, 0.14%)</title><rect x="937.0" y="1491.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="940.0" y="1502.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (18 samples, 0.05%)</title><rect x="939.2" y="1523.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="942.2" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (86 samples, 0.26%)</title><rect x="940.1" y="1539.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="943.1" y="1550.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (85 samples, 0.26%)</title><rect x="940.1" y="1523.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="943.1" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (85 samples, 0.26%)</title><rect x="940.1" y="1507.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="943.1" y="1518.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (17 samples, 0.05%)</title><rect x="940.2" y="1491.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="943.2" y="1502.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (15 samples, 0.05%)</title><rect x="940.3" y="1475.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="943.3" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (62 samples, 0.19%)</title><rect x="940.9" y="1491.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="943.9" y="1502.0"></text>
</g>
<g>
<title>GangWorker::loop() (1,276 samples, 3.86%)</title><rect x="943.2" y="1555.0" width="45.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="946.2" y="1566.0">Gang..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (42 samples, 0.13%)</title><rect x="943.2" y="1539.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="946.2" y="1550.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (42 samples, 0.13%)</title><rect x="943.2" y="1523.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="946.2" y="1534.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (37 samples, 0.11%)</title><rect x="943.3" y="1507.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="946.3" y="1518.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (27 samples, 0.08%)</title><rect x="943.6" y="1491.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="946.6" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (20 samples, 0.06%)</title><rect x="943.8" y="1475.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="946.8" y="1486.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (12 samples, 0.04%)</title><rect x="944.0" y="1459.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="947.0" y="1470.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1,189 samples, 3.60%)</title><rect x="944.9" y="1539.0" width="42.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.9" y="1550.0">G1Pa..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (845 samples, 2.56%)</title><rect x="945.1" y="1523.0" width="30.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="948.1" y="1534.0">G1..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (845 samples, 2.56%)</title><rect x="945.1" y="1507.0" width="30.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="948.1" y="1518.0">G1..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (761 samples, 2.30%)</title><rect x="945.1" y="1491.0" width="27.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="948.1" y="1502.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (761 samples, 2.30%)</title><rect x="945.1" y="1475.0" width="27.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="948.1" y="1486.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (756 samples, 2.29%)</title><rect x="945.1" y="1459.0" width="27.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="948.1" y="1470.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (599 samples, 1.81%)</title><rect x="945.6" y="1443.0" width="21.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="948.6" y="1454.0">G..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (32 samples, 0.10%)</title><rect x="951.7" y="1427.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="954.7" y="1438.0"></text>
</g>
<g>
<title>async_page_fault (16 samples, 0.05%)</title><rect x="952.3" y="1411.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="955.3" y="1422.0"></text>
</g>
<g>
<title>do_async_page_fault (16 samples, 0.05%)</title><rect x="952.3" y="1395.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.3" y="1406.0"></text>
</g>
<g>
<title>do_page_fault (16 samples, 0.05%)</title><rect x="952.3" y="1379.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.3" y="1390.0"></text>
</g>
<g>
<title>__do_page_fault (16 samples, 0.05%)</title><rect x="952.3" y="1363.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.3" y="1374.0"></text>
</g>
<g>
<title>handle_mm_fault (12 samples, 0.04%)</title><rect x="952.4" y="1347.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.4" y="1358.0"></text>
</g>
<g>
<title>__handle_mm_fault (11 samples, 0.03%)</title><rect x="952.5" y="1331.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="955.5" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (386 samples, 1.17%)</title><rect x="952.9" y="1427.0" width="13.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="955.9" y="1438.0"></text>
</g>
<g>
<title>async_page_fault (28 samples, 0.08%)</title><rect x="960.2" y="1411.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.2" y="1422.0"></text>
</g>
<g>
<title>do_async_page_fault (28 samples, 0.08%)</title><rect x="960.2" y="1395.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="963.2" y="1406.0"></text>
</g>
<g>
<title>do_page_fault (28 samples, 0.08%)</title><rect x="960.2" y="1379.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="963.2" y="1390.0"></text>
</g>
<g>
<title>__do_page_fault (28 samples, 0.08%)</title><rect x="960.2" y="1363.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.2" y="1374.0"></text>
</g>
<g>
<title>handle_mm_fault (17 samples, 0.05%)</title><rect x="960.5" y="1347.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="963.5" y="1358.0"></text>
</g>
<g>
<title>__handle_mm_fault (17 samples, 0.05%)</title><rect x="960.5" y="1331.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.5" y="1342.0"></text>
</g>
<g>
<title>alloc_pages_vma (11 samples, 0.03%)</title><rect x="960.6" y="1315.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="963.6" y="1326.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (10 samples, 0.03%)</title><rect x="960.6" y="1299.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.6" y="1310.0"></text>
</g>
<g>
<title>clear_page_erms (8 samples, 0.02%)</title><rect x="960.6" y="1283.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.6" y="1294.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (141 samples, 0.43%)</title><rect x="961.2" y="1411.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="964.2" y="1422.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (14 samples, 0.04%)</title><rect x="966.2" y="1411.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="969.2" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (145 samples, 0.44%)</title><rect x="967.0" y="1443.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="970.0" y="1454.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (137 samples, 0.41%)</title><rect x="967.0" y="1427.0" width="4.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="970.0" y="1438.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (13 samples, 0.04%)</title><rect x="968.0" y="1411.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="971.0" y="1422.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (7 samples, 0.02%)</title><rect x="968.2" y="1395.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="971.2" y="1406.0"></text>
</g>
<g>
<title>oopDesc::size() (10 samples, 0.03%)</title><rect x="968.6" y="1411.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="971.6" y="1422.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (49 samples, 0.15%)</title><rect x="969.1" y="1411.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="972.1" y="1422.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (28 samples, 0.08%)</title><rect x="970.8" y="1411.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="973.8" y="1422.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (83 samples, 0.25%)</title><rect x="972.3" y="1491.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.3" y="1502.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (83 samples, 0.25%)</title><rect x="972.3" y="1475.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.3" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (72 samples, 0.22%)</title><rect x="972.3" y="1459.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="975.3" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (8 samples, 0.02%)</title><rect x="973.3" y="1443.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="976.3" y="1454.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (36 samples, 0.11%)</title><rect x="973.6" y="1443.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="976.6" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (18 samples, 0.05%)</title><rect x="974.2" y="1427.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="977.2" y="1438.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (10 samples, 0.03%)</title><rect x="974.9" y="1459.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="977.9" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (10 samples, 0.03%)</title><rect x="974.9" y="1443.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="977.9" y="1454.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (316 samples, 0.96%)</title><rect x="975.3" y="1523.0" width="11.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="978.3" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (316 samples, 0.96%)</title><rect x="975.3" y="1507.0" width="11.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="978.3" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (315 samples, 0.95%)</title><rect x="975.3" y="1491.0" width="11.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="978.3" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (312 samples, 0.94%)</title><rect x="975.4" y="1475.0" width="11.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="978.4" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (65 samples, 0.20%)</title><rect x="976.0" y="1459.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="979.0" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (48 samples, 0.15%)</title><rect x="976.6" y="1443.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="979.6" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (14 samples, 0.04%)</title><rect x="977.8" y="1427.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="980.8" y="1438.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (19 samples, 0.06%)</title><rect x="978.4" y="1459.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="981.4" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (192 samples, 0.58%)</title><rect x="979.2" y="1459.0" width="6.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="982.2" y="1470.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (29 samples, 0.09%)</title><rect x="980.8" y="1443.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="983.8" y="1454.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (18 samples, 0.05%)</title><rect x="981.2" y="1427.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="984.2" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size() (8 samples, 0.02%)</title><rect x="982.3" y="1443.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="985.3" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (25 samples, 0.08%)</title><rect x="982.6" y="1443.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="985.6" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*, MemRegion) (8 samples, 0.02%)</title><rect x="983.5" y="1443.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="986.5" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (49 samples, 0.15%)</title><rect x="983.8" y="1443.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="986.8" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (23 samples, 0.07%)</title><rect x="984.7" y="1427.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="987.7" y="1438.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (13 samples, 0.04%)</title><rect x="985.6" y="1443.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="988.6" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (7 samples, 0.02%)</title><rect x="985.8" y="1427.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="988.8" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (7 samples, 0.02%)</title><rect x="986.2" y="1459.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="989.2" y="1470.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (24 samples, 0.07%)</title><rect x="986.6" y="1523.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.6" y="1534.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (14 samples, 0.04%)</title><rect x="986.6" y="1507.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="989.6" y="1518.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (10 samples, 0.03%)</title><rect x="986.7" y="1491.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="989.7" y="1502.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (10 samples, 0.03%)</title><rect x="986.7" y="1475.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="989.7" y="1486.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (9 samples, 0.03%)</title><rect x="987.1" y="1507.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.1" y="1518.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (20 samples, 0.06%)</title><rect x="987.6" y="1539.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.6" y="1550.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (20 samples, 0.06%)</title><rect x="987.6" y="1523.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="990.6" y="1534.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (20 samples, 0.06%)</title><rect x="987.6" y="1507.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.6" y="1518.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (10 samples, 0.03%)</title><rect x="987.9" y="1491.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.9" y="1502.0"></text>
</g>
<g>
<title>JavaThread::run() (5,576 samples, 16.88%)</title><rect x="988.8" y="1555.0" width="199.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="991.8" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5,576 samples, 16.88%)</title><rect x="988.8" y="1539.0" width="199.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="991.8" y="1550.0">JavaThread::thread_main_in..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5,501 samples, 16.65%)</title><rect x="988.8" y="1523.0" width="196.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="991.8" y="1534.0">CompileBroker::compiler_th..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5,484 samples, 16.60%)</title><rect x="988.8" y="1507.0" width="195.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="991.8" y="1518.0">CompileBroker::invoke_com..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4,908 samples, 14.86%)</title><rect x="989.0" y="1491.0" width="175.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="992.0" y="1502.0">C2Compiler::compile_met..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4,906 samples, 14.85%)</title><rect x="989.0" y="1475.0" width="175.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="992.0" y="1486.0">Compile::Compile(ciEnv*..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (21 samples, 0.06%)</title><rect x="989.0" y="1459.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="992.0" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (21 samples, 0.06%)</title><rect x="989.0" y="1443.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="992.0" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (21 samples, 0.06%)</title><rect x="989.0" y="1427.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="992.0" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (21 samples, 0.06%)</title><rect x="989.0" y="1411.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="992.0" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (21 samples, 0.06%)</title><rect x="989.0" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="992.0" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (19 samples, 0.06%)</title><rect x="989.0" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="992.0" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (16 samples, 0.05%)</title><rect x="989.1" y="1363.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="992.1" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (16 samples, 0.05%)</title><rect x="989.1" y="1347.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="992.1" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (8 samples, 0.02%)</title><rect x="989.4" y="1331.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.4" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (8 samples, 0.02%)</title><rect x="989.4" y="1315.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="992.4" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.02%)</title><rect x="989.4" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="992.4" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.02%)</title><rect x="989.4" y="1283.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="992.4" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (7 samples, 0.02%)</title><rect x="989.4" y="1267.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="992.4" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (7 samples, 0.02%)</title><rect x="989.4" y="1251.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="992.4" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (7 samples, 0.02%)</title><rect x="989.4" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="992.4" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (7 samples, 0.02%)</title><rect x="989.4" y="1219.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="992.4" y="1230.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2,883 samples, 8.73%)</title><rect x="989.8" y="1459.0" width="103.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="992.8" y="1470.0">Compile::Cod..</text>
</g>
<g>
<title>Compile::Output() (118 samples, 0.36%)</title><rect x="989.9" y="1443.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="992.9" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (13 samples, 0.04%)</title><rect x="989.9" y="1427.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="992.9" y="1438.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (63 samples, 0.19%)</title><rect x="990.4" y="1427.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="993.4" y="1438.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (21 samples, 0.06%)</title><rect x="991.8" y="1411.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="994.8" y="1422.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (14 samples, 0.04%)</title><rect x="992.0" y="1395.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="995.0" y="1406.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (38 samples, 0.12%)</title><rect x="992.6" y="1427.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.6" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (29 samples, 0.09%)</title><rect x="992.8" y="1411.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.8" y="1422.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (15 samples, 0.05%)</title><rect x="993.1" y="1395.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.1" y="1406.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (87 samples, 0.26%)</title><rect x="994.1" y="1443.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="997.1" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (25 samples, 0.08%)</title><rect x="994.9" y="1427.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.9" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (9 samples, 0.03%)</title><rect x="995.1" y="1411.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="998.1" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (7 samples, 0.02%)</title><rect x="995.1" y="1395.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="998.1" y="1406.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (24 samples, 0.07%)</title><rect x="996.0" y="1427.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="999.0" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (21 samples, 0.06%)</title><rect x="996.1" y="1411.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="999.1" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (11 samples, 0.03%)</title><rect x="996.4" y="1395.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="999.4" y="1406.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (7 samples, 0.02%)</title><rect x="997.2" y="1443.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.2" y="1454.0"></text>
</g>
<g>
<title>Matcher::match() (231 samples, 0.70%)</title><rect x="997.5" y="1443.0" width="8.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1000.5" y="1454.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (28 samples, 0.08%)</title><rect x="998.1" y="1427.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1001.1" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (180 samples, 0.54%)</title><rect x="999.1" y="1427.0" width="6.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1002.1" y="1438.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (44 samples, 0.13%)</title><rect x="1000.2" y="1411.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1003.2" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (15 samples, 0.05%)</title><rect x="1001.9" y="1411.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.9" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (11 samples, 0.03%)</title><rect x="1002.0" y="1395.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.0" y="1406.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (77 samples, 0.23%)</title><rect x="1002.5" y="1411.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.5" y="1422.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (45 samples, 0.14%)</title><rect x="1003.1" y="1395.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.1" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (29 samples, 0.09%)</title><rect x="1003.4" y="1379.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1006.4" y="1390.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (14 samples, 0.04%)</title><rect x="1003.6" y="1363.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.6" y="1374.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (7 samples, 0.02%)</title><rect x="1003.6" y="1347.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1006.6" y="1358.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (11 samples, 0.03%)</title><rect x="1004.7" y="1395.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1007.7" y="1406.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (12 samples, 0.04%)</title><rect x="1005.8" y="1443.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.8" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (10 samples, 0.03%)</title><rect x="1006.2" y="1443.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.2" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (8 samples, 0.02%)</title><rect x="1006.3" y="1427.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.3" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (281 samples, 0.85%)</title><rect x="1006.6" y="1443.0" width="10.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1009.6" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (7 samples, 0.02%)</title><rect x="1006.7" y="1427.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.7" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (271 samples, 0.82%)</title><rect x="1006.9" y="1427.0" width="9.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.9" y="1438.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.02%)</title><rect x="1007.0" y="1411.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1010.0" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (8 samples, 0.02%)</title><rect x="1007.5" y="1411.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1010.5" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (10 samples, 0.03%)</title><rect x="1007.8" y="1411.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1010.8" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (52 samples, 0.16%)</title><rect x="1008.2" y="1411.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.2" y="1422.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (18 samples, 0.05%)</title><rect x="1008.3" y="1395.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (9 samples, 0.03%)</title><rect x="1009.0" y="1395.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.0" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (16 samples, 0.05%)</title><rect x="1009.3" y="1395.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (56 samples, 0.17%)</title><rect x="1010.0" y="1411.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.0" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (14 samples, 0.04%)</title><rect x="1011.0" y="1395.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.0" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (12 samples, 0.04%)</title><rect x="1012.0" y="1411.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (33 samples, 0.10%)</title><rect x="1012.6" y="1411.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.6" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (9 samples, 0.03%)</title><rect x="1013.3" y="1395.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (8 samples, 0.02%)</title><rect x="1014.0" y="1411.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.0" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (59 samples, 0.18%)</title><rect x="1014.3" y="1411.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.3" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (25 samples, 0.08%)</title><rect x="1015.1" y="1395.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.1" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.02%)</title><rect x="1015.8" y="1379.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.8" y="1390.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (9 samples, 0.03%)</title><rect x="1016.1" y="1395.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1019.1" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2,121 samples, 6.42%)</title><rect x="1016.8" y="1443.0" width="75.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1019.8" y="1454.0">PhaseCha..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (26 samples, 0.08%)</title><rect x="1016.9" y="1427.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1019.9" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (7 samples, 0.02%)</title><rect x="1017.9" y="1427.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.9" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (43 samples, 0.13%)</title><rect x="1019.2" y="1427.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1022.2" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (120 samples, 0.36%)</title><rect x="1020.7" y="1427.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.7" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (15 samples, 0.05%)</title><rect x="1021.9" y="1411.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1024.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (9 samples, 0.03%)</title><rect x="1022.4" y="1411.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1025.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (53 samples, 0.16%)</title><rect x="1022.7" y="1411.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1025.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (32 samples, 0.10%)</title><rect x="1023.3" y="1395.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1026.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (9 samples, 0.03%)</title><rect x="1024.6" y="1411.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1027.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (83 samples, 0.25%)</title><rect x="1025.0" y="1427.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1028.0" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (20 samples, 0.06%)</title><rect x="1025.6" y="1411.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1028.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (44 samples, 0.13%)</title><rect x="1026.4" y="1411.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1029.4" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (23 samples, 0.07%)</title><rect x="1027.0" y="1395.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1030.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (219 samples, 0.66%)</title><rect x="1028.0" y="1427.0" width="7.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1031.0" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (19 samples, 0.06%)</title><rect x="1034.6" y="1411.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1037.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (533 samples, 1.61%)</title><rect x="1035.8" y="1427.0" width="19.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1038.8" y="1438.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (22 samples, 0.07%)</title><rect x="1039.2" y="1411.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1042.2" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (10 samples, 0.03%)</title><rect x="1040.1" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (66 samples, 0.20%)</title><rect x="1041.0" y="1411.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1044.0" y="1422.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (7 samples, 0.02%)</title><rect x="1042.4" y="1395.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1045.4" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (10 samples, 0.03%)</title><rect x="1042.7" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1045.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (166 samples, 0.50%)</title><rect x="1043.7" y="1411.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1046.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (49 samples, 0.15%)</title><rect x="1047.8" y="1395.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.8" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (124 samples, 0.38%)</title><rect x="1049.6" y="1411.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1052.6" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.02%)</title><rect x="1050.7" y="1395.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.7" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (25 samples, 0.08%)</title><rect x="1051.0" y="1395.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.0" y="1406.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (57 samples, 0.17%)</title><rect x="1051.9" y="1395.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1054.9" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (10 samples, 0.03%)</title><rect x="1054.2" y="1411.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (44 samples, 0.13%)</title><rect x="1054.8" y="1427.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1057.8" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (26 samples, 0.08%)</title><rect x="1055.5" y="1411.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1058.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (8 samples, 0.02%)</title><rect x="1056.4" y="1427.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1059.4" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (7 samples, 0.02%)</title><rect x="1056.7" y="1427.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1059.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (212 samples, 0.64%)</title><rect x="1057.0" y="1427.0" width="7.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.0" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (73 samples, 0.22%)</title><rect x="1060.5" y="1411.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.5" y="1422.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (10 samples, 0.03%)</title><rect x="1063.2" y="1411.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1066.2" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (11 samples, 0.03%)</title><rect x="1063.7" y="1411.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1066.7" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (66 samples, 0.20%)</title><rect x="1064.6" y="1427.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.6" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (21 samples, 0.06%)</title><rect x="1065.9" y="1411.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (40 samples, 0.12%)</title><rect x="1067.0" y="1427.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.0" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (274 samples, 0.83%)</title><rect x="1068.4" y="1427.0" width="9.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1071.4" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (125 samples, 0.38%)</title><rect x="1072.8" y="1411.0" width="4.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.8" y="1422.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (21 samples, 0.06%)</title><rect x="1077.4" y="1411.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1080.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (9 samples, 0.03%)</title><rect x="1078.2" y="1427.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1081.2" y="1438.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (73 samples, 0.22%)</title><rect x="1078.5" y="1427.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1081.5" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (19 samples, 0.06%)</title><rect x="1078.6" y="1411.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1081.6" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (10 samples, 0.03%)</title><rect x="1079.3" y="1411.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1082.3" y="1422.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (39 samples, 0.12%)</title><rect x="1079.6" y="1411.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1082.6" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (10 samples, 0.03%)</title><rect x="1079.8" y="1395.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1082.8" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (11 samples, 0.03%)</title><rect x="1080.4" y="1395.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (58 samples, 0.18%)</title><rect x="1081.1" y="1427.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1084.1" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (33 samples, 0.10%)</title><rect x="1081.9" y="1411.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1084.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (37 samples, 0.11%)</title><rect x="1083.2" y="1427.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.2" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (18 samples, 0.05%)</title><rect x="1083.8" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (15 samples, 0.05%)</title><rect x="1084.5" y="1427.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1087.5" y="1438.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (7 samples, 0.02%)</title><rect x="1084.8" y="1411.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.8" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (175 samples, 0.53%)</title><rect x="1085.0" y="1427.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1088.0" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (67 samples, 0.20%)</title><rect x="1088.7" y="1411.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1091.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (20 samples, 0.06%)</title><rect x="1090.2" y="1395.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1093.2" y="1406.0"></text>
</g>
<g>
<title>Compile::Optimize() (1,376 samples, 4.17%)</title><rect x="1092.8" y="1459.0" width="49.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1095.8" y="1470.0">Compi..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (28 samples, 0.08%)</title><rect x="1093.2" y="1443.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.2" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (27 samples, 0.08%)</title><rect x="1093.2" y="1427.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1096.2" y="1438.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.253] (15 samples, 0.05%)</title><rect x="1093.6" y="1411.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1096.6" y="1422.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (9 samples, 0.03%)</title><rect x="1094.2" y="1443.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.2" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (17 samples, 0.05%)</title><rect x="1094.5" y="1443.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1097.5" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (57 samples, 0.17%)</title><rect x="1095.1" y="1443.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.1" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (57 samples, 0.17%)</title><rect x="1095.1" y="1427.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1098.1" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (7 samples, 0.02%)</title><rect x="1096.0" y="1411.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.0" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (20 samples, 0.06%)</title><rect x="1096.4" y="1411.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1099.4" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (15 samples, 0.05%)</title><rect x="1096.4" y="1395.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.4" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (14 samples, 0.04%)</title><rect x="1096.4" y="1379.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.4" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (12 samples, 0.04%)</title><rect x="1096.5" y="1363.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1099.5" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (11 samples, 0.03%)</title><rect x="1096.6" y="1347.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1099.6" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (11 samples, 0.03%)</title><rect x="1096.6" y="1331.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.6" y="1342.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (47 samples, 0.14%)</title><rect x="1097.2" y="1443.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.2" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (13 samples, 0.04%)</title><rect x="1098.9" y="1443.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.9" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (13 samples, 0.04%)</title><rect x="1098.9" y="1427.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.9" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (880 samples, 2.66%)</title><rect x="1099.4" y="1443.0" width="31.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1102.4" y="1454.0">Ph..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (8 samples, 0.02%)</title><rect x="1099.8" y="1427.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.8" y="1438.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (7 samples, 0.02%)</title><rect x="1099.8" y="1411.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1102.8" y="1422.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (7 samples, 0.02%)</title><rect x="1100.1" y="1427.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.1" y="1438.0"></text>
</g>
<g>
<title>Node::is_CFG() const (12 samples, 0.04%)</title><rect x="1100.6" y="1427.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.6" y="1438.0"></text>
</g>
<g>
<title>Node::pinned() const (7 samples, 0.02%)</title><rect x="1101.0" y="1427.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1104.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (64 samples, 0.19%)</title><rect x="1101.3" y="1427.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1104.3" y="1438.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (12 samples, 0.04%)</title><rect x="1102.9" y="1411.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1105.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (77 samples, 0.23%)</title><rect x="1103.6" y="1427.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (12 samples, 0.04%)</title><rect x="1105.9" y="1411.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1108.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (447 samples, 1.35%)</title><rect x="1106.3" y="1427.0" width="16.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1109.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (367 samples, 1.11%)</title><rect x="1108.9" y="1411.0" width="13.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1111.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (313 samples, 0.95%)</title><rect x="1110.5" y="1395.0" width="11.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (23 samples, 0.07%)</title><rect x="1111.7" y="1379.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1114.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (15 samples, 0.05%)</title><rect x="1111.9" y="1363.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.9" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (10 samples, 0.03%)</title><rect x="1112.5" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.5" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (245 samples, 0.74%)</title><rect x="1112.9" y="1379.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.9" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (7 samples, 0.02%)</title><rect x="1121.7" y="1395.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (49 samples, 0.15%)</title><rect x="1122.3" y="1427.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (13 samples, 0.04%)</title><rect x="1123.4" y="1411.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (93 samples, 0.28%)</title><rect x="1124.2" y="1427.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (17 samples, 0.05%)</title><rect x="1125.3" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (43 samples, 0.13%)</title><rect x="1126.0" y="1411.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (10 samples, 0.03%)</title><rect x="1126.5" y="1395.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (15 samples, 0.05%)</title><rect x="1126.8" y="1395.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.8" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (65 samples, 0.20%)</title><rect x="1127.6" y="1427.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (62 samples, 0.19%)</title><rect x="1127.7" y="1411.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.7" y="1422.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (11 samples, 0.03%)</title><rect x="1129.2" y="1395.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.2" y="1406.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (7 samples, 0.02%)</title><rect x="1130.1" y="1427.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.1" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (12 samples, 0.04%)</title><rect x="1130.8" y="1443.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.8" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (227 samples, 0.69%)</title><rect x="1131.3" y="1443.0" width="8.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.3" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (216 samples, 0.65%)</title><rect x="1131.5" y="1427.0" width="7.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1134.5" y="1438.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (25 samples, 0.08%)</title><rect x="1132.7" y="1411.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (11 samples, 0.03%)</title><rect x="1133.0" y="1395.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (9 samples, 0.03%)</title><rect x="1133.1" y="1379.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.1" y="1390.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (9 samples, 0.03%)</title><rect x="1133.1" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.1" y="1374.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (12 samples, 0.04%)</title><rect x="1133.6" y="1411.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1136.6" y="1422.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (7 samples, 0.02%)</title><rect x="1133.7" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.7" y="1406.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (14 samples, 0.04%)</title><rect x="1134.5" y="1411.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (20 samples, 0.06%)</title><rect x="1135.2" y="1411.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (10 samples, 0.03%)</title><rect x="1135.5" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.5" y="1406.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (9 samples, 0.03%)</title><rect x="1135.9" y="1411.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.9" y="1422.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (27 samples, 0.08%)</title><rect x="1136.5" y="1411.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (11 samples, 0.03%)</title><rect x="1136.6" y="1395.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (7 samples, 0.02%)</title><rect x="1136.7" y="1379.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.7" y="1390.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (7 samples, 0.02%)</title><rect x="1136.7" y="1363.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.7" y="1374.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (8 samples, 0.02%)</title><rect x="1137.2" y="1395.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.2" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (41 samples, 0.12%)</title><rect x="1137.5" y="1411.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.5" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (39 samples, 0.12%)</title><rect x="1137.5" y="1395.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.5" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (39 samples, 0.12%)</title><rect x="1137.5" y="1379.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.5" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (39 samples, 0.12%)</title><rect x="1137.5" y="1363.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.5" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (34 samples, 0.10%)</title><rect x="1137.5" y="1347.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.5" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (32 samples, 0.10%)</title><rect x="1137.5" y="1331.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.5" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (31 samples, 0.09%)</title><rect x="1137.5" y="1315.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1140.5" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (29 samples, 0.09%)</title><rect x="1137.5" y="1299.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.5" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (27 samples, 0.08%)</title><rect x="1137.5" y="1283.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.5" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (24 samples, 0.07%)</title><rect x="1137.5" y="1267.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.5" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (21 samples, 0.06%)</title><rect x="1137.5" y="1251.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.5" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (20 samples, 0.06%)</title><rect x="1137.5" y="1235.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.5" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (18 samples, 0.05%)</title><rect x="1137.5" y="1219.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.5" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (18 samples, 0.05%)</title><rect x="1137.5" y="1203.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.5" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (17 samples, 0.05%)</title><rect x="1137.5" y="1187.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.5" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (16 samples, 0.05%)</title><rect x="1137.5" y="1171.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.5" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.04%)</title><rect x="1137.5" y="1155.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1140.5" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.04%)</title><rect x="1137.5" y="1139.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.5" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.04%)</title><rect x="1137.5" y="1123.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.5" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.02%)</title><rect x="1137.5" y="1107.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.5" y="1118.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (51 samples, 0.15%)</title><rect x="1139.5" y="1443.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.5" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (36 samples, 0.11%)</title><rect x="1139.5" y="1427.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (33 samples, 0.10%)</title><rect x="1139.5" y="1411.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.5" y="1422.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (13 samples, 0.04%)</title><rect x="1140.8" y="1427.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.8" y="1438.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (12 samples, 0.04%)</title><rect x="1141.3" y="1443.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.3" y="1454.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (11 samples, 0.03%)</title><rect x="1141.3" y="1427.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.3" y="1438.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (22 samples, 0.07%)</title><rect x="1142.0" y="1459.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.0" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (16 samples, 0.05%)</title><rect x="1142.0" y="1443.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.0" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.04%)</title><rect x="1142.0" y="1427.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.0" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.04%)</title><rect x="1142.0" y="1411.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.0" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.04%)</title><rect x="1142.0" y="1395.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.0" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.04%)</title><rect x="1142.0" y="1379.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1145.0" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.04%)</title><rect x="1142.0" y="1363.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.0" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.04%)</title><rect x="1142.0" y="1347.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.0" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.04%)</title><rect x="1142.0" y="1331.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1145.0" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.04%)</title><rect x="1142.0" y="1315.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1145.0" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.04%)</title><rect x="1142.0" y="1299.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.0" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.04%)</title><rect x="1142.0" y="1283.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.0" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.04%)</title><rect x="1142.0" y="1267.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.0" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.04%)</title><rect x="1142.0" y="1251.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.0" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.03%)</title><rect x="1142.1" y="1235.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.1" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.03%)</title><rect x="1142.1" y="1219.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.03%)</title><rect x="1142.1" y="1203.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.1" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.03%)</title><rect x="1142.1" y="1187.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.1" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.03%)</title><rect x="1142.1" y="1171.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.03%)</title><rect x="1142.1" y="1155.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.1" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.02%)</title><rect x="1142.2" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.2" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.02%)</title><rect x="1142.2" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1142.2" y="1107.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1142.2" y="1091.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1145.2" y="1102.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (11 samples, 0.03%)</title><rect x="1142.8" y="1459.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.8" y="1470.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (10 samples, 0.03%)</title><rect x="1142.8" y="1443.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.8" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (537 samples, 1.63%)</title><rect x="1143.2" y="1459.0" width="19.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.2" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (537 samples, 1.63%)</title><rect x="1143.2" y="1443.0" width="19.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.2" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (535 samples, 1.62%)</title><rect x="1143.2" y="1427.0" width="19.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.2" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (533 samples, 1.61%)</title><rect x="1143.3" y="1411.0" width="19.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1146.3" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (532 samples, 1.61%)</title><rect x="1143.3" y="1395.0" width="19.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.3" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (498 samples, 1.51%)</title><rect x="1143.4" y="1379.0" width="17.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.4" y="1390.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (28 samples, 0.08%)</title><rect x="1143.4" y="1363.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.4" y="1374.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (23 samples, 0.07%)</title><rect x="1143.6" y="1347.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.6" y="1358.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (17 samples, 0.05%)</title><rect x="1143.8" y="1331.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.8" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (17 samples, 0.05%)</title><rect x="1143.8" y="1315.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.8" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (17 samples, 0.05%)</title><rect x="1143.8" y="1299.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.8" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (16 samples, 0.05%)</title><rect x="1143.8" y="1283.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.8" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (14 samples, 0.04%)</title><rect x="1143.8" y="1267.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.8" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (11 samples, 0.03%)</title><rect x="1143.9" y="1251.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.9" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (382 samples, 1.16%)</title><rect x="1144.6" y="1363.0" width="13.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.6" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (382 samples, 1.16%)</title><rect x="1144.6" y="1347.0" width="13.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.6" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (365 samples, 1.10%)</title><rect x="1145.0" y="1331.0" width="13.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.0" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (363 samples, 1.10%)</title><rect x="1145.0" y="1315.0" width="13.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.0" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (360 samples, 1.09%)</title><rect x="1145.1" y="1299.0" width="12.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.1" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (336 samples, 1.02%)</title><rect x="1145.2" y="1283.0" width="12.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="1294.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (26 samples, 0.08%)</title><rect x="1145.2" y="1267.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.2" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (22 samples, 0.07%)</title><rect x="1145.3" y="1251.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.3" y="1262.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (20 samples, 0.06%)</title><rect x="1145.4" y="1235.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.4" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (20 samples, 0.06%)</title><rect x="1145.4" y="1219.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.4" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (20 samples, 0.06%)</title><rect x="1145.4" y="1203.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.4" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (18 samples, 0.05%)</title><rect x="1145.4" y="1187.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.4" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (17 samples, 0.05%)</title><rect x="1145.5" y="1171.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.5" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (13 samples, 0.04%)</title><rect x="1145.6" y="1155.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.6" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (258 samples, 0.78%)</title><rect x="1146.7" y="1267.0" width="9.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.7" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (258 samples, 0.78%)</title><rect x="1146.7" y="1251.0" width="9.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.7" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (243 samples, 0.74%)</title><rect x="1147.0" y="1235.0" width="8.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (243 samples, 0.74%)</title><rect x="1147.0" y="1219.0" width="8.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (242 samples, 0.73%)</title><rect x="1147.0" y="1203.0" width="8.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.0" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (216 samples, 0.65%)</title><rect x="1147.2" y="1187.0" width="7.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.2" y="1198.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (16 samples, 0.05%)</title><rect x="1147.2" y="1171.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.2" y="1182.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (12 samples, 0.04%)</title><rect x="1147.2" y="1155.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.2" y="1166.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (11 samples, 0.03%)</title><rect x="1147.3" y="1139.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.3" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (11 samples, 0.03%)</title><rect x="1147.3" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.3" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (11 samples, 0.03%)</title><rect x="1147.3" y="1107.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.3" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (10 samples, 0.03%)</title><rect x="1147.3" y="1091.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.3" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (7 samples, 0.02%)</title><rect x="1147.4" y="1075.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (177 samples, 0.54%)</title><rect x="1147.8" y="1171.0" width="6.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.8" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (176 samples, 0.53%)</title><rect x="1147.9" y="1155.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (166 samples, 0.50%)</title><rect x="1148.1" y="1139.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (165 samples, 0.50%)</title><rect x="1148.1" y="1123.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (164 samples, 0.50%)</title><rect x="1148.1" y="1107.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (142 samples, 0.43%)</title><rect x="1148.2" y="1091.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.2" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (11 samples, 0.03%)</title><rect x="1148.3" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.3" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (10 samples, 0.03%)</title><rect x="1148.3" y="1059.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.3" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (8 samples, 0.02%)</title><rect x="1148.4" y="1043.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.4" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (112 samples, 0.34%)</title><rect x="1148.7" y="1075.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.7" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (112 samples, 0.34%)</title><rect x="1148.7" y="1059.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (108 samples, 0.33%)</title><rect x="1148.8" y="1043.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (107 samples, 0.32%)</title><rect x="1148.8" y="1027.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (106 samples, 0.32%)</title><rect x="1148.9" y="1011.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (99 samples, 0.30%)</title><rect x="1149.0" y="995.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.0" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (77 samples, 0.23%)</title><rect x="1149.4" y="979.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.4" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (77 samples, 0.23%)</title><rect x="1149.4" y="963.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (72 samples, 0.22%)</title><rect x="1149.5" y="947.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (72 samples, 0.22%)</title><rect x="1149.5" y="931.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (72 samples, 0.22%)</title><rect x="1149.5" y="915.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (61 samples, 0.18%)</title><rect x="1149.5" y="899.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.5" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (8 samples, 0.02%)</title><rect x="1149.5" y="883.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.5" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (44 samples, 0.13%)</title><rect x="1150.0" y="883.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.0" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (44 samples, 0.13%)</title><rect x="1150.0" y="867.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (41 samples, 0.12%)</title><rect x="1150.0" y="851.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (40 samples, 0.12%)</title><rect x="1150.0" y="835.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (39 samples, 0.12%)</title><rect x="1150.0" y="819.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (31 samples, 0.09%)</title><rect x="1150.0" y="803.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.0" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.06%)</title><rect x="1150.2" y="787.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.2" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.06%)</title><rect x="1150.2" y="771.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (19 samples, 0.06%)</title><rect x="1150.3" y="755.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (19 samples, 0.06%)</title><rect x="1150.3" y="739.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.06%)</title><rect x="1150.3" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.04%)</title><rect x="1150.3" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.3" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1150.4" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.02%)</title><rect x="1150.4" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1150.4" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1150.4" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.02%)</title><rect x="1150.4" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.4" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1152.2" y="979.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.2" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1152.2" y="963.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.2" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.02%)</title><rect x="1152.2" y="947.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1152.2" y="931.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1152.2" y="915.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.02%)</title><rect x="1152.2" y="899.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.02%)</title><rect x="1152.2" y="883.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.2" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1152.2" y="867.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.2" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.02%)</title><rect x="1152.2" y="851.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1152.2" y="835.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1152.2" y="819.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.02%)</title><rect x="1152.2" y="803.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.02%)</title><rect x="1152.2" y="787.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.2" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (14 samples, 0.04%)</title><rect x="1152.7" y="1075.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.03%)</title><rect x="1152.7" y="1059.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.7" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.03%)</title><rect x="1152.7" y="1043.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.03%)</title><rect x="1152.7" y="1027.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.03%)</title><rect x="1152.7" y="1011.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.03%)</title><rect x="1152.7" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.03%)</title><rect x="1152.7" y="979.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.7" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.03%)</title><rect x="1152.7" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.7" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.03%)</title><rect x="1152.7" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.02%)</title><rect x="1152.7" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.02%)</title><rect x="1152.7" y="915.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.02%)</title><rect x="1152.7" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.02%)</title><rect x="1152.7" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (13 samples, 0.04%)</title><rect x="1153.3" y="1091.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (7 samples, 0.02%)</title><rect x="1153.5" y="1075.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.5" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (16 samples, 0.05%)</title><rect x="1154.2" y="1171.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.2" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.03%)</title><rect x="1154.2" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.2" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.03%)</title><rect x="1154.2" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.2" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.03%)</title><rect x="1154.2" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.03%)</title><rect x="1154.2" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.03%)</title><rect x="1154.2" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.03%)</title><rect x="1154.2" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.2" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.03%)</title><rect x="1154.2" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.2" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.03%)</title><rect x="1154.2" y="1043.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.2" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.03%)</title><rect x="1154.2" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.03%)</title><rect x="1154.2" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.03%)</title><rect x="1154.2" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.02%)</title><rect x="1154.2" y="979.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (10 samples, 0.03%)</title><rect x="1155.0" y="1187.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.0" y="1198.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (8 samples, 0.02%)</title><rect x="1155.0" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.0" y="1182.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (8 samples, 0.02%)</title><rect x="1155.0" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1158.0" y="1166.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (8 samples, 0.02%)</title><rect x="1155.0" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.0" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (31 samples, 0.09%)</title><rect x="1155.9" y="1267.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.9" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (24 samples, 0.07%)</title><rect x="1155.9" y="1251.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.9" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (24 samples, 0.07%)</title><rect x="1155.9" y="1235.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (24 samples, 0.07%)</title><rect x="1155.9" y="1219.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (24 samples, 0.07%)</title><rect x="1155.9" y="1203.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.9" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (24 samples, 0.07%)</title><rect x="1155.9" y="1187.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (24 samples, 0.07%)</title><rect x="1155.9" y="1171.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.9" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.06%)</title><rect x="1155.9" y="1155.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.9" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.06%)</title><rect x="1155.9" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.06%)</title><rect x="1155.9" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.06%)</title><rect x="1155.9" y="1107.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.06%)</title><rect x="1155.9" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.06%)</title><rect x="1155.9" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.9" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (19 samples, 0.06%)</title><rect x="1156.0" y="1059.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.0" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (19 samples, 0.06%)</title><rect x="1156.0" y="1043.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.05%)</title><rect x="1156.0" y="1027.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 0.05%)</title><rect x="1156.0" y="1011.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 0.05%)</title><rect x="1156.0" y="995.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (16 samples, 0.05%)</title><rect x="1156.0" y="979.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.0" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.04%)</title><rect x="1156.0" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.0" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.04%)</title><rect x="1156.0" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.03%)</title><rect x="1156.1" y="931.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.03%)</title><rect x="1156.1" y="915.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.03%)</title><rect x="1156.1" y="899.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.02%)</title><rect x="1156.1" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.1" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.02%)</title><rect x="1156.1" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.1" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.02%)</title><rect x="1156.1" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1156.1" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1156.1" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.1" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1156.7" y="1251.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1156.7" y="1235.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.02%)</title><rect x="1156.7" y="1219.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1156.7" y="1203.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1156.7" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.02%)</title><rect x="1156.7" y="1171.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.7" y="1182.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (78 samples, 0.24%)</title><rect x="1158.3" y="1363.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.3" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (65 samples, 0.20%)</title><rect x="1158.4" y="1347.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.4" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (65 samples, 0.20%)</title><rect x="1158.4" y="1331.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (64 samples, 0.19%)</title><rect x="1158.4" y="1315.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (64 samples, 0.19%)</title><rect x="1158.4" y="1299.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (64 samples, 0.19%)</title><rect x="1158.4" y="1283.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (64 samples, 0.19%)</title><rect x="1158.4" y="1267.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.4" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (54 samples, 0.16%)</title><rect x="1158.5" y="1251.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (54 samples, 0.16%)</title><rect x="1158.5" y="1235.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (51 samples, 0.15%)</title><rect x="1158.6" y="1219.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (50 samples, 0.15%)</title><rect x="1158.6" y="1203.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (50 samples, 0.15%)</title><rect x="1158.6" y="1187.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (50 samples, 0.15%)</title><rect x="1158.6" y="1171.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.6" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (41 samples, 0.12%)</title><rect x="1158.7" y="1155.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.7" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (41 samples, 0.12%)</title><rect x="1158.7" y="1139.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (40 samples, 0.12%)</title><rect x="1158.8" y="1123.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (40 samples, 0.12%)</title><rect x="1158.8" y="1107.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (40 samples, 0.12%)</title><rect x="1158.8" y="1091.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (32 samples, 0.10%)</title><rect x="1158.8" y="1075.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.8" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.08%)</title><rect x="1158.9" y="1059.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.9" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.08%)</title><rect x="1158.9" y="1043.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.08%)</title><rect x="1158.9" y="1027.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 0.08%)</title><rect x="1158.9" y="1011.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 0.08%)</title><rect x="1158.9" y="995.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 0.06%)</title><rect x="1158.9" y="979.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.9" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.05%)</title><rect x="1159.0" y="963.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.0" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.05%)</title><rect x="1159.0" y="947.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.04%)</title><rect x="1159.0" y="931.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.04%)</title><rect x="1159.0" y="915.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.04%)</title><rect x="1159.0" y="899.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.04%)</title><rect x="1159.0" y="883.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.0" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.03%)</title><rect x="1159.1" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.1" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.03%)</title><rect x="1159.1" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.1" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.02%)</title><rect x="1160.7" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.7" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.02%)</title><rect x="1160.7" y="1331.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.7" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.02%)</title><rect x="1160.7" y="1315.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.02%)</title><rect x="1160.7" y="1299.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.02%)</title><rect x="1160.7" y="1283.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.02%)</title><rect x="1160.7" y="1267.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.02%)</title><rect x="1160.7" y="1251.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.02%)</title><rect x="1160.7" y="1235.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.02%)</title><rect x="1160.7" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.02%)</title><rect x="1160.7" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.02%)</title><rect x="1160.7" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.02%)</title><rect x="1160.7" y="1171.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.02%)</title><rect x="1160.7" y="1155.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.7" y="1166.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (9 samples, 0.03%)</title><rect x="1161.4" y="1379.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (7 samples, 0.02%)</title><rect x="1161.5" y="1363.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.5" y="1374.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (39 samples, 0.12%)</title><rect x="1162.4" y="1459.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.4" y="1470.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (19 samples, 0.06%)</title><rect x="1162.6" y="1443.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.6" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (11 samples, 0.03%)</title><rect x="1163.3" y="1443.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.3" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (11 samples, 0.03%)</title><rect x="1163.8" y="1459.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.8" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (7 samples, 0.02%)</title><rect x="1164.0" y="1443.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.0" y="1454.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (7 samples, 0.02%)</title><rect x="1164.5" y="1491.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.5" y="1502.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (535 samples, 1.62%)</title><rect x="1164.7" y="1491.0" width="19.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.7" y="1502.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (534 samples, 1.62%)</title><rect x="1164.7" y="1475.0" width="19.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.7" y="1486.0"></text>
</g>
<g>
<title>Compilation::compile_method() (532 samples, 1.61%)</title><rect x="1164.7" y="1459.0" width="19.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.7" y="1470.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (490 samples, 1.48%)</title><rect x="1164.7" y="1443.0" width="17.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.7" y="1454.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (229 samples, 0.69%)</title><rect x="1164.7" y="1427.0" width="8.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.7" y="1438.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (21 samples, 0.06%)</title><rect x="1164.8" y="1411.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.8" y="1422.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (15 samples, 0.05%)</title><rect x="1164.8" y="1395.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.8" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (14 samples, 0.04%)</title><rect x="1164.8" y="1379.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.8" y="1390.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (191 samples, 0.58%)</title><rect x="1165.6" y="1411.0" width="6.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (191 samples, 0.58%)</title><rect x="1165.6" y="1395.0" width="6.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.6" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (188 samples, 0.57%)</title><rect x="1165.6" y="1379.0" width="6.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.6" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (176 samples, 0.53%)</title><rect x="1165.9" y="1363.0" width="6.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.9" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (168 samples, 0.51%)</title><rect x="1165.9" y="1347.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.9" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (15 samples, 0.05%)</title><rect x="1166.0" y="1331.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.0" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (10 samples, 0.03%)</title><rect x="1166.2" y="1315.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.2" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (9 samples, 0.03%)</title><rect x="1166.2" y="1299.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.2" y="1310.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (9 samples, 0.03%)</title><rect x="1166.2" y="1283.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.2" y="1294.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (7 samples, 0.02%)</title><rect x="1166.3" y="1267.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.3" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (137 samples, 0.41%)</title><rect x="1166.9" y="1331.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.9" y="1342.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (106 samples, 0.32%)</title><rect x="1167.0" y="1315.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.0" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (103 samples, 0.31%)</title><rect x="1167.1" y="1299.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.1" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (83 samples, 0.25%)</title><rect x="1167.4" y="1283.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.4" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (83 samples, 0.25%)</title><rect x="1167.4" y="1267.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.4" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (12 samples, 0.04%)</title><rect x="1167.4" y="1251.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.4" y="1262.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (7 samples, 0.02%)</title><rect x="1167.5" y="1235.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.5" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (7 samples, 0.02%)</title><rect x="1167.5" y="1219.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.5" y="1230.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (7 samples, 0.02%)</title><rect x="1167.5" y="1203.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.5" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (62 samples, 0.19%)</title><rect x="1167.9" y="1251.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.9" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (50 samples, 0.15%)</title><rect x="1168.0" y="1235.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.0" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (42 samples, 0.13%)</title><rect x="1168.0" y="1219.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.0" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (31 samples, 0.09%)</title><rect x="1168.0" y="1203.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.0" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (31 samples, 0.09%)</title><rect x="1168.0" y="1187.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.0" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (23 samples, 0.07%)</title><rect x="1168.3" y="1171.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.3" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (18 samples, 0.05%)</title><rect x="1168.3" y="1155.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.3" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (17 samples, 0.05%)</title><rect x="1168.3" y="1139.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.3" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (14 samples, 0.04%)</title><rect x="1168.3" y="1123.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.3" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (14 samples, 0.04%)</title><rect x="1168.3" y="1107.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.3" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (13 samples, 0.04%)</title><rect x="1168.3" y="1091.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.3" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (9 samples, 0.03%)</title><rect x="1168.3" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.3" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (9 samples, 0.03%)</title><rect x="1168.3" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.3" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.02%)</title><rect x="1168.3" y="1043.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.3" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.02%)</title><rect x="1168.3" y="1027.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.3" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 0.02%)</title><rect x="1168.4" y="1011.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.4" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.02%)</title><rect x="1168.4" y="995.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.4" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.02%)</title><rect x="1168.4" y="979.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (7 samples, 0.02%)</title><rect x="1168.4" y="963.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.4" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 0.02%)</title><rect x="1168.4" y="947.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.4" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 0.02%)</title><rect x="1168.4" y="931.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.4" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (7 samples, 0.02%)</title><rect x="1169.5" y="1219.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.5" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.02%)</title><rect x="1169.5" y="1203.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.5" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.02%)</title><rect x="1169.5" y="1187.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.5" y="1198.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (9 samples, 0.03%)</title><rect x="1169.8" y="1235.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.8" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.02%)</title><rect x="1169.8" y="1219.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.8" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.02%)</title><rect x="1169.8" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.8" y="1214.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (21 samples, 0.06%)</title><rect x="1170.9" y="1315.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.9" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (21 samples, 0.06%)</title><rect x="1170.9" y="1299.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.9" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (21 samples, 0.06%)</title><rect x="1170.9" y="1283.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.9" y="1294.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (7 samples, 0.02%)</title><rect x="1171.0" y="1267.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.0" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (12 samples, 0.04%)</title><rect x="1171.2" y="1267.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.2" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (9 samples, 0.03%)</title><rect x="1171.4" y="1251.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.4" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (9 samples, 0.03%)</title><rect x="1171.4" y="1235.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.4" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (9 samples, 0.03%)</title><rect x="1171.4" y="1219.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.4" y="1230.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (75 samples, 0.23%)</title><rect x="1172.9" y="1427.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.9" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (40 samples, 0.12%)</title><rect x="1173.1" y="1411.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.1" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (9 samples, 0.03%)</title><rect x="1173.1" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.1" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (9 samples, 0.03%)</title><rect x="1173.5" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.5" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (11 samples, 0.03%)</title><rect x="1174.0" y="1395.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.0" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (25 samples, 0.08%)</title><rect x="1174.6" y="1411.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.6" y="1422.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (12 samples, 0.04%)</title><rect x="1174.7" y="1395.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.7" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (8 samples, 0.02%)</title><rect x="1174.7" y="1379.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.7" y="1390.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (8 samples, 0.02%)</title><rect x="1174.7" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.7" y="1374.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (174 samples, 0.53%)</title><rect x="1175.6" y="1427.0" width="6.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.6" y="1438.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (38 samples, 0.12%)</title><rect x="1175.6" y="1411.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.6" y="1422.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (38 samples, 0.12%)</title><rect x="1175.6" y="1395.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.6" y="1406.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (8 samples, 0.02%)</title><rect x="1175.6" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.6" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (8 samples, 0.02%)</title><rect x="1175.9" y="1379.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.9" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (8 samples, 0.02%)</title><rect x="1175.9" y="1363.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.9" y="1374.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (134 samples, 0.41%)</title><rect x="1177.0" y="1411.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.0" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (35 samples, 0.11%)</title><rect x="1177.1" y="1395.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.1" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (34 samples, 0.10%)</title><rect x="1177.1" y="1379.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.1" y="1390.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (31 samples, 0.09%)</title><rect x="1177.2" y="1363.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.2" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (19 samples, 0.06%)</title><rect x="1177.2" y="1347.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.2" y="1358.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (11 samples, 0.03%)</title><rect x="1177.4" y="1331.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.4" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (7 samples, 0.02%)</title><rect x="1177.9" y="1347.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.9" y="1358.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (35 samples, 0.11%)</title><rect x="1178.3" y="1395.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.3" y="1406.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (31 samples, 0.09%)</title><rect x="1178.4" y="1379.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.4" y="1390.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (7 samples, 0.02%)</title><rect x="1178.8" y="1363.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.8" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (12 samples, 0.04%)</title><rect x="1179.0" y="1363.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.0" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (9 samples, 0.03%)</title><rect x="1179.1" y="1347.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.1" y="1358.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (29 samples, 0.09%)</title><rect x="1179.6" y="1395.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.6" y="1406.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (18 samples, 0.05%)</title><rect x="1180.6" y="1395.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.6" y="1406.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (7 samples, 0.02%)</title><rect x="1181.0" y="1379.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.0" y="1390.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (8 samples, 0.02%)</title><rect x="1182.0" y="1427.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.0" y="1438.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (8 samples, 0.02%)</title><rect x="1182.0" y="1411.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.0" y="1422.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (37 samples, 0.11%)</title><rect x="1182.4" y="1443.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.4" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (34 samples, 0.10%)</title><rect x="1182.5" y="1427.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.5" y="1438.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (8 samples, 0.02%)</title><rect x="1182.5" y="1411.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.5" y="1422.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (13 samples, 0.04%)</title><rect x="1183.2" y="1411.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.2" y="1422.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (12 samples, 0.04%)</title><rect x="1183.9" y="1491.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (9 samples, 0.03%)</title><rect x="1184.0" y="1475.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="1486.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (8 samples, 0.02%)</title><rect x="1184.3" y="1491.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.3" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (8 samples, 0.02%)</title><rect x="1184.3" y="1475.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.3" y="1486.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (8 samples, 0.02%)</title><rect x="1184.3" y="1459.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.3" y="1470.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (7 samples, 0.02%)</title><rect x="1184.3" y="1443.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="1454.0"></text>
</g>
<g>
<title>CompileQueue::get() (8 samples, 0.02%)</title><rect x="1184.8" y="1507.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (20 samples, 0.06%)</title><rect x="1185.3" y="1523.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (16 samples, 0.05%)</title><rect x="1185.5" y="1507.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (16 samples, 0.05%)</title><rect x="1185.5" y="1491.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="1502.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (16 samples, 0.05%)</title><rect x="1185.5" y="1475.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.5" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (11 samples, 0.03%)</title><rect x="1185.5" y="1459.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.5" y="1470.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (54 samples, 0.16%)</title><rect x="1186.0" y="1523.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (49 samples, 0.15%)</title><rect x="1186.0" y="1507.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (37 samples, 0.11%)</title><rect x="1186.1" y="1491.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.1" y="1502.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (31 samples, 0.09%)</title><rect x="1186.2" y="1475.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1189.2" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (12 samples, 0.04%)</title><rect x="1186.5" y="1459.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (7 samples, 0.02%)</title><rect x="1186.6" y="1443.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.6" y="1454.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (9 samples, 0.03%)</title><rect x="1187.0" y="1459.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.0" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (7 samples, 0.02%)</title><rect x="1187.1" y="1443.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="1454.0"></text>
</g>
<g>
<title>Profiler::addJavaMethod(void const*, int, _jmethodID*) (10 samples, 0.03%)</title><rect x="1187.4" y="1491.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="1502.0"></text>
</g>
<g>
<title>VMThread::run() (48 samples, 0.15%)</title><rect x="1188.0" y="1555.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="1566.0"></text>
</g>
<g>
<title>VMThread::loop() (48 samples, 0.15%)</title><rect x="1188.0" y="1539.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.0" y="1550.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (15 samples, 0.05%)</title><rect x="1188.0" y="1523.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.0" y="1534.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (9 samples, 0.03%)</title><rect x="1188.5" y="1523.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.5" y="1534.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (9 samples, 0.03%)</title><rect x="1188.5" y="1507.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="1518.0"></text>
</g>
<g>
<title>__sched_yield (23 samples, 0.07%)</title><rect x="1188.9" y="1523.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1191.9" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.05%)</title><rect x="1189.1" y="1507.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.1" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.04%)</title><rect x="1189.1" y="1491.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.1" y="1502.0"></text>
</g>
<g>
<title>sys_sched_yield (10 samples, 0.03%)</title><rect x="1189.3" y="1475.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.3" y="1486.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.03%)</title><rect x="1189.3" y="1459.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.3" y="1470.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.03%)</title><rect x="1189.3" y="1443.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.3" y="1454.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.02%)</title><rect x="1189.7" y="1555.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="1566.0"></text>
</g>
</g>
</svg>
