<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (1,699 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="10.0" y="1603.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.06%)</title><rect x="10.7" y="1603.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="1614.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="10.7" y="1587.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="1598.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.06%)</title><rect x="10.7" y="1571.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="1582.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="11.4" y="1603.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.4" y="1614.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.12%)</title><rect x="11.4" y="1587.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.4" y="1598.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.12%)</title><rect x="11.4" y="1571.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="1582.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.12%)</title><rect x="11.4" y="1555.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.4" y="1566.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.12%)</title><rect x="11.4" y="1539.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.4" y="1550.0"></text>
</g>
<g>
<title>[deoptimization] (2 samples, 0.12%)</title><rect x="12.8" y="1603.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.8" y="1614.0"></text>
</g>
<g>
<title>Deoptimization::unpack_frames(JavaThread*, int) (1 samples, 0.06%)</title><rect x="12.8" y="1587.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.8" y="1598.0"></text>
</g>
<g>
<title>vframeArray::unpack_to_stack(frame&amp;, int, int) (1 samples, 0.06%)</title><rect x="12.8" y="1571.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.8" y="1582.0"></text>
</g>
<g>
<title>vframeArrayElement::unpack_on_stack(int, int, int, frame*, bool, bool, int) (1 samples, 0.06%)</title><rect x="12.8" y="1555.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.8" y="1566.0"></text>
</g>
<g>
<title>AbstractInterpreter::deopt_continue_after_entry(Method*, unsigned char*, int, bool) (1 samples, 0.06%)</title><rect x="12.8" y="1539.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.8" y="1550.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.06%)</title><rect x="13.5" y="1587.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.5" y="1598.0"></text>
</g>
<g>
<title>_IO_vfprintf (1 samples, 0.06%)</title><rect x="13.5" y="1571.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.5" y="1582.0"></text>
</g>
<g>
<title>[not_walkable_Java] (39 samples, 2.30%)</title><rect x="14.2" y="1603.0" width="27.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.2" y="1614.0">[..</text>
</g>
<g>
<title>[unknown] (39 samples, 2.30%)</title><rect x="14.2" y="1587.0" width="27.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="17.2" y="1598.0">[..</text>
</g>
<g>
<title>__clock_gettime (39 samples, 2.30%)</title><rect x="14.2" y="1571.0" width="27.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="17.2" y="1582.0">_..</text>
</g>
<g>
<title>__vdso_clock_gettime (39 samples, 2.30%)</title><rect x="14.2" y="1555.0" width="27.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="17.2" y="1566.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.12%)</title><rect x="28.1" y="1539.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.1" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.94%)</title><rect x="28.1" y="1523.0" width="11.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.1" y="1534.0"></text>
</g>
<g>
<title>sys_clock_gettime (8 samples, 0.47%)</title><rect x="33.6" y="1507.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.6" y="1518.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (8 samples, 0.47%)</title><rect x="33.6" y="1491.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.6" y="1502.0"></text>
</g>
<g>
<title>ktime_get_ts64 (6 samples, 0.35%)</title><rect x="33.6" y="1475.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="36.6" y="1486.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (5 samples, 0.29%)</title><rect x="34.3" y="1459.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.3" y="1470.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.29%)</title><rect x="34.3" y="1443.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.3" y="1454.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (2 samples, 0.12%)</title><rect x="37.8" y="1475.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="40.8" y="1486.0"></text>
</g>
<g>
<title>sys_clock_gettime (3 samples, 0.18%)</title><rect x="39.2" y="1523.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="42.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.24%)</title><rect x="41.3" y="1603.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="44.3" y="1614.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="41.3" y="1587.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="44.3" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="41.9" y="1587.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.9" y="1598.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="41.9" y="1571.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="44.9" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="41.9" y="1555.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.9" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="41.9" y="1539.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.9" y="1550.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.06%)</title><rect x="41.9" y="1523.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.9" y="1534.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.06%)</title><rect x="41.9" y="1507.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="44.9" y="1518.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.06%)</title><rect x="41.9" y="1491.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.9" y="1502.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (1 samples, 0.06%)</title><rect x="41.9" y="1475.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="44.9" y="1486.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.06%)</title><rect x="41.9" y="1459.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.9" y="1470.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.06%)</title><rect x="42.6" y="1587.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="45.6" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="42.6" y="1571.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="45.6" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="42.6" y="1555.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.6" y="1566.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="42.6" y="1539.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.6" y="1550.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="42.6" y="1523.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="45.6" y="1534.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="42.6" y="1507.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.6" y="1518.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="42.6" y="1491.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="45.6" y="1502.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="42.6" y="1475.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.6" y="1486.0"></text>
</g>
<g>
<title>open64 (1 samples, 0.06%)</title><rect x="43.3" y="1587.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="46.3" y="1598.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="43.3" y="1571.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.3" y="1582.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="43.3" y="1555.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="46.3" y="1566.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="43.3" y="1539.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.3" y="1550.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="43.3" y="1523.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.3" y="1534.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="43.3" y="1507.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="46.3" y="1518.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="43.3" y="1491.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.3" y="1502.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="43.3" y="1475.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.3" y="1486.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="43.3" y="1459.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.3" y="1470.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="43.3" y="1443.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.3" y="1454.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="43.3" y="1427.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.3" y="1438.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="43.3" y="1411.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.3" y="1422.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="43.3" y="1395.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="46.3" y="1406.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="43.3" y="1379.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.3" y="1390.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="43.3" y="1363.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.3" y="1374.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="43.3" y="1347.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.3" y="1358.0"></text>
</g>
<g>
<title>tcp_check_req (1 samples, 0.06%)</title><rect x="43.3" y="1331.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.3" y="1342.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (1 samples, 0.06%)</title><rect x="43.3" y="1315.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.3" y="1326.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (1 samples, 0.06%)</title><rect x="43.3" y="1299.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.3" y="1310.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (1 samples, 0.06%)</title><rect x="43.3" y="1283.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.3" y="1294.0"></text>
</g>
<g>
<title>inet_csk_clone_lock (1 samples, 0.06%)</title><rect x="43.3" y="1267.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.3" y="1278.0"></text>
</g>
<g>
<title>sk_clone_lock (1 samples, 0.06%)</title><rect x="43.3" y="1251.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.3" y="1262.0"></text>
</g>
<g>
<title>sk_prot_alloc (1 samples, 0.06%)</title><rect x="43.3" y="1235.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.3" y="1246.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="43.3" y="1219.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.3" y="1230.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="43.3" y="1203.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.3" y="1214.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.29%)</title><rect x="44.0" y="1603.0" width="3.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="47.0" y="1614.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.06%)</title><rect x="44.0" y="1587.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="47.0" y="1598.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="44.7" y="1587.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="47.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="44.7" y="1571.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="47.7" y="1582.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="44.7" y="1555.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="47.7" y="1566.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="45.4" y="1571.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="48.4" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="46.1" y="1555.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="49.1" y="1566.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.06%)</title><rect x="46.8" y="1587.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.8" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="47.5" y="1603.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="50.5" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="48.2" y="1603.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.2" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (1 samples, 0.06%)</title><rect x="48.2" y="1587.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.2" y="1598.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="48.2" y="1571.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.2" y="1582.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="48.2" y="1555.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.2" y="1566.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource.shape (1 samples, 0.06%)</title><rect x="48.2" y="1539.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.2" y="1550.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (1 samples, 0.06%)</title><rect x="48.9" y="1603.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.9" y="1614.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.setAccessible (1 samples, 0.06%)</title><rect x="48.9" y="1587.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.9" y="1598.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.checkCanSetAccessible (1 samples, 0.06%)</title><rect x="48.9" y="1571.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.9" y="1582.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkCanSetAccessible (1 samples, 0.06%)</title><rect x="48.9" y="1555.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.9" y="1566.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (1 samples, 0.06%)</title><rect x="48.9" y="1539.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.9" y="1550.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.06%)</title><rect x="48.9" y="1523.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="51.9" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (2 samples, 0.12%)</title><rect x="49.6" y="1603.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.6" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.12%)</title><rect x="49.6" y="1587.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.6" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="49.6" y="1571.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.6" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="49.6" y="1555.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="49.6" y="1539.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.6" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="49.6" y="1523.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.6" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="49.6" y="1507.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="52.6" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="49.6" y="1491.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.6" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="49.6" y="1475.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="52.6" y="1486.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="49.6" y="1459.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.6" y="1470.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="49.6" y="1443.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.6" y="1454.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="49.6" y="1427.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="52.6" y="1438.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="49.6" y="1411.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="50.3" y="1571.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.3" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="50.3" y="1555.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.3" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="50.3" y="1539.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.3" y="1550.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="50.3" y="1523.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.3" y="1534.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="50.3" y="1507.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="53.3" y="1518.0"></text>
</g>
<g>
<title>free (1 samples, 0.06%)</title><rect x="51.0" y="1603.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="54.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/Thread.run (168 samples, 9.89%)</title><rect x="51.7" y="1603.0" width="116.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.7" y="1614.0">java/lang/Thre..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (26 samples, 1.53%)</title><rect x="51.7" y="1587.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.7" y="1598.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (26 samples, 1.53%)</title><rect x="51.7" y="1571.0" width="18.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.7" y="1582.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (4 samples, 0.24%)</title><rect x="51.7" y="1555.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.7" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (8 samples, 0.47%)</title><rect x="54.4" y="1555.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.4" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (6 samples, 0.35%)</title><rect x="55.8" y="1539.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.8" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.06%)</title><rect x="55.8" y="1523.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.8" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="55.8" y="1507.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.8" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="55.8" y="1491.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.8" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.06%)</title><rect x="55.8" y="1475.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.06%)</title><rect x="55.8" y="1459.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.8" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="55.8" y="1443.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.8" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="55.8" y="1427.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.8" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="55.8" y="1411.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.8" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="55.8" y="1395.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="55.8" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="55.8" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="55.8" y="1347.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="55.8" y="1331.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.06%)</title><rect x="55.8" y="1315.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="55.8" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.8" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (5 samples, 0.29%)</title><rect x="56.5" y="1523.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.5" y="1534.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$7.run (5 samples, 0.29%)</title><rect x="56.5" y="1507.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.5" y="1518.0"></text>
</g>
<g>
<title>akka/pattern/PromiseActorRef$$$Lambda$144/1747053097.apply$mcV$sp (5 samples, 0.29%)</title><rect x="56.5" y="1491.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.5" y="1502.0"></text>
</g>
<g>
<title>akka/pattern/PromiseActorRef$.$anonfun$apply$1 (5 samples, 0.29%)</title><rect x="56.5" y="1475.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.5" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (5 samples, 0.29%)</title><rect x="56.5" y="1459.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.5" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (5 samples, 0.29%)</title><rect x="56.5" y="1443.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.5" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (5 samples, 0.29%)</title><rect x="56.5" y="1427.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.5" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (5 samples, 0.29%)</title><rect x="56.5" y="1411.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.5" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (5 samples, 0.29%)</title><rect x="56.5" y="1395.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.5" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (5 samples, 0.29%)</title><rect x="56.5" y="1379.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (5 samples, 0.29%)</title><rect x="56.5" y="1363.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.5" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (5 samples, 0.29%)</title><rect x="56.5" y="1347.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (5 samples, 0.29%)</title><rect x="56.5" y="1331.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.5" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="56.5" y="1315.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.29%)</title><rect x="56.5" y="1299.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="56.5" y="1283.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.5" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.29%)</title><rect x="56.5" y="1267.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.29%)</title><rect x="56.5" y="1251.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.29%)</title><rect x="56.5" y="1235.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.29%)</title><rect x="56.5" y="1219.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.29%)</title><rect x="56.5" y="1203.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.29%)</title><rect x="56.5" y="1187.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.24%)</title><rect x="57.2" y="1171.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.2" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="57.2" y="1155.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="60.2" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="57.2" y="1139.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.2" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="57.2" y="1123.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="60.2" y="1134.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.24%)</title><rect x="57.2" y="1107.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.2" y="1118.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="57.2" y="1091.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.2" y="1102.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (1 samples, 0.06%)</title><rect x="57.2" y="1075.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="60.2" y="1086.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.18%)</title><rect x="57.9" y="1075.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.9" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.18%)</title><rect x="57.9" y="1059.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.9" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.18%)</title><rect x="57.9" y="1043.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.9" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="57.9" y="1027.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.9" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (14 samples, 0.82%)</title><rect x="60.0" y="1555.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.0" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (14 samples, 0.82%)</title><rect x="60.0" y="1539.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.0" y="1550.0"></text>
</g>
<g>
<title>JVM_Sleep (2 samples, 0.12%)</title><rect x="60.0" y="1523.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="63.0" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.06%)</title><rect x="60.0" y="1507.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="63.0" y="1518.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.06%)</title><rect x="60.7" y="1507.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="63.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.47%)</title><rect x="61.4" y="1523.0" width="5.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="64.4" y="1534.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.47%)</title><rect x="61.4" y="1507.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="64.4" y="1518.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (8 samples, 0.47%)</title><rect x="61.4" y="1491.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="64.4" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="63.5" y="1475.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="66.5" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="63.5" y="1459.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.5" y="1470.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.06%)</title><rect x="64.9" y="1443.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="67.9" y="1454.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.06%)</title><rect x="64.9" y="1427.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="67.9" y="1438.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.06%)</title><rect x="64.9" y="1411.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.9" y="1422.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (1 samples, 0.06%)</title><rect x="64.9" y="1395.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.9" y="1406.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.06%)</title><rect x="64.9" y="1379.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="67.9" y="1390.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.06%)</title><rect x="65.6" y="1459.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.6" y="1470.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="66.3" y="1475.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.3" y="1486.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="66.3" y="1459.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="69.3" y="1470.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="66.3" y="1443.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="69.3" y="1454.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="66.3" y="1427.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.3" y="1438.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="66.3" y="1411.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.3" y="1422.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="66.3" y="1395.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.3" y="1406.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="66.3" y="1379.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="69.3" y="1390.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="66.3" y="1363.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="69.3" y="1374.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="66.3" y="1347.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.3" y="1358.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="66.3" y="1331.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.3" y="1342.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="66.3" y="1315.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="69.3" y="1326.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="66.3" y="1299.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="69.3" y="1310.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="66.3" y="1283.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.3" y="1294.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="66.3" y="1267.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.3" y="1278.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="66.3" y="1251.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.3" y="1262.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="66.3" y="1235.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.3" y="1246.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="66.3" y="1219.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.3" y="1230.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.06%)</title><rect x="66.3" y="1203.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="69.3" y="1214.0"></text>
</g>
<g>
<title>tcp_drop (1 samples, 0.06%)</title><rect x="66.3" y="1187.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.3" y="1198.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="66.3" y="1171.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.3" y="1182.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="66.3" y="1155.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="69.3" y="1166.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="66.3" y="1139.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="69.3" y="1150.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="66.3" y="1123.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="69.3" y="1134.0"></text>
</g>
<g>
<title>page_frag_free (1 samples, 0.06%)</title><rect x="66.3" y="1107.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.24%)</title><rect x="67.0" y="1523.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="70.0" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="67.0" y="1507.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.0" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="67.0" y="1491.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.0" y="1502.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.24%)</title><rect x="67.0" y="1475.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.0" y="1486.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="67.0" y="1459.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="70.0" y="1470.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.24%)</title><rect x="67.0" y="1443.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.0" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.12%)</title><rect x="67.0" y="1427.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="70.0" y="1438.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.12%)</title><rect x="67.0" y="1411.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.0" y="1422.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="67.0" y="1395.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.0" y="1406.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.12%)</title><rect x="68.3" y="1427.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.3" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.12%)</title><rect x="68.3" y="1411.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="71.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (142 samples, 8.36%)</title><rect x="69.7" y="1587.0" width="98.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.7" y="1598.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (142 samples, 8.36%)</title><rect x="69.7" y="1571.0" width="98.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.7" y="1582.0">java/util/co..</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (18 samples, 1.06%)</title><rect x="70.4" y="1555.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.4" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (18 samples, 1.06%)</title><rect x="70.4" y="1539.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.4" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (18 samples, 1.06%)</title><rect x="70.4" y="1523.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.4" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (18 samples, 1.06%)</title><rect x="70.4" y="1507.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.4" y="1518.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (18 samples, 1.06%)</title><rect x="70.4" y="1491.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.4" y="1502.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (18 samples, 1.06%)</title><rect x="70.4" y="1475.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.4" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (18 samples, 1.06%)</title><rect x="70.4" y="1459.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.4" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (18 samples, 1.06%)</title><rect x="70.4" y="1443.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.4" y="1454.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.cached (1 samples, 0.06%)</title><rect x="70.4" y="1427.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.4" y="1438.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.get (1 samples, 0.06%)</title><rect x="70.4" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.4" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.06%)</title><rect x="70.4" y="1395.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.4" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="70.4" y="1379.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.4" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="70.4" y="1363.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.4" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="70.4" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.4" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="70.4" y="1331.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.4" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="70.4" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.4" y="1326.0"></text>
</g>
<g>
<title>scala/Tuple2.equals (1 samples, 0.06%)</title><rect x="70.4" y="1299.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.4" y="1310.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 1.00%)</title><rect x="71.1" y="1427.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.1" y="1438.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 1.00%)</title><rect x="71.1" y="1411.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.1" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (17 samples, 1.00%)</title><rect x="71.1" y="1395.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.1" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (16 samples, 0.94%)</title><rect x="71.1" y="1379.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.1" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (15 samples, 0.88%)</title><rect x="71.1" y="1363.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.1" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (15 samples, 0.88%)</title><rect x="71.1" y="1347.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.1" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (15 samples, 0.88%)</title><rect x="71.1" y="1331.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.1" y="1342.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (2 samples, 0.12%)</title><rect x="71.1" y="1315.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="74.1" y="1326.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.06%)</title><rect x="71.1" y="1299.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="74.1" y="1310.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="71.1" y="1283.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="74.1" y="1294.0"></text>
</g>
<g>
<title>setInetAddress_hostName (1 samples, 0.06%)</title><rect x="71.8" y="1299.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="74.8" y="1310.0"></text>
</g>
<g>
<title>jni_SetObjectField (1 samples, 0.06%)</title><rect x="71.8" y="1283.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="74.8" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 802934ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.06%)</title><rect x="71.8" y="1267.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="74.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.41%)</title><rect x="72.5" y="1315.0" width="4.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="75.5" y="1326.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libnss_files-2.27.so (1 samples, 0.06%)</title><rect x="72.5" y="1299.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="75.5" y="1310.0"></text>
</g>
<g>
<title>__sendmmsg (6 samples, 0.35%)</title><rect x="73.2" y="1299.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="76.2" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="73.9" y="1283.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.9" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="73.9" y="1267.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.9" y="1278.0"></text>
</g>
<g>
<title>sys_sendmmsg (5 samples, 0.29%)</title><rect x="73.9" y="1251.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.9" y="1262.0"></text>
</g>
<g>
<title>__sys_sendmmsg (5 samples, 0.29%)</title><rect x="73.9" y="1235.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.9" y="1246.0"></text>
</g>
<g>
<title>___sys_sendmsg (5 samples, 0.29%)</title><rect x="73.9" y="1219.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.9" y="1230.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 0.29%)</title><rect x="73.9" y="1203.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="76.9" y="1214.0"></text>
</g>
<g>
<title>inet_sendmsg (5 samples, 0.29%)</title><rect x="73.9" y="1187.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.9" y="1198.0"></text>
</g>
<g>
<title>udp_sendmsg (5 samples, 0.29%)</title><rect x="73.9" y="1171.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.9" y="1182.0"></text>
</g>
<g>
<title>udp_send_skb (5 samples, 0.29%)</title><rect x="73.9" y="1155.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.9" y="1166.0"></text>
</g>
<g>
<title>ip_send_skb (5 samples, 0.29%)</title><rect x="73.9" y="1139.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.9" y="1150.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.29%)</title><rect x="73.9" y="1123.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="1134.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.29%)</title><rect x="73.9" y="1107.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.9" y="1118.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.29%)</title><rect x="73.9" y="1091.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.9" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.29%)</title><rect x="73.9" y="1075.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="1086.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.24%)</title><rect x="73.9" y="1059.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.9" y="1070.0"></text>
</g>
<g>
<title>do_softirq.part.17 (4 samples, 0.24%)</title><rect x="73.9" y="1043.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.9" y="1054.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.24%)</title><rect x="73.9" y="1027.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.9" y="1038.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.24%)</title><rect x="73.9" y="1011.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.9" y="1022.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.24%)</title><rect x="73.9" y="995.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="76.9" y="1006.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.24%)</title><rect x="73.9" y="979.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.9" y="990.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.24%)</title><rect x="73.9" y="963.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.9" y="974.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.24%)</title><rect x="73.9" y="947.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.9" y="958.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.24%)</title><rect x="73.9" y="931.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.9" y="942.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.24%)</title><rect x="73.9" y="915.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.9" y="926.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.24%)</title><rect x="73.9" y="899.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.9" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.24%)</title><rect x="73.9" y="883.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.9" y="894.0"></text>
</g>
<g>
<title>udp_rcv (4 samples, 0.24%)</title><rect x="73.9" y="867.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.9" y="878.0"></text>
</g>
<g>
<title>__udp4_lib_rcv (4 samples, 0.24%)</title><rect x="73.9" y="851.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="76.9" y="862.0"></text>
</g>
<g>
<title>udp_unicast_rcv_skb (3 samples, 0.18%)</title><rect x="74.6" y="835.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="77.6" y="846.0"></text>
</g>
<g>
<title>udp_queue_rcv_skb (3 samples, 0.18%)</title><rect x="74.6" y="819.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="77.6" y="830.0"></text>
</g>
<g>
<title>__udp_enqueue_schedule_skb (3 samples, 0.18%)</title><rect x="74.6" y="803.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.6" y="814.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.18%)</title><rect x="74.6" y="787.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.6" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.18%)</title><rect x="74.6" y="771.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.6" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.18%)</title><rect x="74.6" y="755.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="74.6" y="739.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.6" y="750.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="76.7" y="1059.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.7" y="1070.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="76.7" y="1043.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.7" y="1054.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="76.7" y="1027.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.7" y="1038.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.06%)</title><rect x="76.7" y="1011.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.7" y="1022.0"></text>
</g>
<g>
<title>__close_nocancel (1 samples, 0.06%)</title><rect x="77.4" y="1315.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="80.4" y="1326.0"></text>
</g>
<g>
<title>poll (3 samples, 0.18%)</title><rect x="78.1" y="1315.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="81.1" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="78.1" y="1299.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="81.1" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="78.1" y="1283.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.1" y="1294.0"></text>
</g>
<g>
<title>sys_poll (3 samples, 0.18%)</title><rect x="78.1" y="1267.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.1" y="1278.0"></text>
</g>
<g>
<title>do_sys_poll (3 samples, 0.18%)</title><rect x="78.1" y="1251.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.1" y="1262.0"></text>
</g>
<g>
<title>poll_schedule_timeout (1 samples, 0.06%)</title><rect x="78.8" y="1235.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.8" y="1246.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.06%)</title><rect x="78.8" y="1219.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.8" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="78.8" y="1203.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.8" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="78.8" y="1187.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.8" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="78.8" y="1171.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.8" y="1182.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.06%)</title><rect x="79.5" y="1235.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.5" y="1246.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.06%)</title><rect x="79.5" y="1219.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="82.5" y="1230.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (1 samples, 0.06%)</title><rect x="79.5" y="1203.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="82.5" y="1214.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.06%)</title><rect x="79.5" y="1187.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.5" y="1198.0"></text>
</g>
<g>
<title>socket (2 samples, 0.12%)</title><rect x="80.1" y="1315.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="83.1" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="80.1" y="1299.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.1" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="80.1" y="1283.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.1" y="1294.0"></text>
</g>
<g>
<title>sys_socket (2 samples, 0.12%)</title><rect x="80.1" y="1267.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.1" y="1278.0"></text>
</g>
<g>
<title>__sock_create (1 samples, 0.06%)</title><rect x="80.1" y="1251.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.1" y="1262.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.06%)</title><rect x="80.1" y="1235.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.1" y="1246.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.06%)</title><rect x="80.1" y="1219.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.1" y="1230.0"></text>
</g>
<g>
<title>alloc_inode (1 samples, 0.06%)</title><rect x="80.1" y="1203.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.1" y="1214.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.06%)</title><rect x="80.1" y="1187.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.1" y="1198.0"></text>
</g>
<g>
<title>security_inode_alloc (1 samples, 0.06%)</title><rect x="80.1" y="1171.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.1" y="1182.0"></text>
</g>
<g>
<title>sock_map_fd (1 samples, 0.06%)</title><rect x="80.8" y="1251.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.8" y="1262.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.06%)</title><rect x="80.8" y="1235.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.8" y="1246.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.06%)</title><rect x="80.8" y="1219.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.8" y="1230.0"></text>
</g>
<g>
<title>get_empty_filp (1 samples, 0.06%)</title><rect x="80.8" y="1203.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.8" y="1214.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="80.8" y="1187.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.8" y="1198.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.06%)</title><rect x="80.8" y="1171.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="81.5" y="1363.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="82.2" y="1379.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="82.2" y="1363.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.06%)</title><rect x="82.2" y="1347.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.06%)</title><rect x="82.2" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.2" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (97 samples, 5.71%)</title><rect x="82.9" y="1555.0" width="67.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.9" y="1566.0">akka/di..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (97 samples, 5.71%)</title><rect x="82.9" y="1539.0" width="67.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.9" y="1550.0">akka/ut..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (97 samples, 5.71%)</title><rect x="82.9" y="1523.0" width="67.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.9" y="1534.0">akka/ut..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (78 samples, 4.59%)</title><rect x="83.6" y="1507.0" width="54.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.6" y="1518.0">akka/..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (77 samples, 4.53%)</title><rect x="84.3" y="1491.0" width="53.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.3" y="1502.0">akka/..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (77 samples, 4.53%)</title><rect x="84.3" y="1475.0" width="53.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.3" y="1486.0">akka/..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (23 samples, 1.35%)</title><rect x="84.3" y="1459.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (23 samples, 1.35%)</title><rect x="84.3" y="1443.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (23 samples, 1.35%)</title><rect x="84.3" y="1427.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (23 samples, 1.35%)</title><rect x="84.3" y="1411.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (23 samples, 1.35%)</title><rect x="84.3" y="1395.0" width="16.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (23 samples, 1.35%)</title><rect x="84.3" y="1379.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (23 samples, 1.35%)</title><rect x="84.3" y="1363.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.3" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (23 samples, 1.35%)</title><rect x="84.3" y="1347.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (2 samples, 0.12%)</title><rect x="84.3" y="1331.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (2 samples, 0.12%)</title><rect x="84.3" y="1315.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (21 samples, 1.24%)</title><rect x="85.7" y="1331.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.7" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (21 samples, 1.24%)</title><rect x="85.7" y="1315.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (21 samples, 1.24%)</title><rect x="85.7" y="1299.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (21 samples, 1.24%)</title><rect x="85.7" y="1283.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (21 samples, 1.24%)</title><rect x="85.7" y="1267.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 1.24%)</title><rect x="85.7" y="1251.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (21 samples, 1.24%)</title><rect x="85.7" y="1235.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (20 samples, 1.18%)</title><rect x="86.4" y="1219.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (20 samples, 1.18%)</title><rect x="86.4" y="1203.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 1.18%)</title><rect x="86.4" y="1187.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 1.12%)</title><rect x="87.1" y="1171.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.1" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.12%)</title><rect x="87.8" y="1155.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="90.8" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="87.8" y="1139.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="90.8" y="1150.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="88.5" y="1139.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.5" y="1150.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="88.5" y="1123.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.5" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="88.5" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.5" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="88.5" y="1091.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="91.5" y="1102.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="88.5" y="1075.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.5" y="1086.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="88.5" y="1059.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.5" y="1070.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="88.5" y="1043.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.5" y="1054.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="88.5" y="1027.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.5" y="1038.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="88.5" y="1011.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.5" y="1022.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="88.5" y="995.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.5" y="1006.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="88.5" y="979.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.5" y="990.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="88.5" y="963.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.5" y="974.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="88.5" y="947.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.5" y="958.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="88.5" y="931.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.5" y="942.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="88.5" y="915.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.5" y="926.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="88.5" y="899.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.5" y="910.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.06%)</title><rect x="88.5" y="883.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.5" y="894.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.06%)</title><rect x="88.5" y="867.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.5" y="878.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (1 samples, 0.06%)</title><rect x="88.5" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.5" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="88.5" y="835.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.5" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="88.5" y="819.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="91.5" y="830.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="88.5" y="803.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.5" y="814.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="88.5" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.5" y="798.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="88.5" y="771.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="91.5" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="88.5" y="755.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.5" y="766.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="88.5" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.5" y="750.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="88.5" y="723.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.5" y="734.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.06%)</title><rect x="88.5" y="707.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.5" y="718.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="88.5" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.5" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="89.2" y="1155.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="92.2" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (15 samples, 0.88%)</title><rect x="89.9" y="1155.0" width="10.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="92.9" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.77%)</title><rect x="91.3" y="1139.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.3" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.77%)</title><rect x="91.3" y="1123.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="94.3" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="91.3" y="1107.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.3" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="91.3" y="1091.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.3" y="1102.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="91.3" y="1075.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.3" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="91.3" y="1059.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.3" y="1070.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.71%)</title><rect x="92.0" y="1107.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.0" y="1118.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.71%)</title><rect x="92.0" y="1091.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.0" y="1102.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.71%)</title><rect x="92.0" y="1075.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.0" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.71%)</title><rect x="92.0" y="1059.0" width="8.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="95.0" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.71%)</title><rect x="92.0" y="1043.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="95.0" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.71%)</title><rect x="92.0" y="1027.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="100.3" y="1459.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.3" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.06%)</title><rect x="100.3" y="1443.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.3" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (53 samples, 3.12%)</title><rect x="101.0" y="1459.0" width="36.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.0" y="1470.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (53 samples, 3.12%)</title><rect x="101.0" y="1443.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.0" y="1454.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (52 samples, 3.06%)</title><rect x="101.7" y="1427.0" width="36.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.7" y="1438.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (18 samples, 1.06%)</title><rect x="102.4" y="1411.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.94%)</title><rect x="103.8" y="1395.0" width="11.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="106.8" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 0.94%)</title><rect x="103.8" y="1379.0" width="11.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="106.8" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.77%)</title><rect x="105.8" y="1363.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="108.8" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.77%)</title><rect x="105.8" y="1347.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="108.8" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (12 samples, 0.71%)</title><rect x="106.5" y="1331.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="109.5" y="1342.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="106.5" y="1315.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="109.5" y="1326.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="106.5" y="1299.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="109.5" y="1310.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="106.5" y="1283.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.5" y="1294.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.65%)</title><rect x="107.2" y="1315.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.2" y="1326.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (1 samples, 0.06%)</title><rect x="107.9" y="1299.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.9" y="1310.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="107.9" y="1283.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.9" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.06%)</title><rect x="107.9" y="1267.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.9" y="1278.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="107.9" y="1251.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.9" y="1262.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.06%)</title><rect x="108.6" y="1299.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.6" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.47%)</title><rect x="109.3" y="1299.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.3" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.47%)</title><rect x="109.3" y="1283.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.3" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="109.3" y="1267.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.3" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="109.3" y="1251.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.3" y="1262.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.41%)</title><rect x="110.0" y="1267.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.0" y="1278.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.41%)</title><rect x="110.0" y="1251.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.0" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.41%)</title><rect x="110.0" y="1235.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.0" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (6 samples, 0.35%)</title><rect x="114.9" y="1411.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.9" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="114.9" y="1395.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="114.9" y="1379.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.06%)</title><rect x="114.9" y="1363.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.9" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (5 samples, 0.29%)</title><rect x="115.6" y="1395.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.6" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (4 samples, 0.24%)</title><rect x="115.6" y="1379.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="115.6" y="1363.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="118.6" y="1374.0"></text>
</g>
<g>
<title>__read (3 samples, 0.18%)</title><rect x="115.6" y="1347.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="118.6" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="115.6" y="1331.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="118.6" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="115.6" y="1315.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="118.6" y="1326.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.18%)</title><rect x="115.6" y="1299.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.6" y="1310.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.18%)</title><rect x="115.6" y="1283.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="118.6" y="1294.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.18%)</title><rect x="115.6" y="1267.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="118.6" y="1278.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.18%)</title><rect x="115.6" y="1251.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.6" y="1262.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.06%)</title><rect x="116.3" y="1235.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="119.3" y="1246.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.06%)</title><rect x="117.0" y="1235.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.0" y="1246.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="117.0" y="1219.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.0" y="1230.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.06%)</title><rect x="117.0" y="1203.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.0" y="1214.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="117.7" y="1363.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="120.7" y="1374.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="118.3" y="1379.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.3" y="1390.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="118.3" y="1363.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.3" y="1374.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="118.3" y="1347.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.3" y="1358.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="118.3" y="1331.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.3" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (13 samples, 0.77%)</title><rect x="119.0" y="1411.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.0" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (12 samples, 0.71%)</title><rect x="119.7" y="1395.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.7" y="1406.0"></text>
</g>
<g>
<title>epoll_ctl (12 samples, 0.71%)</title><rect x="119.7" y="1379.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="122.7" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.47%)</title><rect x="122.5" y="1363.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.5" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.47%)</title><rect x="122.5" y="1347.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="125.5" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_ctl (7 samples, 0.41%)</title><rect x="123.2" y="1331.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="126.2" y="1342.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.06%)</title><rect x="123.2" y="1315.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.2" y="1326.0"></text>
</g>
<g>
<title>ep_remove (3 samples, 0.18%)</title><rect x="123.9" y="1315.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.9" y="1326.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.06%)</title><rect x="123.9" y="1299.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="126.9" y="1310.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.06%)</title><rect x="123.9" y="1283.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.9" y="1294.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="123.9" y="1267.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="126.9" y="1278.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="123.9" y="1251.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.9" y="1262.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="123.9" y="1235.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="126.9" y="1246.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="123.9" y="1219.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.9" y="1230.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="123.9" y="1203.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.9" y="1214.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="123.9" y="1187.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="126.9" y="1198.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="123.9" y="1171.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.9" y="1182.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="123.9" y="1155.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.9" y="1166.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="123.9" y="1139.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.9" y="1150.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="123.9" y="1123.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.9" y="1134.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="123.9" y="1107.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.9" y="1118.0"></text>
</g>
<g>
<title>rb_erase_cached (2 samples, 0.12%)</title><rect x="124.6" y="1299.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="127.6" y="1310.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="126.0" y="1315.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="129.0" y="1326.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="126.7" y="1315.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.7" y="1326.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.06%)</title><rect x="126.7" y="1299.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="129.7" y="1310.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.06%)</title><rect x="126.7" y="1283.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.7" y="1294.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.06%)</title><rect x="127.4" y="1315.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.4" y="1326.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="127.4" y="1299.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="130.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (14 samples, 0.82%)</title><rect x="128.1" y="1411.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.1" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.deregister (1 samples, 0.06%)</title><rect x="128.1" y="1395.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (1 samples, 0.06%)</title><rect x="128.1" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (3 samples, 0.18%)</title><rect x="128.8" y="1395.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (3 samples, 0.18%)</title><rect x="128.8" y="1379.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.8" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (3 samples, 0.18%)</title><rect x="128.8" y="1363.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="131.8" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="128.8" y="1347.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.8" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="128.8" y="1331.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.8" y="1342.0"></text>
</g>
<g>
<title>sys_epoll_ctl (3 samples, 0.18%)</title><rect x="128.8" y="1315.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="131.8" y="1326.0"></text>
</g>
<g>
<title>ep_remove (2 samples, 0.12%)</title><rect x="129.5" y="1299.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="132.5" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="129.5" y="1283.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.5" y="1294.0"></text>
</g>
<g>
<title>rb_erase_cached (1 samples, 0.06%)</title><rect x="130.2" y="1283.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="133.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (10 samples, 0.59%)</title><rect x="130.8" y="1395.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (10 samples, 0.59%)</title><rect x="130.8" y="1379.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.8" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (10 samples, 0.59%)</title><rect x="130.8" y="1363.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.8" y="1374.0"></text>
</g>
<g>
<title>close (10 samples, 0.59%)</title><rect x="130.8" y="1347.0" width="7.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="133.8" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.59%)</title><rect x="130.8" y="1331.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.8" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.59%)</title><rect x="130.8" y="1315.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.8" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.53%)</title><rect x="130.8" y="1299.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="133.8" y="1310.0"></text>
</g>
<g>
<title>task_work_run (9 samples, 0.53%)</title><rect x="130.8" y="1283.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="133.8" y="1294.0"></text>
</g>
<g>
<title>____fput (9 samples, 0.53%)</title><rect x="130.8" y="1267.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="133.8" y="1278.0"></text>
</g>
<g>
<title>__fput (9 samples, 0.53%)</title><rect x="130.8" y="1251.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="133.8" y="1262.0"></text>
</g>
<g>
<title>dput (4 samples, 0.24%)</title><rect x="130.8" y="1235.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="133.8" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (4 samples, 0.24%)</title><rect x="130.8" y="1219.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="133.8" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (4 samples, 0.24%)</title><rect x="130.8" y="1203.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="133.8" y="1214.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="130.8" y="1187.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="133.8" y="1198.0"></text>
</g>
<g>
<title>dentry_unlink_inode (3 samples, 0.18%)</title><rect x="131.5" y="1187.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.5" y="1198.0"></text>
</g>
<g>
<title>iput (3 samples, 0.18%)</title><rect x="131.5" y="1171.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.5" y="1182.0"></text>
</g>
<g>
<title>_atomic_dec_and_lock (1 samples, 0.06%)</title><rect x="131.5" y="1155.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.5" y="1166.0"></text>
</g>
<g>
<title>evict (2 samples, 0.12%)</title><rect x="132.2" y="1155.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="135.2" y="1166.0"></text>
</g>
<g>
<title>destroy_inode (1 samples, 0.06%)</title><rect x="132.2" y="1139.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.2" y="1150.0"></text>
</g>
<g>
<title>__destroy_inode (1 samples, 0.06%)</title><rect x="132.2" y="1123.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.2" y="1134.0"></text>
</g>
<g>
<title>__fsnotify_inode_delete (1 samples, 0.06%)</title><rect x="132.2" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="135.2" y="1118.0"></text>
</g>
<g>
<title>fsnotify_destroy_marks (1 samples, 0.06%)</title><rect x="132.2" y="1091.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.2" y="1102.0"></text>
</g>
<g>
<title>__srcu_read_lock (1 samples, 0.06%)</title><rect x="132.2" y="1075.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="135.2" y="1086.0"></text>
</g>
<g>
<title>inode_wait_for_writeback (1 samples, 0.06%)</title><rect x="132.9" y="1139.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="135.9" y="1150.0"></text>
</g>
<g>
<title>__inode_wait_for_writeback (1 samples, 0.06%)</title><rect x="132.9" y="1123.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.9" y="1134.0"></text>
</g>
<g>
<title>sock_close (5 samples, 0.29%)</title><rect x="133.6" y="1235.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.6" y="1246.0"></text>
</g>
<g>
<title>__sock_release (5 samples, 0.29%)</title><rect x="133.6" y="1219.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.6" y="1230.0"></text>
</g>
<g>
<title>inet6_release (5 samples, 0.29%)</title><rect x="133.6" y="1203.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="136.6" y="1214.0"></text>
</g>
<g>
<title>inet_release (5 samples, 0.29%)</title><rect x="133.6" y="1187.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.6" y="1198.0"></text>
</g>
<g>
<title>tcp_close (5 samples, 0.29%)</title><rect x="133.6" y="1171.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.6" y="1182.0"></text>
</g>
<g>
<title>bictcp_state (1 samples, 0.06%)</title><rect x="133.6" y="1155.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.6" y="1166.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="134.3" y="1155.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="137.3" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="134.3" y="1139.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="137.3" y="1150.0"></text>
</g>
<g>
<title>tcp_disconnect (3 samples, 0.18%)</title><rect x="135.0" y="1155.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.0" y="1166.0"></text>
</g>
<g>
<title>tcp_send_active_reset (3 samples, 0.18%)</title><rect x="135.0" y="1139.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.0" y="1150.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.18%)</title><rect x="135.0" y="1123.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.0" y="1134.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.12%)</title><rect x="135.0" y="1107.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.0" y="1118.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.12%)</title><rect x="135.0" y="1091.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.0" y="1102.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.12%)</title><rect x="135.0" y="1075.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.0" y="1086.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.12%)</title><rect x="135.0" y="1059.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.0" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.12%)</title><rect x="135.0" y="1043.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.0" y="1054.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.12%)</title><rect x="135.0" y="1027.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.0" y="1038.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.12%)</title><rect x="135.0" y="1011.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="138.0" y="1022.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="135.0" y="995.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.0" y="1006.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="135.7" y="995.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.7" y="1006.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="135.7" y="979.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.7" y="990.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="135.7" y="963.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.7" y="974.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="135.7" y="947.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.7" y="958.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="135.7" y="931.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.7" y="942.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="136.4" y="1107.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="139.4" y="1118.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="136.4" y="1091.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.4" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="136.4" y="1075.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.4" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="136.4" y="1059.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="139.4" y="1070.0"></text>
</g>
<g>
<title>sys_close (1 samples, 0.06%)</title><rect x="137.1" y="1299.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.1" y="1310.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.06%)</title><rect x="137.1" y="1283.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.1" y="1294.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="137.1" y="1267.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.1" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (17 samples, 1.00%)</title><rect x="137.8" y="1507.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.8" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (4 samples, 0.24%)</title><rect x="137.8" y="1491.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (4 samples, 0.24%)</title><rect x="137.8" y="1475.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.24%)</title><rect x="137.8" y="1459.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.24%)</title><rect x="137.8" y="1443.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.24%)</title><rect x="137.8" y="1427.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.24%)</title><rect x="137.8" y="1411.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (4 samples, 0.24%)</title><rect x="137.8" y="1395.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (4 samples, 0.24%)</title><rect x="137.8" y="1379.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (4 samples, 0.24%)</title><rect x="137.8" y="1363.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.8" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.24%)</title><rect x="137.8" y="1347.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.8" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.24%)</title><rect x="137.8" y="1331.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.24%)</title><rect x="137.8" y="1315.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.24%)</title><rect x="137.8" y="1299.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.24%)</title><rect x="137.8" y="1283.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.24%)</title><rect x="137.8" y="1267.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.24%)</title><rect x="137.8" y="1251.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.24%)</title><rect x="137.8" y="1235.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.24%)</title><rect x="137.8" y="1219.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.24%)</title><rect x="137.8" y="1203.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.24%)</title><rect x="137.8" y="1187.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.8" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="137.8" y="1171.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="140.8" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="137.8" y="1155.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.8" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="137.8" y="1139.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.8" y="1150.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.24%)</title><rect x="137.8" y="1123.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="140.8" y="1134.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="137.8" y="1107.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="140.8" y="1118.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.24%)</title><rect x="137.8" y="1091.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="140.8" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.24%)</title><rect x="137.8" y="1075.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.8" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.18%)</title><rect x="138.5" y="1059.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.5" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="138.5" y="1043.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.5" y="1054.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (4 samples, 0.24%)</title><rect x="140.6" y="1491.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.6" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$runThunk (2 samples, 0.12%)</title><rect x="140.6" y="1475.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.6" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (2 samples, 0.12%)</title><rect x="140.6" y="1459.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.6" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.12%)</title><rect x="140.6" y="1443.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.6" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.12%)</title><rect x="140.6" y="1427.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.6" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="140.6" y="1411.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="143.6" y="1422.0"></text>
</g>
<g>
<title>__write (2 samples, 0.12%)</title><rect x="140.6" y="1395.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="143.6" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="140.6" y="1379.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="143.6" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="140.6" y="1363.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.6" y="1374.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.12%)</title><rect x="140.6" y="1347.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="143.6" y="1358.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="140.6" y="1331.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.6" y="1342.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="140.6" y="1315.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.6" y="1326.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.06%)</title><rect x="141.3" y="1331.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="144.3" y="1342.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.06%)</title><rect x="141.3" y="1315.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.3" y="1326.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.06%)</title><rect x="141.3" y="1299.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.3" y="1310.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (2 samples, 0.12%)</title><rect x="142.0" y="1475.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.0" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.12%)</title><rect x="142.0" y="1459.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.0" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1072/226127568.apply$mcV$sp (1 samples, 0.06%)</title><rect x="142.0" y="1443.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.0" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$1 (1 samples, 0.06%)</title><rect x="142.0" y="1427.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.0" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (1 samples, 0.06%)</title><rect x="142.0" y="1411.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.0" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (1 samples, 0.06%)</title><rect x="142.0" y="1395.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.0" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="142.0" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.0" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="142.0" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.0" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="142.0" y="1347.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="142.0" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.0" y="1342.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="142.0" y="1315.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="145.0" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1073/1346374155.apply$mcV$sp (1 samples, 0.06%)</title><rect x="142.7" y="1443.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.7" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (1 samples, 0.06%)</title><rect x="142.7" y="1427.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.7" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.06%)</title><rect x="142.7" y="1411.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.7" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.06%)</title><rect x="142.7" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.7" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.06%)</title><rect x="142.7" y="1379.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.7" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.06%)</title><rect x="142.7" y="1363.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (1 samples, 0.06%)</title><rect x="142.7" y="1347.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.7" y="1358.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.06%)</title><rect x="142.7" y="1331.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="145.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (9 samples, 0.53%)</title><rect x="143.3" y="1491.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.3" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1071/1648536451.apply$mcV$sp (8 samples, 0.47%)</title><rect x="144.0" y="1475.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.0" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (8 samples, 0.47%)</title><rect x="144.0" y="1459.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.0" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (6 samples, 0.35%)</title><rect x="144.0" y="1443.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.35%)</title><rect x="144.0" y="1427.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (6 samples, 0.35%)</title><rect x="144.0" y="1411.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (6 samples, 0.35%)</title><rect x="144.0" y="1395.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.35%)</title><rect x="144.0" y="1379.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (6 samples, 0.35%)</title><rect x="144.0" y="1363.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (6 samples, 0.35%)</title><rect x="144.0" y="1347.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.0" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.35%)</title><rect x="144.0" y="1331.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.0" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.29%)</title><rect x="144.0" y="1315.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="144.0" y="1299.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.29%)</title><rect x="144.0" y="1283.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="144.0" y="1267.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.29%)</title><rect x="144.0" y="1251.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.29%)</title><rect x="144.0" y="1235.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.29%)</title><rect x="144.0" y="1219.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.29%)</title><rect x="144.0" y="1203.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.29%)</title><rect x="144.0" y="1187.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.29%)</title><rect x="144.0" y="1171.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.29%)</title><rect x="144.0" y="1155.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.0" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="144.0" y="1139.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="147.0" y="1150.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="144.0" y="1123.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="147.0" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="144.7" y="1139.0" width="2.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="147.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="144.7" y="1123.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="147.7" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="144.7" y="1107.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="147.7" y="1118.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.24%)</title><rect x="144.7" y="1091.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="147.7" y="1102.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="144.7" y="1075.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.7" y="1086.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.24%)</title><rect x="144.7" y="1059.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.7" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.24%)</title><rect x="144.7" y="1043.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="147.7" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.24%)</title><rect x="144.7" y="1027.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="147.7" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.24%)</title><rect x="144.7" y="1011.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="147.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.06%)</title><rect x="147.5" y="1315.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.06%)</title><rect x="147.5" y="1299.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.06%)</title><rect x="147.5" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (2 samples, 0.12%)</title><rect x="148.2" y="1443.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.2" y="1454.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="149.6" y="1507.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="152.6" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (3 samples, 0.18%)</title><rect x="150.3" y="1555.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.3" y="1566.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (3 samples, 0.18%)</title><rect x="150.3" y="1539.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.3" y="1550.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (3 samples, 0.18%)</title><rect x="150.3" y="1523.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.3" y="1534.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (3 samples, 0.18%)</title><rect x="150.3" y="1507.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.3" y="1518.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (3 samples, 0.18%)</title><rect x="150.3" y="1491.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.3" y="1502.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (3 samples, 0.18%)</title><rect x="150.3" y="1475.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.3" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (3 samples, 0.18%)</title><rect x="150.3" y="1459.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.3" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (3 samples, 0.18%)</title><rect x="150.3" y="1443.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.3" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (3 samples, 0.18%)</title><rect x="150.3" y="1427.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.3" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (3 samples, 0.18%)</title><rect x="150.3" y="1411.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.3" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (3 samples, 0.18%)</title><rect x="150.3" y="1395.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.3" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (3 samples, 0.18%)</title><rect x="150.3" y="1379.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.3" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (2 samples, 0.12%)</title><rect x="151.0" y="1363.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.0" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.12%)</title><rect x="151.0" y="1347.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.0" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.12%)</title><rect x="151.0" y="1331.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.0" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (2 samples, 0.12%)</title><rect x="151.0" y="1315.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (2 samples, 0.12%)</title><rect x="151.0" y="1299.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="151.0" y="1283.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.12%)</title><rect x="151.0" y="1267.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="151.0" y="1251.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.0" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.12%)</title><rect x="151.0" y="1235.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="151.0" y="1219.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="151.0" y="1203.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.12%)</title><rect x="151.0" y="1187.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="151.0" y="1171.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="151.0" y="1155.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="151.7" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.7" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="151.7" y="1123.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="154.7" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="151.7" y="1107.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.7" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="151.7" y="1091.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="154.7" y="1102.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="151.7" y="1075.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.7" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="151.7" y="1059.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.7" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="151.7" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.7" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="151.7" y="1027.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.7" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="151.7" y="1011.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.7" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="151.7" y="995.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.7" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1193/1463369348.run (1 samples, 0.06%)</title><rect x="152.4" y="1555.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.4" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$3 (1 samples, 0.06%)</title><rect x="152.4" y="1539.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.4" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (1 samples, 0.06%)</title><rect x="152.4" y="1523.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (1 samples, 0.06%)</title><rect x="152.4" y="1507.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.4" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (1 samples, 0.06%)</title><rect x="152.4" y="1491.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.4" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (1 samples, 0.06%)</title><rect x="152.4" y="1475.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.4" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (1 samples, 0.06%)</title><rect x="152.4" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.4" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="152.4" y="1443.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.4" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1 samples, 0.06%)</title><rect x="152.4" y="1427.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.4" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1 samples, 0.06%)</title><rect x="152.4" y="1411.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.4" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="152.4" y="1395.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.4" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="152.4" y="1379.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1389/440309309.run (8 samples, 0.47%)</title><rect x="153.1" y="1555.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.1" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (8 samples, 0.47%)</title><rect x="153.1" y="1539.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.1" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (7 samples, 0.41%)</title><rect x="153.1" y="1523.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.1" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (7 samples, 0.41%)</title><rect x="153.1" y="1507.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.1" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (7 samples, 0.41%)</title><rect x="153.1" y="1491.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.1" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (6 samples, 0.35%)</title><rect x="153.1" y="1475.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.1" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (6 samples, 0.35%)</title><rect x="153.1" y="1459.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.1" y="1470.0"></text>
</g>
<g>
<title>akka/cluster/rapid/MessagingClientAndServerSettings.messageTimeoutAndRetries (1 samples, 0.06%)</title><rect x="153.1" y="1443.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.1" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.$times (1 samples, 0.06%)</title><rect x="153.1" y="1427.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.1" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequest (1 samples, 0.06%)</title><rect x="153.8" y="1443.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.8" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequestImpl (1 samples, 0.06%)</title><rect x="153.8" y="1427.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.8" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.sharedGateway (1 samples, 0.06%)</title><rect x="153.8" y="1411.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="153.8" y="1395.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.8" y="1406.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.apply (1 samples, 0.06%)</title><rect x="154.5" y="1443.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.5" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.&lt;init&gt; (1 samples, 0.06%)</title><rect x="154.5" y="1427.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.5" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.verifyUri (1 samples, 0.06%)</title><rect x="154.5" y="1411.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.5" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="154.5" y="1395.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="157.5" y="1406.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="155.2" y="1443.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.2" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="155.2" y="1427.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.2" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (1 samples, 0.06%)</title><rect x="155.2" y="1411.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.2" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="155.2" y="1395.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.2" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="155.2" y="1379.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.2" y="1390.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="155.2" y="1363.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.2" y="1374.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (1 samples, 0.06%)</title><rect x="155.2" y="1347.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.2" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (1 samples, 0.06%)</title><rect x="155.9" y="1443.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.9" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (1 samples, 0.06%)</title><rect x="155.9" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.9" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="155.9" y="1411.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.9" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.06%)</title><rect x="155.9" y="1395.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.9" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.writeTo (1 samples, 0.06%)</title><rect x="155.9" y="1379.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.9" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="155.9" y="1363.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (1 samples, 0.06%)</title><rect x="155.9" y="1347.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="156.5" y="1443.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="156.5" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.5" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="157.2" y="1475.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.2" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="157.2" y="1459.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.2" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="157.2" y="1443.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.2" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="157.2" y="1427.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.2" y="1438.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="157.2" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.2" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.06%)</title><rect x="157.9" y="1523.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.9" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="157.9" y="1507.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.9" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.06%)</title><rect x="157.9" y="1491.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.9" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="157.9" y="1475.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.9" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="157.9" y="1459.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.9" y="1470.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.06%)</title><rect x="157.9" y="1443.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.9" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.06%)</title><rect x="157.9" y="1427.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.9" y="1438.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="157.9" y="1411.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="160.9" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1408/716144115.run (10 samples, 0.59%)</title><rect x="158.6" y="1555.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.6" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (10 samples, 0.59%)</title><rect x="158.6" y="1539.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.6" y="1550.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (2 samples, 0.12%)</title><rect x="158.6" y="1523.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.6" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (2 samples, 0.12%)</title><rect x="158.6" y="1507.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.6" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (2 samples, 0.12%)</title><rect x="158.6" y="1491.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.6" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (2 samples, 0.12%)</title><rect x="158.6" y="1475.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.6" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (2 samples, 0.12%)</title><rect x="158.6" y="1459.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.6" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.12%)</title><rect x="158.6" y="1443.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.6" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.12%)</title><rect x="158.6" y="1427.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.6" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.12%)</title><rect x="158.6" y="1411.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.12%)</title><rect x="158.6" y="1395.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="158.6" y="1379.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.12%)</title><rect x="158.6" y="1363.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="158.6" y="1347.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="158.6" y="1331.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.6" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="158.6" y="1315.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="161.6" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="158.6" y="1299.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="161.6" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="158.6" y="1283.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="161.6" y="1294.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="158.6" y="1267.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.6" y="1278.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="158.6" y="1251.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="161.6" y="1262.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="158.6" y="1235.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.6" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="158.6" y="1219.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="161.6" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="158.6" y="1203.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="161.6" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="158.6" y="1187.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.6" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (8 samples, 0.47%)</title><rect x="160.0" y="1523.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.0" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (7 samples, 0.41%)</title><rect x="160.0" y="1507.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.0" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$853/1775282114.accept (6 samples, 0.35%)</title><rect x="160.0" y="1491.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.0" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (6 samples, 0.35%)</title><rect x="160.0" y="1475.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.0" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1416/81669836.accept (6 samples, 0.35%)</title><rect x="160.0" y="1459.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.0" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (6 samples, 0.35%)</title><rect x="160.0" y="1443.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.0" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.createFailureDetectorsForCurrentConfiguration (1 samples, 0.06%)</title><rect x="160.0" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.0" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.06%)</title><rect x="160.0" y="1411.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.0" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="160.0" y="1395.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.0" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.06%)</title><rect x="160.0" y="1379.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.0" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="160.0" y="1363.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.0" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="160.0" y="1347.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.0" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="160.0" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.0" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.06%)</title><rect x="160.0" y="1315.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.0" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$854/1498018831.apply (1 samples, 0.06%)</title><rect x="160.0" y="1299.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.0" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$createFailureDetectorsForCurrentConfiguration$16 (1 samples, 0.06%)</title><rect x="160.0" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.0" y="1294.0"></text>
</g>
<g>
<title>akka/cluster/rapid/RapidFailureDetectorFactory.createInstance (1 samples, 0.06%)</title><rect x="160.0" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.0" y="1278.0"></text>
</g>
<g>
<title>akka/remote/FailureDetectorLoader$.load (1 samples, 0.06%)</title><rect x="160.0" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (1 samples, 0.06%)</title><rect x="160.0" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.0" y="1246.0"></text>
</g>
<g>
<title>scala/util/Success.flatMap (1 samples, 0.06%)</title><rect x="160.0" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$83/1752182275.apply (1 samples, 0.06%)</title><rect x="160.0" y="1203.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$5 (1 samples, 0.06%)</title><rect x="160.0" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (1 samples, 0.06%)</title><rect x="160.0" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.0" y="1182.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (1 samples, 0.06%)</title><rect x="160.0" y="1155.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.0" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$84/2049051802.apply (1 samples, 0.06%)</title><rect x="160.0" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.0" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$1 (1 samples, 0.06%)</title><rect x="160.0" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.0" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getCurrentConfigurationId (1 samples, 0.06%)</title><rect x="160.7" y="1427.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.7" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.updateCurrentConfigurationId (1 samples, 0.06%)</title><rect x="160.7" y="1411.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.7" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView$Configuration.getConfigurationId (1 samples, 0.06%)</title><rect x="160.7" y="1395.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.7" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView$Configuration.getConfigurationId (1 samples, 0.06%)</title><rect x="160.7" y="1379.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.7" y="1390.0"></text>
</g>
<g>
<title>net/openhft/hashing/LongHashFunction.hashChars (1 samples, 0.06%)</title><rect x="160.7" y="1363.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.7" y="1374.0"></text>
</g>
<g>
<title>net/openhft/hashing/UnknownJvmStringHash.longHash (1 samples, 0.06%)</title><rect x="160.7" y="1347.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.7" y="1358.0"></text>
</g>
<g>
<title>net/openhft/hashing/LongHashFunction.hashNativeChars (1 samples, 0.06%)</title><rect x="160.7" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.7" y="1342.0"></text>
</g>
<g>
<title>net/openhft/hashing/XxHash$AsLongHashFunction.hash (1 samples, 0.06%)</title><rect x="160.7" y="1315.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.7" y="1326.0"></text>
</g>
<g>
<title>net/openhft/hashing/XxHash.xxHash64 (1 samples, 0.06%)</title><rect x="160.7" y="1299.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.7" y="1310.0"></text>
</g>
<g>
<title>net/openhft/hashing/XxHash.fetch32 (1 samples, 0.06%)</title><rect x="160.7" y="1283.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.7" y="1294.0"></text>
</g>
<g>
<title>net/openhft/hashing/CharSequenceAccess$LittleEndianCharSequenceAccess.getUnsignedInt (1 samples, 0.06%)</title><rect x="160.7" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.7" y="1278.0"></text>
</g>
<g>
<title>net/openhft/hashing/CharSequenceAccess$LittleEndianCharSequenceAccess.getUnsignedInt (1 samples, 0.06%)</title><rect x="160.7" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.7" y="1262.0"></text>
</g>
<g>
<title>net/openhft/hashing/CharSequenceAccess.getUnsignedInt (1 samples, 0.06%)</title><rect x="160.7" y="1235.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.7" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (4 samples, 0.24%)</title><rect x="161.4" y="1427.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.4" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (2 samples, 0.12%)</title><rect x="161.4" y="1411.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.4" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (2 samples, 0.12%)</title><rect x="161.4" y="1395.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.4" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (2 samples, 0.12%)</title><rect x="161.4" y="1379.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.4" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (2 samples, 0.12%)</title><rect x="161.4" y="1363.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.4" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.12%)</title><rect x="161.4" y="1347.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.4" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.12%)</title><rect x="161.4" y="1331.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.4" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.12%)</title><rect x="161.4" y="1315.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.4" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.12%)</title><rect x="161.4" y="1299.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.4" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (1 samples, 0.06%)</title><rect x="162.1" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.1" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (1 samples, 0.06%)</title><rect x="162.1" y="1267.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.1" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (1 samples, 0.06%)</title><rect x="162.1" y="1251.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.1" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (2 samples, 0.12%)</title><rect x="162.8" y="1411.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.8" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.12%)</title><rect x="162.8" y="1395.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.8" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.12%)</title><rect x="162.8" y="1379.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.8" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.12%)</title><rect x="162.8" y="1363.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.8" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.12%)</title><rect x="162.8" y="1347.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.8" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="164.2" y="1491.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.2" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="164.2" y="1475.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.2" y="1486.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.equals (1 samples, 0.06%)</title><rect x="164.2" y="1459.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.2" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.getPhase2BMessage (1 samples, 0.06%)</title><rect x="164.9" y="1507.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.9" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (1 samples, 0.06%)</title><rect x="165.6" y="1555.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.6" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (1 samples, 0.06%)</title><rect x="165.6" y="1539.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.6" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.06%)</title><rect x="165.6" y="1523.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.6" y="1534.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.run (1 samples, 0.06%)</title><rect x="165.6" y="1507.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.6" y="1518.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.sendHeartBeatHttpMessaging (1 samples, 0.06%)</title><rect x="165.6" y="1491.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.6" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (1 samples, 0.06%)</title><rect x="165.6" y="1475.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.6" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="165.6" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.6" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="165.6" y="1443.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.6" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="165.6" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (1 samples, 0.06%)</title><rect x="165.6" y="1411.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.6" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="165.6" y="1395.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.6" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="165.6" y="1379.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.6" y="1390.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="165.6" y="1363.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.6" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$929/1665852551.apply (1 samples, 0.06%)</title><rect x="165.6" y="1347.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (1 samples, 0.06%)</title><rect x="165.6" y="1331.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.6" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (1 samples, 0.06%)</title><rect x="165.6" y="1315.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.6" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (1 samples, 0.06%)</title><rect x="165.6" y="1299.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (1 samples, 0.06%)</title><rect x="165.6" y="1283.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.authority (1 samples, 0.06%)</title><rect x="165.6" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.userinfo (1 samples, 0.06%)</title><rect x="165.6" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$6 (1 samples, 0.06%)</title><rect x="165.6" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (1 samples, 0.06%)</title><rect x="165.6" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (1 samples, 0.06%)</title><rect x="165.6" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (1 samples, 0.06%)</title><rect x="165.6" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="165.6" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="165.6" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="165.6" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.6" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="165.6" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.6" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="165.6" y="1107.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="168.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.18%)</title><rect x="166.3" y="1555.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.3" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.12%)</title><rect x="166.3" y="1539.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.12%)</title><rect x="166.3" y="1523.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.12%)</title><rect x="166.3" y="1507.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.12%)</title><rect x="166.3" y="1491.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.3" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.06%)</title><rect x="166.3" y="1475.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="169.3" y="1486.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="166.3" y="1459.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="169.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="167.0" y="1475.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="170.0" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="167.0" y="1459.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="170.0" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="167.0" y="1443.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.0" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="167.0" y="1427.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="170.0" y="1438.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="167.0" y="1411.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.0" y="1422.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="167.0" y="1395.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="170.0" y="1406.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="167.0" y="1379.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.0" y="1390.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="167.0" y="1363.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="170.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.06%)</title><rect x="167.7" y="1539.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.7" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.06%)</title><rect x="167.7" y="1523.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.7" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.06%)</title><rect x="167.7" y="1507.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.7" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 0.06%)</title><rect x="167.7" y="1491.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="167.7" y="1475.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="167.7" y="1459.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="170.7" y="1470.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="167.7" y="1443.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="170.7" y="1454.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="167.7" y="1427.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="170.7" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="167.7" y="1411.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="170.7" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="167.7" y="1395.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="170.7" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,066 samples, 62.74%)</title><rect x="168.4" y="1603.0" width="740.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.4" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,066 samples, 62.74%)</title><rect x="168.4" y="1587.0" width="740.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.4" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (966 samples, 56.86%)</title><rect x="169.0" y="1571.0" width="671.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.0" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (959 samples, 56.44%)</title><rect x="169.0" y="1555.0" width="666.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.0" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (1 samples, 0.06%)</title><rect x="180.2" y="1539.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.2" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (1 samples, 0.06%)</title><rect x="180.2" y="1523.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.2" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (1 samples, 0.06%)</title><rect x="180.2" y="1507.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.2" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.06%)</title><rect x="180.2" y="1491.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (4 samples, 0.24%)</title><rect x="180.9" y="1539.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (5 samples, 0.29%)</title><rect x="183.6" y="1539.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (1 samples, 0.06%)</title><rect x="186.4" y="1523.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.4" y="1534.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.06%)</title><rect x="186.4" y="1507.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="189.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (933 samples, 54.91%)</title><rect x="187.1" y="1539.0" width="648.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.1" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (107 samples, 6.30%)</title><rect x="187.8" y="1523.0" width="74.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.8" y="1534.0">akka/dis..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (107 samples, 6.30%)</title><rect x="187.8" y="1507.0" width="74.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.8" y="1518.0">akka/dis..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (37 samples, 2.18%)</title><rect x="187.8" y="1491.0" width="25.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.8" y="1502.0">a..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (8 samples, 0.47%)</title><rect x="187.8" y="1475.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.8" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$roundUp (2 samples, 0.12%)</title><rect x="187.8" y="1459.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.8" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.toNanos (2 samples, 0.12%)</title><rect x="187.8" y="1443.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.8" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (1 samples, 0.06%)</title><rect x="187.8" y="1427.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.8" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.length (1 samples, 0.06%)</title><rect x="188.5" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (6 samples, 0.35%)</title><rect x="189.2" y="1459.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.2" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (1 samples, 0.06%)</title><rect x="192.7" y="1443.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.7" y="1454.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (1 samples, 0.06%)</title><rect x="192.7" y="1427.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.7" y="1438.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (1 samples, 0.06%)</title><rect x="192.7" y="1411.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.7" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="192.7" y="1395.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.7" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="192.7" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.7" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (1 samples, 0.06%)</title><rect x="192.7" y="1363.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.7" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (1 samples, 0.06%)</title><rect x="192.7" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.7" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/RichLong.self (1 samples, 0.06%)</title><rect x="192.7" y="1331.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.7" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (1 samples, 0.06%)</title><rect x="192.7" y="1315.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.06%)</title><rect x="192.7" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$685/1117061333.run (29 samples, 1.71%)</title><rect x="193.4" y="1475.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.4" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (29 samples, 1.71%)</title><rect x="193.4" y="1459.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.4" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (27 samples, 1.59%)</title><rect x="194.7" y="1443.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.7" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (27 samples, 1.59%)</title><rect x="194.7" y="1427.0" width="18.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.7" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (27 samples, 1.59%)</title><rect x="194.7" y="1411.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.7" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (27 samples, 1.59%)</title><rect x="194.7" y="1395.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (27 samples, 1.59%)</title><rect x="194.7" y="1379.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.7" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (27 samples, 1.59%)</title><rect x="194.7" y="1363.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (27 samples, 1.59%)</title><rect x="194.7" y="1347.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (26 samples, 1.53%)</title><rect x="194.7" y="1331.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (26 samples, 1.53%)</title><rect x="194.7" y="1315.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (26 samples, 1.53%)</title><rect x="194.7" y="1299.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.59%)</title><rect x="194.7" y="1283.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (10 samples, 0.59%)</title><rect x="194.7" y="1267.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (10 samples, 0.59%)</title><rect x="194.7" y="1251.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.53%)</title><rect x="195.4" y="1235.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.4" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.35%)</title><rect x="195.4" y="1219.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.4" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.35%)</title><rect x="195.4" y="1203.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.4" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.35%)</title><rect x="195.4" y="1187.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.4" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.35%)</title><rect x="195.4" y="1171.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.4" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.35%)</title><rect x="195.4" y="1155.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.35%)</title><rect x="195.4" y="1139.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.35%)</title><rect x="195.4" y="1123.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.35%)</title><rect x="195.4" y="1107.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.35%)</title><rect x="195.4" y="1091.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.35%)</title><rect x="195.4" y="1075.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.29%)</title><rect x="196.1" y="1059.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.1" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="196.1" y="1043.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="199.1" y="1054.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="196.1" y="1027.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="199.1" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="196.8" y="1043.0" width="2.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="199.8" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="196.8" y="1027.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="199.8" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="196.8" y="1011.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="199.8" y="1022.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.24%)</title><rect x="196.8" y="995.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.8" y="1006.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="196.8" y="979.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.8" y="990.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.24%)</title><rect x="196.8" y="963.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.8" y="974.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.24%)</title><rect x="196.8" y="947.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.8" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.24%)</title><rect x="196.8" y="931.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.8" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.24%)</title><rect x="196.8" y="915.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.8" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (3 samples, 0.18%)</title><rect x="199.6" y="1219.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (3 samples, 0.18%)</title><rect x="199.6" y="1203.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (3 samples, 0.18%)</title><rect x="199.6" y="1187.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.6" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (1 samples, 0.06%)</title><rect x="201.0" y="1171.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.06%)</title><rect x="201.0" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.06%)</title><rect x="201.0" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.0" y="1150.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="201.0" y="1123.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.0" y="1134.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="201.0" y="1107.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.0" y="1118.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="201.0" y="1091.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.0" y="1102.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="201.0" y="1075.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="204.0" y="1086.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="201.0" y="1059.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="204.0" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="201.0" y="1043.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (16 samples, 0.94%)</title><rect x="201.7" y="1283.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (16 samples, 0.94%)</title><rect x="201.7" y="1267.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.underlying (1 samples, 0.06%)</title><rect x="212.8" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (66 samples, 3.88%)</title><rect x="213.5" y="1491.0" width="45.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.5" y="1502.0">akka..</text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (66 samples, 3.88%)</title><rect x="213.5" y="1475.0" width="45.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.5" y="1486.0">scal..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (66 samples, 3.88%)</title><rect x="213.5" y="1459.0" width="45.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.5" y="1470.0">scal..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$557/1598250206.apply$mcV$sp (66 samples, 3.88%)</title><rect x="213.5" y="1443.0" width="45.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.5" y="1454.0">akka..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (66 samples, 3.88%)</title><rect x="213.5" y="1427.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.5" y="1438.0">akka..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (66 samples, 3.88%)</title><rect x="213.5" y="1411.0" width="45.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.5" y="1422.0">akka..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (65 samples, 3.83%)</title><rect x="214.2" y="1395.0" width="45.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.2" y="1406.0">scal..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1269/2143488802.apply (49 samples, 2.88%)</title><rect x="214.2" y="1379.0" width="34.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.2" y="1390.0">ak..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (49 samples, 2.88%)</title><rect x="214.2" y="1363.0" width="34.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.2" y="1374.0">ak..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseUnmarshaller (2 samples, 0.12%)</title><rect x="214.2" y="1347.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.2" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (1 samples, 0.06%)</title><rect x="214.2" y="1331.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.2" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map$ (1 samples, 0.06%)</title><rect x="214.2" y="1315.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map (1 samples, 0.06%)</title><rect x="214.2" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.transform (1 samples, 0.06%)</title><rect x="214.2" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.transform$ (1 samples, 0.06%)</title><rect x="214.2" y="1267.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.transform (1 samples, 0.06%)</title><rect x="214.2" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="214.2" y="1235.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="214.2" y="1219.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1137/1617791978.get$Lambda (1 samples, 0.06%)</title><rect x="214.2" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (1 samples, 0.06%)</title><rect x="214.9" y="1331.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.9" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (1 samples, 0.06%)</title><rect x="214.9" y="1315.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (1 samples, 0.06%)</title><rect x="214.9" y="1299.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (1 samples, 0.06%)</title><rect x="214.9" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map$ (1 samples, 0.06%)</title><rect x="214.9" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map (1 samples, 0.06%)</title><rect x="214.9" y="1251.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="214.9" y="1235.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="214.9" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1135/880721562.get$Lambda (1 samples, 0.06%)</title><rect x="214.9" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1135/880721562.&lt;init&gt; (1 samples, 0.06%)</title><rect x="214.9" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (4 samples, 0.24%)</title><rect x="215.6" y="1347.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (4 samples, 0.24%)</title><rect x="215.6" y="1331.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.6" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (4 samples, 0.24%)</title><rect x="215.6" y="1315.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.6" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Default.withSizeLimit (1 samples, 0.06%)</title><rect x="215.6" y="1299.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Limitable$.applyForByteStrings (1 samples, 0.06%)</title><rect x="215.6" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Limitable$.applyLimit (1 samples, 0.06%)</title><rect x="215.6" y="1267.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.withAttributes (1 samples, 0.06%)</title><rect x="215.6" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (1 samples, 0.06%)</title><rect x="215.6" y="1235.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.06%)</title><rect x="215.6" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.06%)</title><rect x="215.6" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$Lambda$430/885991756.apply (1 samples, 0.06%)</title><rect x="215.6" y="1187.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.isKnownEmpty (1 samples, 0.06%)</title><rect x="216.3" y="1299.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.3" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (1 samples, 0.06%)</title><rect x="216.3" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="216.3" y="1267.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="216.3" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (1 samples, 0.06%)</title><rect x="216.3" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.06%)</title><rect x="216.3" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.06%)</title><rect x="216.3" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (2 samples, 0.12%)</title><rect x="217.0" y="1299.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (1 samples, 0.06%)</title><rect x="217.0" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="217.0" y="1267.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="217.0" y="1251.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.0" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="217.0" y="1235.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="220.0" y="1246.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="217.7" y="1283.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="220.7" y="1294.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="217.7" y="1267.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.7" y="1278.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="217.7" y="1251.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="220.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (42 samples, 2.47%)</title><rect x="218.4" y="1347.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.4" y="1358.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1165/1273229827.apply (42 samples, 2.47%)</title><rect x="218.4" y="1331.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.4" y="1342.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (42 samples, 2.47%)</title><rect x="218.4" y="1315.0" width="29.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.4" y="1326.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (42 samples, 2.47%)</title><rect x="218.4" y="1299.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.4" y="1310.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1137/1617791978.apply (1 samples, 0.06%)</title><rect x="218.4" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1165/1273229827.apply (41 samples, 2.41%)</title><rect x="219.1" y="1283.0" width="28.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.1" y="1294.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (41 samples, 2.41%)</title><rect x="219.1" y="1267.0" width="28.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.1" y="1278.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (41 samples, 2.41%)</title><rect x="219.1" y="1251.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.1" y="1262.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1173/1961343286.apply (41 samples, 2.41%)</title><rect x="219.1" y="1235.0" width="28.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.1" y="1246.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (41 samples, 2.41%)</title><rect x="219.1" y="1219.0" width="28.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.1" y="1230.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (41 samples, 2.41%)</title><rect x="219.1" y="1203.0" width="28.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.1" y="1214.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (1 samples, 0.06%)</title><rect x="219.1" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (1 samples, 0.06%)</title><rect x="219.1" y="1171.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (1 samples, 0.06%)</title><rect x="219.1" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (1 samples, 0.06%)</title><rect x="219.1" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.06%)</title><rect x="219.1" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.06%)</title><rect x="219.1" y="1107.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (1 samples, 0.06%)</title><rect x="219.1" y="1091.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="219.1" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="219.1" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.1" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="219.1" y="1043.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="222.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (40 samples, 2.35%)</title><rect x="219.7" y="1187.0" width="27.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.7" y="1198.0">a..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (40 samples, 2.35%)</title><rect x="219.7" y="1171.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.7" y="1182.0">a..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (40 samples, 2.35%)</title><rect x="219.7" y="1155.0" width="27.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.7" y="1166.0">a..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (40 samples, 2.35%)</title><rect x="219.7" y="1139.0" width="27.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.7" y="1150.0">a..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (40 samples, 2.35%)</title><rect x="219.7" y="1123.0" width="27.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.7" y="1134.0">a..</text>
</g>
<g>
<title>akka/stream/Attributes.and (3 samples, 0.18%)</title><rect x="221.1" y="1107.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (3 samples, 0.18%)</title><rect x="221.1" y="1091.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (3 samples, 0.18%)</title><rect x="221.1" y="1075.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.1" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="221.1" y="1059.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="224.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (1 samples, 0.06%)</title><rect x="221.8" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (1 samples, 0.06%)</title><rect x="222.5" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator$ (1 samples, 0.06%)</title><rect x="222.5" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator (1 samples, 0.06%)</title><rect x="222.5" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.5" y="1038.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="222.5" y="1011.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="225.5" y="1022.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="222.5" y="995.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.5" y="1006.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="222.5" y="979.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="225.5" y="990.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.06%)</title><rect x="222.5" y="963.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="225.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (32 samples, 1.88%)</title><rect x="223.2" y="1107.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.2" y="1118.0">a..</text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (31 samples, 1.82%)</title><rect x="223.2" y="1091.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.2" y="1102.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (31 samples, 1.82%)</title><rect x="223.2" y="1075.0" width="21.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.2" y="1086.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (31 samples, 1.82%)</title><rect x="223.2" y="1059.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.2" y="1070.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (31 samples, 1.82%)</title><rect x="223.2" y="1043.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.2" y="1054.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.checkName (1 samples, 0.06%)</title><rect x="223.2" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (1 samples, 0.06%)</title><rect x="223.2" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (1 samples, 0.06%)</title><rect x="223.2" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.findInvalidPathElementCharPosition (1 samples, 0.06%)</title><rect x="223.2" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validate$1 (1 samples, 0.06%)</title><rect x="223.2" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.2" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.isValidChar$1 (1 samples, 0.06%)</title><rect x="223.2" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (30 samples, 1.77%)</title><rect x="223.9" y="1027.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.9" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (2 samples, 0.12%)</title><rect x="224.6" y="1011.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.6" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (2 samples, 0.12%)</title><rect x="224.6" y="995.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.6" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (2 samples, 0.12%)</title><rect x="224.6" y="979.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.6" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (2 samples, 0.12%)</title><rect x="224.6" y="963.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.12%)</title><rect x="224.6" y="947.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.12%)</title><rect x="224.6" y="931.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="224.6" y="915.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="224.6" y="899.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="224.6" y="883.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.6" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="224.6" y="867.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="224.6" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="224.6" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.6" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="224.6" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.6" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="224.6" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.6" y="814.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.06%)</title><rect x="225.3" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.3" y="862.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.06%)</title><rect x="225.3" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.3" y="846.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (1 samples, 0.06%)</title><rect x="225.3" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.3" y="830.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (1 samples, 0.06%)</title><rect x="225.3" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.06%)</title><rect x="225.3" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.3" y="798.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (6 samples, 0.35%)</title><rect x="226.0" y="1011.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.0" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (6 samples, 0.35%)</title><rect x="226.0" y="995.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.0" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (6 samples, 0.35%)</title><rect x="226.0" y="979.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.0" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (6 samples, 0.35%)</title><rect x="226.0" y="963.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (4 samples, 0.24%)</title><rect x="226.0" y="947.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (4 samples, 0.24%)</title><rect x="226.0" y="931.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (4 samples, 0.24%)</title><rect x="226.0" y="915.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (4 samples, 0.24%)</title><rect x="226.0" y="899.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (4 samples, 0.24%)</title><rect x="226.0" y="883.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.0" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (4 samples, 0.24%)</title><rect x="226.0" y="867.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.0" y="878.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (4 samples, 0.24%)</title><rect x="226.0" y="851.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.0" y="862.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.12%)</title><rect x="227.4" y="835.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.4" y="846.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (2 samples, 0.12%)</title><rect x="227.4" y="819.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.4" y="830.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (2 samples, 0.12%)</title><rect x="227.4" y="803.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.12%)</title><rect x="227.4" y="787.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.4" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.12%)</title><rect x="228.8" y="947.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.8" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.12%)</title><rect x="228.8" y="931.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="228.8" y="915.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.8" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="228.8" y="899.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.8" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="228.8" y="883.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="231.8" y="894.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="228.8" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.8" y="878.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="228.8" y="851.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="231.8" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="228.8" y="835.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="231.8" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="228.8" y="819.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="231.8" y="830.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="228.8" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.8" y="814.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="228.8" y="787.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="231.8" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.5" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.5" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.5" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.5" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.5" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.5" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.5" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.5" y="782.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.5" y="766.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="229.5" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.5" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceLeft (1 samples, 0.06%)</title><rect x="229.5" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.5" y="734.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (21 samples, 1.24%)</title><rect x="230.2" y="1011.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (1 samples, 0.06%)</title><rect x="230.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.2" y="1006.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (1 samples, 0.06%)</title><rect x="230.2" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.2" y="990.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (1 samples, 0.06%)</title><rect x="230.2" y="963.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.06%)</title><rect x="230.2" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.2" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="230.2" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.2" y="942.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (20 samples, 1.18%)</title><rect x="230.9" y="995.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (18 samples, 1.06%)</title><rect x="230.9" y="979.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (18 samples, 1.06%)</title><rect x="230.9" y="963.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.9" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (18 samples, 1.06%)</title><rect x="230.9" y="947.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.9" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (18 samples, 1.06%)</title><rect x="230.9" y="931.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.9" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (18 samples, 1.06%)</title><rect x="230.9" y="915.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.9" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (16 samples, 0.94%)</title><rect x="232.2" y="899.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.2" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.06%)</title><rect x="232.2" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.2" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.06%)</title><rect x="232.2" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.2" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.06%)</title><rect x="232.2" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.2" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.$colon$colon$extension (1 samples, 0.06%)</title><rect x="232.2" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.2" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (15 samples, 0.88%)</title><rect x="232.9" y="883.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (15 samples, 0.88%)</title><rect x="232.9" y="867.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.9" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (15 samples, 0.88%)</title><rect x="232.9" y="851.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.9" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (15 samples, 0.88%)</title><rect x="232.9" y="835.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.9" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (15 samples, 0.88%)</title><rect x="232.9" y="819.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.88%)</title><rect x="232.9" y="803.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.88%)</title><rect x="232.9" y="787.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (15 samples, 0.88%)</title><rect x="232.9" y="771.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.88%)</title><rect x="232.9" y="755.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.88%)</title><rect x="232.9" y="739.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.88%)</title><rect x="232.9" y="723.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.18%)</title><rect x="232.9" y="707.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="235.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="232.9" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="235.9" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="233.6" y="691.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="236.6" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="234.3" y="691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="237.3" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.71%)</title><rect x="235.0" y="707.0" width="8.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="238.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.65%)</title><rect x="235.7" y="691.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.65%)</title><rect x="235.7" y="675.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="238.7" y="686.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.53%)</title><rect x="237.1" y="659.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.1" y="670.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.53%)</title><rect x="237.1" y="643.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="240.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.47%)</title><rect x="237.1" y="627.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="240.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.47%)</title><rect x="237.1" y="611.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="240.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.47%)</title><rect x="237.1" y="595.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.47%)</title><rect x="237.1" y="579.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.1" y="590.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.06%)</title><rect x="242.7" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="245.7" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (2 samples, 0.12%)</title><rect x="243.4" y="979.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.4" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getString (1 samples, 0.06%)</title><rect x="243.4" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.4" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getPathEntry (1 samples, 0.06%)</title><rect x="243.4" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.4" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxRequirement (1 samples, 0.06%)</title><rect x="244.1" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getString (1 samples, 0.06%)</title><rect x="244.1" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.1" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="244.1" y="931.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="247.1" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (1 samples, 0.06%)</title><rect x="244.7" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (1 samples, 0.06%)</title><rect x="244.7" y="1075.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (1 samples, 0.06%)</title><rect x="244.7" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (1 samples, 0.06%)</title><rect x="244.7" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.7" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.06%)</title><rect x="244.7" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.7" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.06%)</title><rect x="244.7" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.7" y="1022.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.06%)</title><rect x="244.7" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.7" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="244.7" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.7" y="990.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.06%)</title><rect x="244.7" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.06%)</title><rect x="244.7" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.7" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (2 samples, 0.12%)</title><rect x="245.4" y="1107.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (1 samples, 0.06%)</title><rect x="245.4" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.06%)</title><rect x="245.4" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.06%)</title><rect x="245.4" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.4" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (1 samples, 0.06%)</title><rect x="246.1" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="246.8" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="246.8" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/Materializer$.matFromSystem (1 samples, 0.06%)</title><rect x="247.5" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.5" y="1358.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer$.apply (1 samples, 0.06%)</title><rect x="247.5" y="1331.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="247.5" y="1315.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="247.5" y="1299.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="247.5" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.findExtension (1 samples, 0.06%)</title><rect x="247.5" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="247.5" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer$.hashCode (1 samples, 0.06%)</title><rect x="247.5" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$$$Lambda$1317/476651683.apply (1 samples, 0.06%)</title><rect x="248.2" y="1379.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.2" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1063/7169518.apply (14 samples, 0.82%)</title><rect x="248.9" y="1379.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.9" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (14 samples, 0.82%)</title><rect x="248.9" y="1363.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.9" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (10 samples, 0.59%)</title><rect x="248.9" y="1347.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.9" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1061/2141953227.apply (8 samples, 0.47%)</title><rect x="248.9" y="1331.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.9" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (8 samples, 0.47%)</title><rect x="248.9" y="1315.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1060/658627847.apply (8 samples, 0.47%)</title><rect x="248.9" y="1299.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (8 samples, 0.47%)</title><rect x="248.9" y="1283.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (1 samples, 0.06%)</title><rect x="248.9" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (1 samples, 0.06%)</title><rect x="248.9" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$991/333873051.apply (1 samples, 0.06%)</title><rect x="248.9" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (1 samples, 0.06%)</title><rect x="248.9" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (1 samples, 0.06%)</title><rect x="248.9" y="1203.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (1 samples, 0.06%)</title><rect x="248.9" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (1 samples, 0.06%)</title><rect x="248.9" y="1171.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (1 samples, 0.06%)</title><rect x="248.9" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (1 samples, 0.06%)</title><rect x="248.9" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (1 samples, 0.06%)</title><rect x="248.9" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="248.9" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="248.9" y="1091.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (1 samples, 0.06%)</title><rect x="248.9" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.06%)</title><rect x="248.9" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.06%)</title><rect x="248.9" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (1 samples, 0.06%)</title><rect x="248.9" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.06%)</title><rect x="248.9" y="1011.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (1 samples, 0.06%)</title><rect x="248.9" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.06%)</title><rect x="248.9" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator$$Lambda$1006/1772974050.apply (1 samples, 0.06%)</title><rect x="248.9" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.$anonfun$acceptedMediaRanges$1$adapted (1 samples, 0.06%)</title><rect x="248.9" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.$anonfun$acceptedMediaRanges$1 (1 samples, 0.06%)</title><rect x="248.9" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$987/304456087.apply (7 samples, 0.41%)</title><rect x="249.6" y="1267.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (7 samples, 0.41%)</title><rect x="249.6" y="1251.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$952/98932860.apply (1 samples, 0.06%)</title><rect x="249.6" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (1 samples, 0.06%)</title><rect x="249.6" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$267/1097069005.apply (1 samples, 0.06%)</title><rect x="249.6" y="1203.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (1 samples, 0.06%)</title><rect x="249.6" y="1187.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.6" y="1198.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="249.6" y="1171.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="252.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1059/1339429821.apply (6 samples, 0.35%)</title><rect x="250.3" y="1235.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (6 samples, 0.35%)</title><rect x="250.3" y="1219.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.3" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1187/1440957806.apply (5 samples, 0.29%)</title><rect x="250.3" y="1203.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.3" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (5 samples, 0.29%)</title><rect x="250.3" y="1187.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.3" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (5 samples, 0.29%)</title><rect x="250.3" y="1171.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.3" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (1 samples, 0.06%)</title><rect x="250.3" y="1155.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="253.3" y="1166.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.addCallback (1 samples, 0.06%)</title><rect x="250.3" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.3" y="1150.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ImmediateFuture.addListener (1 samples, 0.06%)</title><rect x="250.3" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (1 samples, 0.06%)</title><rect x="250.3" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="250.3" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="250.3" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="250.3" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="250.3" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="250.3" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="250.3" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="250.3" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="250.3" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.3" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="250.3" y="963.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="253.3" y="974.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (3 samples, 0.18%)</title><rect x="251.0" y="1155.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.0" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (2 samples, 0.12%)</title><rect x="251.0" y="1139.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (2 samples, 0.12%)</title><rect x="251.0" y="1123.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="251.0" y="1107.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="251.0" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="251.7" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="251.7" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="251.7" y="1075.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="251.7" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="251.7" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="251.7" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="251.7" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="251.7" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.7" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="251.7" y="979.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="254.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="251.7" y="963.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.7" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="251.7" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.7" y="958.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="251.7" y="931.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.7" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="251.7" y="915.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.7" y="926.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="251.7" y="899.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="254.7" y="910.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="251.7" y="883.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.7" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="251.7" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="254.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="251.7" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="254.7" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (1 samples, 0.06%)</title><rect x="252.4" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.4" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.toRapidResponse (1 samples, 0.06%)</title><rect x="252.4" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.4" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$Builder.build (1 samples, 0.06%)</title><rect x="252.4" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.4" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$Builder.buildPartial (1 samples, 0.06%)</title><rect x="252.4" y="1091.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.4" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.access$402 (1 samples, 0.06%)</title><rect x="252.4" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.4" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="252.4" y="1059.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="255.4" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="252.4" y="1043.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="255.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="252.4" y="1027.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.4" y="1038.0"></text>
</g>
<g>
<title>sys_gettimeofday (1 samples, 0.06%)</title><rect x="252.4" y="1011.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="255.4" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="253.1" y="1155.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="256.1" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="253.1" y="1139.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="256.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.06%)</title><rect x="253.8" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.06%)</title><rect x="253.8" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1 samples, 0.06%)</title><rect x="253.8" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1061/2141953227.apply (1 samples, 0.06%)</title><rect x="253.8" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (1 samples, 0.06%)</title><rect x="253.8" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.8" y="1150.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.06%)</title><rect x="253.8" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$939/640950460.apply (2 samples, 0.12%)</title><rect x="254.5" y="1331.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (2 samples, 0.12%)</title><rect x="254.5" y="1315.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.5" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1140/1622326195.apply (2 samples, 0.12%)</title><rect x="254.5" y="1299.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.5" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (2 samples, 0.12%)</title><rect x="254.5" y="1283.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.5" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (2 samples, 0.12%)</title><rect x="254.5" y="1267.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.5" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.12%)</title><rect x="254.5" y="1251.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.5" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.12%)</title><rect x="254.5" y="1235.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.5" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.12%)</title><rect x="254.5" y="1219.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.5" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.12%)</title><rect x="254.5" y="1203.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.5" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (2 samples, 0.12%)</title><rect x="254.5" y="1187.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (2 samples, 0.12%)</title><rect x="254.5" y="1171.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.5" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (2 samples, 0.12%)</title><rect x="254.5" y="1155.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.5" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (2 samples, 0.12%)</title><rect x="254.5" y="1139.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.5" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (1 samples, 0.06%)</title><rect x="255.2" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.2" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.06%)</title><rect x="255.2" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.2" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="255.2" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.2" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="255.2" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.2" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (1 samples, 0.06%)</title><rect x="255.2" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.2" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (1 samples, 0.06%)</title><rect x="255.2" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.2" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.06%)</title><rect x="255.2" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.2" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="255.2" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.2" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="255.2" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="258.2" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (1 samples, 0.06%)</title><rect x="255.2" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.2" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (1 samples, 0.06%)</title><rect x="255.2" y="963.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.2" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (1 samples, 0.06%)</title><rect x="255.2" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.2" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (1 samples, 0.06%)</title><rect x="255.2" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.2" y="942.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (4 samples, 0.24%)</title><rect x="255.9" y="1347.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.9" y="1358.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="255.9" y="1331.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="258.9" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (3 samples, 0.18%)</title><rect x="256.6" y="1331.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.6" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (3 samples, 0.18%)</title><rect x="256.6" y="1315.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.6" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (3 samples, 0.18%)</title><rect x="256.6" y="1299.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.6" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (3 samples, 0.18%)</title><rect x="256.6" y="1283.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (2 samples, 0.12%)</title><rect x="256.6" y="1267.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.12%)</title><rect x="256.6" y="1251.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.12%)</title><rect x="256.6" y="1235.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (2 samples, 0.12%)</title><rect x="256.6" y="1219.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (2 samples, 0.12%)</title><rect x="256.6" y="1203.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (2 samples, 0.12%)</title><rect x="256.6" y="1187.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.6" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (2 samples, 0.12%)</title><rect x="256.6" y="1171.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$531/1963980755.apply (2 samples, 0.12%)</title><rect x="256.6" y="1155.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (2 samples, 0.12%)</title><rect x="256.6" y="1139.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (2 samples, 0.12%)</title><rect x="256.6" y="1123.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.12%)</title><rect x="256.6" y="1107.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.12%)</title><rect x="256.6" y="1091.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.6" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.12%)</title><rect x="256.6" y="1075.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.6" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (2 samples, 0.12%)</title><rect x="256.6" y="1059.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.6" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.12%)</title><rect x="256.6" y="1043.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.6" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.12%)</title><rect x="256.6" y="1027.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.6" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.12%)</title><rect x="256.6" y="1011.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.6" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="256.6" y="995.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.6" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.12%)</title><rect x="256.6" y="979.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.6" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.12%)</title><rect x="256.6" y="963.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.6" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="256.6" y="947.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.6" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.12%)</title><rect x="256.6" y="931.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.6" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.12%)</title><rect x="256.6" y="915.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.12%)</title><rect x="256.6" y="899.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.6" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.12%)</title><rect x="256.6" y="883.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="256.6" y="867.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.12%)</title><rect x="256.6" y="851.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.6" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="256.6" y="835.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.6" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.12%)</title><rect x="256.6" y="819.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="256.6" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="256.6" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.12%)</title><rect x="256.6" y="771.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="256.6" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="256.6" y="739.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="256.6" y="723.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.6" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="256.6" y="707.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="259.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="256.6" y="691.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="259.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="256.6" y="675.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="259.6" y="686.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="256.6" y="659.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.6" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="256.6" y="643.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="259.6" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="256.6" y="627.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.6" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="256.6" y="611.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="259.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="256.6" y="595.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="259.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="256.6" y="579.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.6" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.06%)</title><rect x="257.9" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.9" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="257.9" y="1251.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="257.9" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.9" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.06%)</title><rect x="257.9" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.06%)</title><rect x="257.9" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="257.9" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="257.9" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="257.9" y="1155.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="257.9" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="257.9" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="257.9" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.9" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="258.6" y="1379.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.6" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="258.6" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.6" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.06%)</title><rect x="258.6" y="1347.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.6" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (1 samples, 0.06%)</title><rect x="258.6" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.6" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="258.6" y="1315.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.6" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="258.6" y="1299.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (1 samples, 0.06%)</title><rect x="258.6" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (1 samples, 0.06%)</title><rect x="258.6" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (1 samples, 0.06%)</title><rect x="258.6" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.6" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1 samples, 0.06%)</title><rect x="258.6" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1319/618384686.apply (1 samples, 0.06%)</title><rect x="258.6" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$1$adapted (1 samples, 0.06%)</title><rect x="258.6" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$1 (1 samples, 0.06%)</title><rect x="258.6" y="1187.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.06%)</title><rect x="258.6" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.06%)</title><rect x="258.6" y="1155.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.06%)</title><rect x="258.6" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (1 samples, 0.06%)</title><rect x="258.6" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.06%)</title><rect x="258.6" y="1107.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.06%)</title><rect x="258.6" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.06%)</title><rect x="258.6" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.6" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="258.6" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.6" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="258.6" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.6" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="258.6" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.6" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="258.6" y="1011.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.6" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="258.6" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.6" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="258.6" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.6" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="258.6" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.6" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.06%)</title><rect x="258.6" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.6" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.06%)</title><rect x="258.6" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.6" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.06%)</title><rect x="258.6" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher$$Lambda$116/1640612861.apply$mcV$sp (1 samples, 0.06%)</title><rect x="259.3" y="1491.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.3" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.$anonfun$taskCleanup$1 (1 samples, 0.06%)</title><rect x="259.3" y="1475.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.3" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.addInhabitants (1 samples, 0.06%)</title><rect x="259.3" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.3" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.cleanup (3 samples, 0.18%)</title><rect x="260.0" y="1491.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.0" y="1502.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="260.0" y="1475.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="263.0" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (823 samples, 48.44%)</title><rect x="262.1" y="1523.0" width="571.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.1" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (823 samples, 48.44%)</title><rect x="262.1" y="1507.0" width="571.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.1" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.47%)</title><rect x="262.1" y="1491.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.1" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.24%)</title><rect x="262.8" y="1475.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.24%)</title><rect x="262.8" y="1459.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.8" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.24%)</title><rect x="262.8" y="1443.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.8" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.24%)</title><rect x="262.8" y="1427.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.8" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.24%)</title><rect x="262.8" y="1411.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.24%)</title><rect x="262.8" y="1395.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.24%)</title><rect x="262.8" y="1379.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.24%)</title><rect x="262.8" y="1363.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.24%)</title><rect x="262.8" y="1347.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="263.5" y="1331.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.5" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.18%)</title><rect x="263.5" y="1315.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="266.5" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="263.5" y="1299.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.5" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="263.5" y="1283.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="266.5" y="1294.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.18%)</title><rect x="263.5" y="1267.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.5" y="1278.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.18%)</title><rect x="263.5" y="1251.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="266.5" y="1262.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.18%)</title><rect x="263.5" y="1235.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.5" y="1246.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="264.2" y="1219.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="267.2" y="1230.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="264.9" y="1219.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="267.9" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="264.9" y="1203.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="267.9" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="264.9" y="1187.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="267.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (2 samples, 0.12%)</title><rect x="265.6" y="1475.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.hasSystemMessages (2 samples, 0.12%)</title><rect x="265.6" y="1459.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.6" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages$ (2 samples, 0.12%)</title><rect x="265.6" y="1443.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.6" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages (2 samples, 0.12%)</title><rect x="265.6" y="1427.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.6" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueueGet (2 samples, 0.12%)</title><rect x="265.6" y="1411.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.6" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.setAsScheduled (1 samples, 0.06%)</title><rect x="267.0" y="1475.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.0" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (1 samples, 0.06%)</title><rect x="267.0" y="1459.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.0" y="1470.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (1 samples, 0.06%)</title><rect x="267.0" y="1443.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.0" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (1 samples, 0.06%)</title><rect x="267.0" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.0" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (184 samples, 10.83%)</title><rect x="267.7" y="1491.0" width="127.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.7" y="1502.0">akka/dispatch/Ma..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (176 samples, 10.36%)</title><rect x="268.4" y="1475.0" width="122.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.4" y="1486.0">akka/actor/Acto..</text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (173 samples, 10.18%)</title><rect x="268.4" y="1459.0" width="120.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.4" y="1470.0">akka/actor/Acto..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (2 samples, 0.12%)</title><rect x="268.4" y="1443.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (2 samples, 0.12%)</title><rect x="268.4" y="1427.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (2 samples, 0.12%)</title><rect x="268.4" y="1411.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (1 samples, 0.06%)</title><rect x="268.4" y="1395.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="269.1" y="1395.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.1" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="269.1" y="1379.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$138/1968041430.apply$mcV$sp (1 samples, 0.06%)</title><rect x="269.1" y="1363.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (1 samples, 0.06%)</title><rect x="269.1" y="1347.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.06%)</title><rect x="269.1" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.06%)</title><rect x="269.1" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.06%)</title><rect x="269.1" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="269.1" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="269.1" y="1267.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="269.1" y="1251.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="269.1" y="1235.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="269.1" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.mergeTwoKeyValPairs (1 samples, 0.06%)</title><rect x="269.1" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.1" y="1214.0"></text>
</g>
<g>
<title>oop_arraycopy (1 samples, 0.06%)</title><rect x="269.1" y="1187.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="272.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (91 samples, 5.36%)</title><rect x="269.8" y="1443.0" width="63.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.8" y="1454.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (41 samples, 2.41%)</title><rect x="270.4" y="1427.0" width="28.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.4" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (1 samples, 0.06%)</title><rect x="270.4" y="1411.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (35 samples, 2.06%)</title><rect x="271.1" y="1411.0" width="24.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.1" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (31 samples, 1.82%)</title><rect x="271.1" y="1395.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.1" y="1406.0">a..</text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (31 samples, 1.82%)</title><rect x="271.1" y="1379.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.1" y="1390.0">a..</text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (30 samples, 1.77%)</title><rect x="271.1" y="1363.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (30 samples, 1.77%)</title><rect x="271.1" y="1347.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (20 samples, 1.18%)</title><rect x="271.8" y="1331.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.8" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (20 samples, 1.18%)</title><rect x="271.8" y="1315.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.8" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (13 samples, 0.77%)</title><rect x="271.8" y="1299.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.8" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (13 samples, 0.77%)</title><rect x="271.8" y="1283.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.77%)</title><rect x="271.8" y="1267.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.77%)</title><rect x="271.8" y="1251.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.77%)</title><rect x="271.8" y="1235.0" width="9.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="274.8" y="1246.0"></text>
</g>
<g>
<title>__write (13 samples, 0.77%)</title><rect x="271.8" y="1219.0" width="9.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="274.8" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.77%)</title><rect x="271.8" y="1203.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="274.8" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.77%)</title><rect x="271.8" y="1187.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="274.8" y="1198.0"></text>
</g>
<g>
<title>sys_write (13 samples, 0.77%)</title><rect x="271.8" y="1171.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="274.8" y="1182.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 0.77%)</title><rect x="271.8" y="1155.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="274.8" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (12 samples, 0.71%)</title><rect x="271.8" y="1139.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.8" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.71%)</title><rect x="271.8" y="1123.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.8" y="1134.0"></text>
</g>
<g>
<title>pipe_write (12 samples, 0.71%)</title><rect x="271.8" y="1107.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="274.8" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.65%)</title><rect x="271.8" y="1091.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="274.8" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.65%)</title><rect x="271.8" y="1075.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.8" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.65%)</title><rect x="271.8" y="1059.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.8" y="1070.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.06%)</title><rect x="279.5" y="1091.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="282.5" y="1102.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.06%)</title><rect x="279.5" y="1075.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="282.5" y="1086.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="280.2" y="1139.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.2" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="280.2" y="1123.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.2" y="1134.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="280.2" y="1107.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.2" y="1118.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="280.2" y="1091.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.2" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.&lt;init&gt; (2 samples, 0.12%)</title><rect x="280.9" y="1299.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (2 samples, 0.12%)</title><rect x="280.9" y="1283.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.12%)</title><rect x="280.9" y="1267.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (5 samples, 0.29%)</title><rect x="282.3" y="1299.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (5 samples, 0.29%)</title><rect x="282.3" y="1283.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (5 samples, 0.29%)</title><rect x="282.3" y="1267.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (5 samples, 0.29%)</title><rect x="282.3" y="1251.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (5 samples, 0.29%)</title><rect x="282.3" y="1235.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.isLocal (1 samples, 0.06%)</title><rect x="282.3" y="1219.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (4 samples, 0.24%)</title><rect x="282.9" y="1219.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/862702382.apply$mcV$sp (4 samples, 0.24%)</title><rect x="282.9" y="1203.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (4 samples, 0.24%)</title><rect x="282.9" y="1187.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (2 samples, 0.12%)</title><rect x="282.9" y="1171.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (2 samples, 0.12%)</title><rect x="282.9" y="1155.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="282.9" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.9" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="282.9" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$551/1957729612.apply$mcV$sp (1 samples, 0.06%)</title><rect x="282.9" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.9" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$addWatcher$1 (1 samples, 0.06%)</title><rect x="282.9" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.06%)</title><rect x="282.9" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.06%)</title><rect x="282.9" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.06%)</title><rect x="282.9" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="282.9" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="282.9" y="1011.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="282.9" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.mergeTwoKeyValPairs (1 samples, 0.06%)</title><rect x="282.9" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.contains (1 samples, 0.06%)</title><rect x="283.6" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.contains (1 samples, 0.06%)</title><rect x="283.6" y="1123.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.6" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="283.6" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.6" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="283.6" y="1091.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (1 samples, 0.06%)</title><rect x="283.6" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.6" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (1 samples, 0.06%)</title><rect x="284.3" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.updated (1 samples, 0.06%)</title><rect x="284.3" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.updated (1 samples, 0.06%)</title><rect x="284.3" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.3" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="285.0" y="1171.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="288.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (9 samples, 0.53%)</title><rect x="285.7" y="1331.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (9 samples, 0.53%)</title><rect x="285.7" y="1315.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.7" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (3 samples, 0.18%)</title><rect x="285.7" y="1299.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (3 samples, 0.18%)</title><rect x="285.7" y="1283.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (3 samples, 0.18%)</title><rect x="285.7" y="1267.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (3 samples, 0.18%)</title><rect x="285.7" y="1251.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (3 samples, 0.18%)</title><rect x="285.7" y="1235.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.7" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="285.7" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/862702382.apply$mcV$sp (1 samples, 0.06%)</title><rect x="285.7" y="1203.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (1 samples, 0.06%)</title><rect x="285.7" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="285.7" y="1171.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (1 samples, 0.06%)</title><rect x="285.7" y="1155.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="285.7" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="285.7" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$551/1957729612.apply$mcV$sp (1 samples, 0.06%)</title><rect x="285.7" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$addWatcher$1 (1 samples, 0.06%)</title><rect x="285.7" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.06%)</title><rect x="285.7" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.06%)</title><rect x="285.7" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.06%)</title><rect x="285.7" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="285.7" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="285.7" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="285.7" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.mergeTwoKeyValPairs (1 samples, 0.06%)</title><rect x="285.7" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.7" y="990.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.12%)</title><rect x="286.4" y="1219.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="289.4" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (1 samples, 0.06%)</title><rect x="287.8" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (1 samples, 0.06%)</title><rect x="287.8" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="287.8" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (1 samples, 0.06%)</title><rect x="287.8" y="1251.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (1 samples, 0.06%)</title><rect x="287.8" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (1 samples, 0.06%)</title><rect x="287.8" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.8" y="1230.0"></text>
</g>
<g>
<title>socket (1 samples, 0.06%)</title><rect x="287.8" y="1203.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="290.8" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="287.8" y="1187.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.8" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="287.8" y="1171.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.8" y="1182.0"></text>
</g>
<g>
<title>sys_socket (1 samples, 0.06%)</title><rect x="287.8" y="1155.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="290.8" y="1166.0"></text>
</g>
<g>
<title>__sock_create (1 samples, 0.06%)</title><rect x="287.8" y="1139.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="290.8" y="1150.0"></text>
</g>
<g>
<title>inet6_create (1 samples, 0.06%)</title><rect x="287.8" y="1123.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.8" y="1134.0"></text>
</g>
<g>
<title>sk_alloc (1 samples, 0.06%)</title><rect x="287.8" y="1107.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.8" y="1118.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="287.8" y="1091.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (3 samples, 0.18%)</title><rect x="288.5" y="1299.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (3 samples, 0.18%)</title><rect x="288.5" y="1283.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="288.5" y="1267.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="288.5" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="288.5" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (1 samples, 0.06%)</title><rect x="288.5" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (2 samples, 0.12%)</title><rect x="289.2" y="1267.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.2" y="1278.0"></text>
</g>
<g>
<title>__fcntl (2 samples, 0.12%)</title><rect x="289.2" y="1251.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="292.2" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="289.9" y="1235.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.9" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="289.9" y="1219.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.9" y="1230.0"></text>
</g>
<g>
<title>sys_fcntl (1 samples, 0.06%)</title><rect x="289.9" y="1203.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="292.9" y="1214.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="289.9" y="1187.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="292.9" y="1198.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.12%)</title><rect x="290.6" y="1299.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1326/627523459.apply (2 samples, 0.12%)</title><rect x="290.6" y="1283.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.6" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$new$3$adapted (2 samples, 0.12%)</title><rect x="290.6" y="1267.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.6" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$new$3 (2 samples, 0.12%)</title><rect x="290.6" y="1251.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (1 samples, 0.06%)</title><rect x="292.0" y="1363.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (1 samples, 0.06%)</title><rect x="292.0" y="1347.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (1 samples, 0.06%)</title><rect x="292.0" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.addAll (1 samples, 0.06%)</title><rect x="292.0" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (1 samples, 0.06%)</title><rect x="292.0" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (1 samples, 0.06%)</title><rect x="292.0" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (4 samples, 0.24%)</title><rect x="292.7" y="1395.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$533/17680342.apply (4 samples, 0.24%)</title><rect x="292.7" y="1379.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.7" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (4 samples, 0.24%)</title><rect x="292.7" y="1363.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.7" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (4 samples, 0.24%)</title><rect x="292.7" y="1347.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (1 samples, 0.06%)</title><rect x="293.4" y="1331.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.06%)</title><rect x="293.4" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.06%)</title><rect x="293.4" y="1299.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.06%)</title><rect x="293.4" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.4" y="1294.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$.apply (2 samples, 0.12%)</title><rect x="294.1" y="1331.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (1 samples, 0.06%)</title><rect x="295.5" y="1411.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.receive (1 samples, 0.06%)</title><rect x="296.1" y="1411.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.1" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="296.8" y="1411.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="299.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.12%)</title><rect x="297.5" y="1411.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.receive (1 samples, 0.06%)</title><rect x="298.2" y="1395.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.2" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (48 samples, 2.83%)</title><rect x="298.9" y="1427.0" width="33.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.9" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (48 samples, 2.83%)</title><rect x="298.9" y="1411.0" width="33.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.9" y="1422.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (48 samples, 2.83%)</title><rect x="298.9" y="1395.0" width="33.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.9" y="1406.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (48 samples, 2.83%)</title><rect x="298.9" y="1379.0" width="33.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.9" y="1390.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (2 samples, 0.12%)</title><rect x="299.6" y="1363.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (2 samples, 0.12%)</title><rect x="299.6" y="1347.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (2 samples, 0.12%)</title><rect x="299.6" y="1331.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (2 samples, 0.12%)</title><rect x="299.6" y="1315.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.stop (2 samples, 0.12%)</title><rect x="299.6" y="1299.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.sendSystemMessage (2 samples, 0.12%)</title><rect x="299.6" y="1283.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.6" y="1294.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="300.3" y="1267.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (45 samples, 2.65%)</title><rect x="301.0" y="1363.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.0" y="1374.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (43 samples, 2.53%)</title><rect x="301.0" y="1347.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.0" y="1358.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (8 samples, 0.47%)</title><rect x="301.0" y="1331.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.0" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.preStart (2 samples, 0.12%)</title><rect x="301.0" y="1315.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.0" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.failureCallback (1 samples, 0.06%)</title><rect x="301.0" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.failureCallback$lzycompute (1 samples, 0.06%)</title><rect x="301.0" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.0" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (1 samples, 0.06%)</title><rect x="301.7" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.7" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (1 samples, 0.06%)</title><rect x="301.7" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.7" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (1 samples, 0.06%)</title><rect x="301.7" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (1 samples, 0.06%)</title><rect x="301.7" y="1251.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (1 samples, 0.06%)</title><rect x="301.7" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (1 samples, 0.06%)</title><rect x="301.7" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.06%)</title><rect x="301.7" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="301.7" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (2 samples, 0.12%)</title><rect x="302.4" y="1315.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (1 samples, 0.06%)</title><rect x="302.4" y="1299.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.4" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$greater (1 samples, 0.06%)</title><rect x="302.4" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.4" y="1294.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$ (1 samples, 0.06%)</title><rect x="302.4" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.4" y="1278.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater (1 samples, 0.06%)</title><rect x="302.4" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.4" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="302.4" y="1235.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="302.4" y="1219.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.4" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (1 samples, 0.06%)</title><rect x="302.4" y="1203.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.4" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (1 samples, 0.06%)</title><rect x="302.4" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.4" y="1198.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (1 samples, 0.06%)</title><rect x="302.4" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.4" y="1182.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (1 samples, 0.06%)</title><rect x="302.4" y="1155.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (1 samples, 0.06%)</title><rect x="303.1" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (1 samples, 0.06%)</title><rect x="303.1" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.06%)</title><rect x="303.1" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (1 samples, 0.06%)</title><rect x="303.1" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.1" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="303.1" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.1" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="303.1" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (3 samples, 0.18%)</title><rect x="303.8" y="1315.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (3 samples, 0.18%)</title><rect x="303.8" y="1299.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (3 samples, 0.18%)</title><rect x="303.8" y="1283.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (3 samples, 0.18%)</title><rect x="303.8" y="1267.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (3 samples, 0.18%)</title><rect x="303.8" y="1251.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (3 samples, 0.18%)</title><rect x="303.8" y="1235.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (3 samples, 0.18%)</title><rect x="303.8" y="1219.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (3 samples, 0.18%)</title><rect x="303.8" y="1203.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="303.8" y="1187.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="303.8" y="1171.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="303.8" y="1155.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="303.8" y="1139.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="303.8" y="1123.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="303.8" y="1107.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="303.8" y="1091.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.18%)</title><rect x="303.8" y="1075.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="303.8" y="1059.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="303.8" y="1043.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="303.8" y="1027.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.8" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.18%)</title><rect x="303.8" y="1011.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="306.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="304.5" y="995.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="304.5" y="979.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="307.5" y="990.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="304.5" y="963.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.5" y="974.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="304.5" y="947.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.5" y="958.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="304.5" y="931.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="307.5" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.06%)</title><rect x="304.5" y="915.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.5" y="926.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="305.2" y="915.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="308.2" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="305.2" y="899.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="308.2" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="305.2" y="883.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="308.2" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (1 samples, 0.06%)</title><rect x="305.9" y="1315.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.06%)</title><rect x="305.9" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (5 samples, 0.29%)</title><rect x="306.6" y="1331.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.6" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (5 samples, 0.29%)</title><rect x="306.6" y="1315.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="306.6" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="306.6" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (4 samples, 0.24%)</title><rect x="307.3" y="1299.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (4 samples, 0.24%)</title><rect x="307.3" y="1283.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.3" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (4 samples, 0.24%)</title><rect x="307.3" y="1267.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.3" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (4 samples, 0.24%)</title><rect x="307.3" y="1251.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.3" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (4 samples, 0.24%)</title><rect x="307.3" y="1235.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.3" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (4 samples, 0.24%)</title><rect x="307.3" y="1219.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (4 samples, 0.24%)</title><rect x="307.3" y="1203.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (4 samples, 0.24%)</title><rect x="307.3" y="1187.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (4 samples, 0.24%)</title><rect x="307.3" y="1171.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (4 samples, 0.24%)</title><rect x="307.3" y="1155.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (3 samples, 0.18%)</title><rect x="308.0" y="1139.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.18%)</title><rect x="308.0" y="1123.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.0" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.18%)</title><rect x="308.0" y="1107.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.0" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="309.3" y="1091.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="312.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (30 samples, 1.77%)</title><rect x="310.0" y="1331.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.0" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (30 samples, 1.77%)</title><rect x="310.0" y="1315.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (24 samples, 1.41%)</title><rect x="310.0" y="1299.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onUpstreamFinish (1 samples, 0.06%)</title><rect x="310.0" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (1 samples, 0.06%)</title><rect x="310.0" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="310.0" y="1251.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.06%)</title><rect x="310.0" y="1235.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="310.0" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="310.0" y="1203.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (2 samples, 0.12%)</title><rect x="310.7" y="1283.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onPull (1 samples, 0.06%)</title><rect x="310.7" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.isClosed (1 samples, 0.06%)</title><rect x="310.7" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="310.7" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (1 samples, 0.06%)</title><rect x="311.4" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.06%)</title><rect x="311.4" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="311.4" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="311.4" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="311.4" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="311.4" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="311.4" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="311.4" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="311.4" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="311.4" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="311.4" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="311.4" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="311.4" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="311.4" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="311.4" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="311.4" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="311.4" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="311.4" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="311.4" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="311.4" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.4" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="311.4" y="947.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="314.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="311.4" y="931.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="314.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="311.4" y="915.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="314.4" y="926.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="311.4" y="899.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.4" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="311.4" y="883.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="314.4" y="894.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="311.4" y="867.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="314.4" y="878.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="311.4" y="851.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.4" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="311.4" y="835.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.4" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="311.4" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="314.4" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (21 samples, 1.24%)</title><rect x="312.1" y="1283.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (19 samples, 1.12%)</title><rect x="312.8" y="1267.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.8" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (19 samples, 1.12%)</title><rect x="312.8" y="1251.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.8" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (19 samples, 1.12%)</title><rect x="312.8" y="1235.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.8" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (19 samples, 1.12%)</title><rect x="312.8" y="1219.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.8" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (19 samples, 1.12%)</title><rect x="312.8" y="1203.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.8" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (19 samples, 1.12%)</title><rect x="312.8" y="1187.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.8" y="1198.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="312.8" y="1171.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="315.8" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (18 samples, 1.06%)</title><rect x="313.5" y="1171.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.5" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (18 samples, 1.06%)</title><rect x="313.5" y="1155.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (18 samples, 1.06%)</title><rect x="313.5" y="1139.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (18 samples, 1.06%)</title><rect x="313.5" y="1123.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (18 samples, 1.06%)</title><rect x="313.5" y="1107.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (17 samples, 1.00%)</title><rect x="313.5" y="1091.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (17 samples, 1.00%)</title><rect x="313.5" y="1075.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (15 samples, 0.88%)</title><rect x="313.5" y="1059.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.5" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (14 samples, 0.82%)</title><rect x="314.2" y="1043.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.2" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (13 samples, 0.77%)</title><rect x="314.9" y="1027.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.9" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (13 samples, 0.77%)</title><rect x="314.9" y="1011.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.9" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (13 samples, 0.77%)</title><rect x="314.9" y="995.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (13 samples, 0.77%)</title><rect x="314.9" y="979.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (13 samples, 0.77%)</title><rect x="314.9" y="963.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.9" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (13 samples, 0.77%)</title><rect x="314.9" y="947.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.9" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (1 samples, 0.06%)</title><rect x="314.9" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.9" y="942.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="314.9" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.9" y="926.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="314.9" y="899.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.9" y="910.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="314.9" y="883.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (12 samples, 0.71%)</title><rect x="315.6" y="931.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.6" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (12 samples, 0.71%)</title><rect x="315.6" y="915.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.71%)</title><rect x="315.6" y="899.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.71%)</title><rect x="315.6" y="883.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.71%)</title><rect x="315.6" y="867.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.71%)</title><rect x="315.6" y="851.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.71%)</title><rect x="315.6" y="835.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.71%)</title><rect x="315.6" y="819.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.71%)</title><rect x="315.6" y="803.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.71%)</title><rect x="315.6" y="787.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (2 samples, 0.12%)</title><rect x="315.6" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (2 samples, 0.12%)</title><rect x="315.6" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.59%)</title><rect x="317.0" y="771.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.59%)</title><rect x="317.0" y="755.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="317.0" y="739.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="320.0" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.06%)</title><rect x="317.0" y="723.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="320.0" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.53%)</title><rect x="317.7" y="739.0" width="6.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="320.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.41%)</title><rect x="319.1" y="723.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="322.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.41%)</title><rect x="319.1" y="707.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="322.1" y="718.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.41%)</title><rect x="319.1" y="691.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="322.1" y="702.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.41%)</title><rect x="319.1" y="675.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.41%)</title><rect x="319.1" y="659.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="322.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.35%)</title><rect x="319.8" y="643.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.8" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.35%)</title><rect x="319.8" y="627.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="322.8" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.35%)</title><rect x="319.8" y="611.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="322.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.12%)</title><rect x="323.9" y="1059.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (2 samples, 0.12%)</title><rect x="323.9" y="1043.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.9" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (2 samples, 0.12%)</title><rect x="323.9" y="1027.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="325.3" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.06%)</title><rect x="325.3" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.06%)</title><rect x="325.3" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.06%)</title><rect x="325.3" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onPush (1 samples, 0.06%)</title><rect x="326.0" y="1267.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1175/1894967220.apply (1 samples, 0.06%)</title><rect x="326.0" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$4 (1 samples, 0.06%)</title><rect x="326.0" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.0" y="1246.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (1 samples, 0.06%)</title><rect x="326.0" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.0" y="1230.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (1 samples, 0.06%)</title><rect x="326.0" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="326.0" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="326.0" y="1171.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.0" y="1182.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (1 samples, 0.06%)</title><rect x="326.0" y="1155.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.06%)</title><rect x="326.0" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.06%)</title><rect x="326.0" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (4 samples, 0.24%)</title><rect x="326.7" y="1299.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$5.onPull (1 samples, 0.06%)</title><rect x="326.7" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport.akka$http$impl$engine$server$HttpServerBluePrint$RequestTimeoutSupport$$requestIn (1 samples, 0.06%)</title><rect x="326.7" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$7.onPull (1 samples, 0.06%)</title><rect x="327.4" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport.akka$http$impl$engine$server$HttpServerBluePrint$RequestTimeoutSupport$$responseIn (1 samples, 0.06%)</title><rect x="327.4" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPull (1 samples, 0.06%)</title><rect x="328.1" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.06%)</title><rect x="328.1" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="328.1" y="1251.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (1 samples, 0.06%)</title><rect x="328.8" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (1 samples, 0.06%)</title><rect x="328.8" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (1 samples, 0.06%)</title><rect x="329.5" y="1299.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.5" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="330.2" y="1299.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="333.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (1 samples, 0.06%)</title><rect x="330.9" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (1 samples, 0.06%)</title><rect x="330.9" y="1331.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.06%)</title><rect x="331.6" y="1347.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.06%)</title><rect x="331.6" y="1331.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.06%)</title><rect x="331.6" y="1315.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$EmptySet$.incl (1 samples, 0.06%)</title><rect x="331.6" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.6" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.06%)</title><rect x="332.3" y="1427.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.isTerminated (1 samples, 0.06%)</title><rect x="333.0" y="1443.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (29 samples, 1.71%)</title><rect x="333.6" y="1443.0" width="20.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (26 samples, 1.53%)</title><rect x="334.3" y="1427.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (26 samples, 1.53%)</title><rect x="334.3" y="1411.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (19 samples, 1.12%)</title><rect x="334.3" y="1395.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (19 samples, 1.12%)</title><rect x="334.3" y="1379.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (19 samples, 1.12%)</title><rect x="334.3" y="1363.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (19 samples, 1.12%)</title><rect x="334.3" y="1347.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (19 samples, 1.12%)</title><rect x="334.3" y="1331.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (19 samples, 1.12%)</title><rect x="334.3" y="1315.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (19 samples, 1.12%)</title><rect x="334.3" y="1299.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (19 samples, 1.12%)</title><rect x="334.3" y="1283.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (19 samples, 1.12%)</title><rect x="334.3" y="1267.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (19 samples, 1.12%)</title><rect x="334.3" y="1251.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (19 samples, 1.12%)</title><rect x="334.3" y="1235.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (19 samples, 1.12%)</title><rect x="334.3" y="1219.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (19 samples, 1.12%)</title><rect x="334.3" y="1203.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (19 samples, 1.12%)</title><rect x="334.3" y="1187.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 1.12%)</title><rect x="334.3" y="1171.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.94%)</title><rect x="336.4" y="1155.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.4" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.94%)</title><rect x="336.4" y="1139.0" width="11.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="339.4" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.88%)</title><rect x="337.1" y="1123.0" width="10.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.1" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.88%)</title><rect x="337.1" y="1107.0" width="10.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="340.1" y="1118.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.88%)</title><rect x="337.1" y="1091.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="340.1" y="1102.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.88%)</title><rect x="337.1" y="1075.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="340.1" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="337.8" y="1059.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="340.8" y="1070.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.77%)</title><rect x="338.5" y="1059.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.5" y="1070.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.06%)</title><rect x="338.5" y="1043.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="341.5" y="1054.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.06%)</title><rect x="338.5" y="1027.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.5" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.71%)</title><rect x="339.2" y="1043.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.2" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.71%)</title><rect x="339.2" y="1027.0" width="8.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="342.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.71%)</title><rect x="339.2" y="1011.0" width="8.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="342.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (7 samples, 0.41%)</title><rect x="347.5" y="1395.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.&lt;init&gt; (3 samples, 0.18%)</title><rect x="348.2" y="1379.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (2 samples, 0.12%)</title><rect x="350.3" y="1379.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (2 samples, 0.12%)</title><rect x="350.3" y="1363.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (2 samples, 0.12%)</title><rect x="350.3" y="1347.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Props.actorClass (1 samples, 0.06%)</title><rect x="350.3" y="1331.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props.cachedActorClass (1 samples, 0.06%)</title><rect x="350.3" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.06%)</title><rect x="350.3" y="1299.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.3" y="1310.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="350.3" y="1283.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.3" y="1294.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="350.3" y="1267.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="353.3" y="1278.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="350.3" y="1251.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="353.3" y="1262.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="351.0" y="1331.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="354.0" y="1342.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="351.0" y="1315.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.0" y="1326.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="351.0" y="1299.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="354.0" y="1310.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.06%)</title><rect x="351.0" y="1283.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (1 samples, 0.06%)</title><rect x="351.7" y="1379.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (2 samples, 0.12%)</title><rect x="352.4" y="1427.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (2 samples, 0.12%)</title><rect x="352.4" y="1411.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (1 samples, 0.06%)</title><rect x="353.1" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (1 samples, 0.06%)</title><rect x="353.1" y="1379.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.06%)</title><rect x="353.1" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.06%)</title><rect x="353.1" y="1347.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (1 samples, 0.06%)</title><rect x="353.1" y="1331.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (38 samples, 2.24%)</title><rect x="353.8" y="1443.0" width="26.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.8" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (38 samples, 2.24%)</title><rect x="353.8" y="1427.0" width="26.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.8" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (38 samples, 2.24%)</title><rect x="353.8" y="1411.0" width="26.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.isTerminating (1 samples, 0.06%)</title><rect x="353.8" y="1395.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.isTerminating$ (1 samples, 0.06%)</title><rect x="353.8" y="1379.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.isTerminating (1 samples, 0.06%)</title><rect x="353.8" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (37 samples, 2.18%)</title><rect x="354.5" y="1395.0" width="25.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.5" y="1406.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (3 samples, 0.18%)</title><rect x="354.5" y="1379.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.5" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (3 samples, 0.18%)</title><rect x="354.5" y="1363.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.5" y="1374.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="355.9" y="1347.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.9" y="1358.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="355.9" y="1331.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.9" y="1342.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="355.9" y="1315.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="358.9" y="1326.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="355.9" y="1299.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.9" y="1310.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="355.9" y="1283.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.9" y="1294.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="355.9" y="1267.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.9" y="1278.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="355.9" y="1251.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="358.9" y="1262.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="355.9" y="1235.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (11 samples, 0.65%)</title><rect x="356.6" y="1379.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (11 samples, 0.65%)</title><rect x="356.6" y="1363.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (1 samples, 0.06%)</title><rect x="356.6" y="1347.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.6" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (10 samples, 0.59%)</title><rect x="357.3" y="1347.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.3" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (2 samples, 0.12%)</title><rect x="359.3" y="1331.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (1 samples, 0.06%)</title><rect x="360.0" y="1315.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.set (1 samples, 0.06%)</title><rect x="360.0" y="1299.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (1 samples, 0.06%)</title><rect x="360.0" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (4 samples, 0.24%)</title><rect x="360.7" y="1331.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (2 samples, 0.12%)</title><rect x="360.7" y="1315.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (2 samples, 0.12%)</title><rect x="362.1" y="1315.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (2 samples, 0.12%)</title><rect x="362.1" y="1299.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (2 samples, 0.12%)</title><rect x="362.1" y="1283.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.1" y="1294.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="363.5" y="1331.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.5" y="1342.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="363.5" y="1315.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.5" y="1326.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="363.5" y="1299.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.5" y="1310.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="363.5" y="1283.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="366.5" y="1294.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="363.5" y="1267.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="366.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stopFunctionRefs (1 samples, 0.06%)</title><rect x="364.2" y="1379.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs$ (1 samples, 0.06%)</title><rect x="364.2" y="1363.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs (1 samples, 0.06%)</title><rect x="364.2" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.06%)</title><rect x="364.2" y="1331.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.2" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="364.2" y="1315.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="364.2" y="1299.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.06%)</title><rect x="364.2" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (14 samples, 0.82%)</title><rect x="364.9" y="1379.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (14 samples, 0.82%)</title><rect x="364.9" y="1363.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (14 samples, 0.82%)</title><rect x="364.9" y="1347.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (14 samples, 0.82%)</title><rect x="364.9" y="1331.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (13 samples, 0.77%)</title><rect x="364.9" y="1315.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (13 samples, 0.77%)</title><rect x="364.9" y="1299.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.77%)</title><rect x="364.9" y="1283.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.9" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.77%)</title><rect x="364.9" y="1267.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.77%)</title><rect x="364.9" y="1251.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (13 samples, 0.77%)</title><rect x="364.9" y="1235.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.77%)</title><rect x="364.9" y="1219.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.77%)</title><rect x="364.9" y="1203.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.77%)</title><rect x="364.9" y="1187.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.77%)</title><rect x="364.9" y="1171.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.77%)</title><rect x="364.9" y="1155.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.77%)</title><rect x="364.9" y="1139.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.9" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.12%)</title><rect x="364.9" y="1123.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="367.9" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="365.6" y="1107.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="368.6" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.65%)</title><rect x="366.3" y="1123.0" width="7.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="369.3" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.59%)</title><rect x="367.0" y="1107.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.0" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.59%)</title><rect x="367.0" y="1091.0" width="6.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.0" y="1102.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.59%)</title><rect x="367.0" y="1075.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.0" y="1086.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.59%)</title><rect x="367.0" y="1059.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.0" y="1070.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.53%)</title><rect x="367.7" y="1043.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="370.7" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.53%)</title><rect x="367.7" y="1027.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="370.7" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.53%)</title><rect x="367.7" y="1011.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="370.7" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.53%)</title><rect x="367.7" y="995.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="370.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (1 samples, 0.06%)</title><rect x="373.9" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (8 samples, 0.47%)</title><rect x="374.6" y="1379.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (8 samples, 0.47%)</title><rect x="374.6" y="1363.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (8 samples, 0.47%)</title><rect x="374.6" y="1347.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.6" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (8 samples, 0.47%)</title><rect x="374.6" y="1331.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.6" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (7 samples, 0.41%)</title><rect x="374.6" y="1315.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.35%)</title><rect x="374.6" y="1299.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (6 samples, 0.35%)</title><rect x="374.6" y="1283.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (6 samples, 0.35%)</title><rect x="374.6" y="1267.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.29%)</title><rect x="375.3" y="1251.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (5 samples, 0.29%)</title><rect x="375.3" y="1235.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (4 samples, 0.24%)</title><rect x="376.0" y="1219.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (4 samples, 0.24%)</title><rect x="376.0" y="1203.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (2 samples, 0.12%)</title><rect x="376.0" y="1187.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (1 samples, 0.06%)</title><rect x="376.7" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (1 samples, 0.06%)</title><rect x="376.7" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="376.7" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.7" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="376.7" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.7" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="376.7" y="1107.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="379.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (2 samples, 0.12%)</title><rect x="377.4" y="1187.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (2 samples, 0.12%)</title><rect x="377.4" y="1171.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.fillNull (2 samples, 0.12%)</title><rect x="377.4" y="1155.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.4" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.12%)</title><rect x="377.4" y="1139.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.4" y="1150.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="377.4" y="1123.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="380.4" y="1134.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="377.4" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.4" y="1118.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="377.4" y="1091.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="380.4" y="1102.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="377.4" y="1075.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="380.4" y="1086.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="377.4" y="1059.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="380.4" y="1070.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="377.4" y="1043.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="380.4" y="1054.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="377.4" y="1027.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.4" y="1038.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="377.4" y="1011.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="380.4" y="1022.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="377.4" y="995.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="380.4" y="1006.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="378.1" y="1123.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.1" y="1134.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="378.1" y="1107.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="381.1" y="1118.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="378.1" y="1091.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.1" y="1102.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="378.1" y="1075.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.1" y="1086.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="378.1" y="1059.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="381.1" y="1070.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (1 samples, 0.06%)</title><rect x="378.1" y="1043.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.1" y="1054.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="378.1" y="1027.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.1" y="1038.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="378.1" y="1011.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.1" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="378.1" y="995.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.1" y="1006.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="378.8" y="1299.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.8" y="1310.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="378.8" y="1283.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.8" y="1294.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="378.8" y="1267.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.8" y="1278.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="378.8" y="1251.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.8" y="1262.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="378.8" y="1235.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.06%)</title><rect x="379.5" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (11 samples, 0.65%)</title><rect x="380.2" y="1443.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (11 samples, 0.65%)</title><rect x="380.2" y="1427.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (11 samples, 0.65%)</title><rect x="380.2" y="1411.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (6 samples, 0.35%)</title><rect x="380.2" y="1395.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (6 samples, 0.35%)</title><rect x="380.2" y="1379.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (6 samples, 0.35%)</title><rect x="380.2" y="1363.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (6 samples, 0.35%)</title><rect x="380.2" y="1347.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (6 samples, 0.35%)</title><rect x="380.2" y="1331.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (6 samples, 0.35%)</title><rect x="380.2" y="1315.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (6 samples, 0.35%)</title><rect x="380.2" y="1299.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (5 samples, 0.29%)</title><rect x="380.9" y="1283.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (5 samples, 0.29%)</title><rect x="380.9" y="1267.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (5 samples, 0.29%)</title><rect x="380.9" y="1251.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (5 samples, 0.29%)</title><rect x="380.9" y="1235.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (5 samples, 0.29%)</title><rect x="380.9" y="1219.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (5 samples, 0.29%)</title><rect x="380.9" y="1203.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (5 samples, 0.29%)</title><rect x="380.9" y="1187.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (5 samples, 0.29%)</title><rect x="380.9" y="1171.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (4 samples, 0.24%)</title><rect x="381.6" y="1155.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.12%)</title><rect x="381.6" y="1139.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.12%)</title><rect x="381.6" y="1123.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.12%)</title><rect x="381.6" y="1107.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.12%)</title><rect x="381.6" y="1091.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.12%)</title><rect x="381.6" y="1075.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.12%)</title><rect x="381.6" y="1059.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.12%)</title><rect x="381.6" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.12%)</title><rect x="381.6" y="1027.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.12%)</title><rect x="381.6" y="1011.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.06%)</title><rect x="381.6" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.06%)</title><rect x="381.6" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.06%)</title><rect x="381.6" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.06%)</title><rect x="381.6" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.06%)</title><rect x="381.6" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.06%)</title><rect x="381.6" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.06%)</title><rect x="381.6" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.06%)</title><rect x="381.6" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.6" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.06%)</title><rect x="381.6" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.6" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.06%)</title><rect x="381.6" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.6" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.&lt;init&gt; (1 samples, 0.06%)</title><rect x="381.6" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.6" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.left (1 samples, 0.06%)</title><rect x="382.3" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.key (1 samples, 0.06%)</title><rect x="383.0" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.value (1 samples, 0.06%)</title><rect x="383.7" y="1139.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (1 samples, 0.06%)</title><rect x="384.3" y="1395.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (1 samples, 0.06%)</title><rect x="384.3" y="1379.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor (1 samples, 0.06%)</title><rect x="384.3" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.3" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="384.3" y="1347.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="387.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (1 samples, 0.06%)</title><rect x="385.0" y="1395.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.06%)</title><rect x="385.0" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="385.0" y="1363.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="385.0" y="1347.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="385.0" y="1331.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (1 samples, 0.06%)</title><rect x="385.7" y="1395.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.06%)</title><rect x="385.7" y="1379.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.06%)</title><rect x="385.7" y="1363.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (1 samples, 0.06%)</title><rect x="385.7" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (2 samples, 0.12%)</title><rect x="386.4" y="1395.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.4" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="386.4" y="1379.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.4" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="387.1" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.hashCode (1 samples, 0.06%)</title><rect x="387.1" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.1" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="387.8" y="1443.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="390.8" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Create.unlink (2 samples, 0.12%)</title><rect x="388.5" y="1459.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.5" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Terminate.unlink (1 samples, 0.06%)</title><rect x="389.9" y="1459.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.9" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (7 samples, 0.41%)</title><rect x="390.6" y="1475.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (7 samples, 0.41%)</title><rect x="390.6" y="1459.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.6" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (7 samples, 0.41%)</title><rect x="390.6" y="1443.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.6" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (6 samples, 0.35%)</title><rect x="391.3" y="1427.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.3" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (6 samples, 0.35%)</title><rect x="391.3" y="1411.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.3" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Create.next (1 samples, 0.06%)</title><rect x="392.0" y="1395.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.0" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/DeathWatchNotification.equals (1 samples, 0.06%)</title><rect x="392.7" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.7" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Supervise.equals (1 samples, 0.06%)</title><rect x="393.4" y="1395.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="1406.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="394.1" y="1395.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="397.1" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (629 samples, 37.02%)</title><rect x="395.5" y="1491.0" width="436.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.5" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (594 samples, 34.96%)</title><rect x="396.2" y="1475.0" width="412.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.2" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (4 samples, 0.24%)</title><rect x="396.2" y="1459.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receivedTerminated (1 samples, 0.06%)</title><rect x="396.2" y="1443.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated$ (1 samples, 0.06%)</title><rect x="396.2" y="1427.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated (1 samples, 0.06%)</title><rect x="396.2" y="1411.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.2" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (1 samples, 0.06%)</title><rect x="396.9" y="1443.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.9" y="1454.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="397.5" y="1443.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="400.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (6 samples, 0.35%)</title><rect x="398.9" y="1459.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (6 samples, 0.35%)</title><rect x="398.9" y="1443.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (5 samples, 0.29%)</title><rect x="399.6" y="1427.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (4 samples, 0.24%)</title><rect x="400.3" y="1411.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (4 samples, 0.24%)</title><rect x="400.3" y="1395.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (4 samples, 0.24%)</title><rect x="400.3" y="1379.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (4 samples, 0.24%)</title><rect x="400.3" y="1363.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.06%)</title><rect x="402.4" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce$ (1 samples, 0.06%)</title><rect x="402.4" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce (1 samples, 0.06%)</title><rect x="402.4" y="1315.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.06%)</title><rect x="402.4" y="1299.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="405.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.06%)</title><rect x="402.4" y="1283.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.4" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (1 samples, 0.06%)</title><rect x="402.4" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.4" y="1278.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (1 samples, 0.06%)</title><rect x="402.4" y="1251.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.4" y="1262.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (1 samples, 0.06%)</title><rect x="402.4" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="402.4" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="402.4" y="1203.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.4" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (1 samples, 0.06%)</title><rect x="402.4" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.4" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (1 samples, 0.06%)</title><rect x="402.4" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.4" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/RichLong.self (1 samples, 0.06%)</title><rect x="402.4" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.4" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (1 samples, 0.06%)</title><rect x="402.4" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.06%)</title><rect x="402.4" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (584 samples, 34.37%)</title><rect x="403.1" y="1459.0" width="405.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.1" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (1 samples, 0.06%)</title><rect x="407.3" y="1443.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.3" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (6 samples, 0.35%)</title><rect x="408.0" y="1443.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (6 samples, 0.35%)</title><rect x="408.0" y="1427.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (6 samples, 0.35%)</title><rect x="408.0" y="1411.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.0" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (6 samples, 0.35%)</title><rect x="408.0" y="1395.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.0" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishChanges (6 samples, 0.35%)</title><rect x="408.0" y="1379.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.0" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishDiff (6 samples, 0.35%)</title><rect x="408.0" y="1363.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.0" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffMemberEvents (5 samples, 0.29%)</title><rect x="408.0" y="1347.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.groupBy (2 samples, 0.12%)</title><rect x="408.0" y="1331.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.groupBy$ (2 samples, 0.12%)</title><rect x="408.0" y="1315.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.groupBy (2 samples, 0.12%)</title><rect x="408.0" y="1299.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (1 samples, 0.06%)</title><rect x="408.7" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.growTable (1 samples, 0.06%)</title><rect x="408.7" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatten (2 samples, 0.12%)</title><rect x="409.4" y="1331.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.flatten$ (2 samples, 0.12%)</title><rect x="409.4" y="1315.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.4" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="409.4" y="1299.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="412.4" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="409.4" y="1283.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="412.4" y="1294.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_call(Bytecodes::Code, methodHandle const&amp;, bool) (1 samples, 0.06%)</title><rect x="409.4" y="1267.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="412.4" y="1278.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.06%)</title><rect x="409.4" y="1251.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.4" y="1262.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="409.4" y="1235.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="412.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.flatten (1 samples, 0.06%)</title><rect x="410.0" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.06%)</title><rect x="410.0" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.06%)</title><rect x="410.0" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (1 samples, 0.06%)</title><rect x="410.0" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.findLeftMostOrPopOnEmpty (1 samples, 0.06%)</title><rect x="410.0" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.diff (1 samples, 0.06%)</title><rect x="410.7" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.diff (1 samples, 0.06%)</title><rect x="410.7" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.difference (1 samples, 0.06%)</title><rect x="410.7" y="1299.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$._difference (1 samples, 0.06%)</title><rect x="410.7" y="1283.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.join2 (1 samples, 0.06%)</title><rect x="410.7" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.splitLast (1 samples, 0.06%)</title><rect x="410.7" y="1251.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.splitLast (1 samples, 0.06%)</title><rect x="410.7" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.splitLast (1 samples, 0.06%)</title><rect x="410.7" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.7" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffRolesLeader (1 samples, 0.06%)</title><rect x="411.4" y="1347.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.4" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/Gossip.allRoles (1 samples, 0.06%)</title><rect x="411.4" y="1331.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.flatMap (1 samples, 0.06%)</title><rect x="411.4" y="1315.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSortedSetOps.flatMap$ (1 samples, 0.06%)</title><rect x="411.4" y="1299.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSortedSetOps.flatMap (1 samples, 0.06%)</title><rect x="411.4" y="1283.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (1 samples, 0.06%)</title><rect x="411.4" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.findLeftMostOrPopOnEmpty (1 samples, 0.06%)</title><rect x="411.4" y="1251.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.4" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (6 samples, 0.35%)</title><rect x="412.1" y="1443.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (6 samples, 0.35%)</title><rect x="412.1" y="1427.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (6 samples, 0.35%)</title><rect x="412.1" y="1411.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.1" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (6 samples, 0.35%)</title><rect x="412.1" y="1395.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.1" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (6 samples, 0.35%)</title><rect x="412.1" y="1379.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.1" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (6 samples, 0.35%)</title><rect x="412.1" y="1363.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.1" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (6 samples, 0.35%)</title><rect x="412.1" y="1347.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (6 samples, 0.35%)</title><rect x="412.1" y="1331.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (6 samples, 0.35%)</title><rect x="412.1" y="1315.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (6 samples, 0.35%)</title><rect x="412.1" y="1299.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (6 samples, 0.35%)</title><rect x="412.1" y="1283.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (6 samples, 0.35%)</title><rect x="412.1" y="1267.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (6 samples, 0.35%)</title><rect x="412.1" y="1251.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (5 samples, 0.29%)</title><rect x="412.8" y="1235.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (5 samples, 0.29%)</title><rect x="412.8" y="1219.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (5 samples, 0.29%)</title><rect x="412.8" y="1203.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.29%)</title><rect x="412.8" y="1187.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.29%)</title><rect x="412.8" y="1171.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.24%)</title><rect x="413.5" y="1155.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.18%)</title><rect x="414.2" y="1139.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.18%)</title><rect x="414.2" y="1123.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="414.2" y="1107.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="414.2" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="414.2" y="1075.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="414.2" y="1059.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="414.2" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="414.2" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="414.2" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.2" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="414.2" y="995.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="417.2" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.06%)</title><rect x="414.9" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.9" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/2038185019.apply (1 samples, 0.06%)</title><rect x="414.9" y="1027.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.9" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.06%)</title><rect x="414.9" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.9" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.06%)</title><rect x="414.9" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.9" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.06%)</title><rect x="414.9" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.9" y="990.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.06%)</title><rect x="415.6" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.6" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/2038185019.apply (1 samples, 0.06%)</title><rect x="415.6" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.6" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.06%)</title><rect x="415.6" y="1075.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.6" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.06%)</title><rect x="415.6" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.6" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.06%)</title><rect x="415.6" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.6" y="1054.0"></text>
</g>
<g>
<title>akka/event/DeadLetterListener.aroundReceive (1 samples, 0.06%)</title><rect x="416.3" y="1443.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.06%)</title><rect x="416.3" y="1427.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.06%)</title><rect x="416.3" y="1411.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.3" y="1422.0"></text>
</g>
<g>
<title>akka/event/DeadLetterListener.unhandled (1 samples, 0.06%)</title><rect x="416.3" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.unhandled$ (1 samples, 0.06%)</title><rect x="416.3" y="1379.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.3" y="1390.0"></text>
</g>
<g>
<title>akka/event/DeadLetterListener$$anonfun$akka$event$DeadLetterListener$$receiveWhenSuspended$1.applyOrElse (1 samples, 0.06%)</title><rect x="416.3" y="1363.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.3" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (6 samples, 0.35%)</title><rect x="417.0" y="1443.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (6 samples, 0.35%)</title><rect x="417.0" y="1427.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (6 samples, 0.35%)</title><rect x="417.0" y="1411.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.0" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (6 samples, 0.35%)</title><rect x="417.0" y="1395.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.0" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (5 samples, 0.29%)</title><rect x="417.0" y="1379.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.0" y="1390.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$899/2066170384.apply$mcV$sp (2 samples, 0.12%)</title><rect x="417.0" y="1363.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.0" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$3 (2 samples, 0.12%)</title><rect x="417.0" y="1347.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.0" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 0.12%)</title><rect x="417.0" y="1331.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.0" y="1342.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.12%)</title><rect x="417.0" y="1315.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.0" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.12%)</title><rect x="417.0" y="1299.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.0" y="1310.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.06%)</title><rect x="417.7" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.7" y="1294.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="417.7" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.7" y="1278.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="417.7" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.7" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.06%)</title><rect x="417.7" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.7" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (1 samples, 0.06%)</title><rect x="417.7" y="1219.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.7" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="417.7" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.7" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="417.7" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.7" y="1198.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.06%)</title><rect x="417.7" y="1171.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.7" y="1182.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.06%)</title><rect x="417.7" y="1155.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.7" y="1166.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.06%)</title><rect x="417.7" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.7" y="1150.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.06%)</title><rect x="417.7" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.7" y="1134.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.06%)</title><rect x="417.7" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.7" y="1118.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.06%)</title><rect x="417.7" y="1091.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.7" y="1102.0"></text>
</g>
<g>
<title>org/slf4j/MDC.clear (1 samples, 0.06%)</title><rect x="418.4" y="1363.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.06%)</title><rect x="418.4" y="1347.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.4" y="1358.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (1 samples, 0.06%)</title><rect x="419.1" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.1" y="1374.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (1 samples, 0.06%)</title><rect x="419.1" y="1347.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="419.1" y="1331.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.06%)</title><rect x="419.1" y="1315.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="419.8" y="1363.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="419.8" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="419.8" y="1331.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.8" y="1342.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="419.8" y="1315.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="422.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/582124024.linkToTargetMethod (1 samples, 0.06%)</title><rect x="420.5" y="1379.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="420.5" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.5" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$150/704274967.get$Lambda (1 samples, 0.06%)</title><rect x="420.5" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (39 samples, 2.30%)</title><rect x="421.2" y="1443.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.2" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (39 samples, 2.30%)</title><rect x="421.2" y="1427.0" width="27.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.2" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (39 samples, 2.30%)</title><rect x="421.2" y="1411.0" width="27.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="1422.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (39 samples, 2.30%)</title><rect x="421.2" y="1395.0" width="27.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="1406.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (2 samples, 0.12%)</title><rect x="421.2" y="1379.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithFeedback (2 samples, 0.12%)</title><rect x="421.2" y="1363.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.2" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.12%)</title><rect x="421.2" y="1347.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.2" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.12%)</title><rect x="421.2" y="1331.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (2 samples, 0.12%)</title><rect x="421.2" y="1315.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.12%)</title><rect x="421.2" y="1299.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.12%)</title><rect x="421.2" y="1283.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.12%)</title><rect x="421.2" y="1267.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="421.2" y="1251.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.12%)</title><rect x="421.2" y="1235.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.12%)</title><rect x="421.2" y="1219.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="421.2" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="421.2" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="421.2" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="421.2" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="421.2" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="421.2" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="421.2" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="421.2" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="421.2" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="421.2" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="421.2" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="421.2" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="421.2" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="421.2" y="995.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="421.2" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="421.2" y="963.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="424.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="421.2" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="424.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="421.2" y="931.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="424.2" y="942.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="421.2" y="915.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="424.2" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="421.2" y="899.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="424.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="421.2" y="883.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="421.2" y="867.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="424.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="421.2" y="851.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="424.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="421.2" y="835.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="424.2" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (1 samples, 0.06%)</title><rect x="421.9" y="1203.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (1 samples, 0.06%)</title><rect x="421.9" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (33 samples, 1.94%)</title><rect x="422.5" y="1379.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.5" y="1390.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (33 samples, 1.94%)</title><rect x="422.5" y="1363.0" width="23.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.5" y="1374.0">a..</text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.06%)</title><rect x="422.5" y="1347.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.5" y="1358.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.06%)</title><rect x="422.5" y="1331.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$$anon$1.genString (1 samples, 0.06%)</title><rect x="422.5" y="1315.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$$anon$1.genString (1 samples, 0.06%)</title><rect x="422.5" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="422.5" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="422.5" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.06%)</title><rect x="422.5" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="422.5" y="1235.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (21 samples, 1.24%)</title><rect x="423.2" y="1347.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.2" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (21 samples, 1.24%)</title><rect x="423.2" y="1331.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.2" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (3 samples, 0.18%)</title><rect x="423.2" y="1315.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (3 samples, 0.18%)</title><rect x="423.2" y="1299.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp$.apply (1 samples, 0.06%)</title><rect x="423.2" y="1283.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="423.2" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="423.2" y="1251.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="423.2" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.findExtension (1 samples, 0.06%)</title><rect x="423.2" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="423.2" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp$.hashCode (1 samples, 0.06%)</title><rect x="423.2" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (2 samples, 0.12%)</title><rect x="423.9" y="1283.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$.apply (1 samples, 0.06%)</title><rect x="423.9" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (1 samples, 0.06%)</title><rect x="423.9" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (1 samples, 0.06%)</title><rect x="423.9" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (1 samples, 0.06%)</title><rect x="423.9" y="1219.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map3.updated (1 samples, 0.06%)</title><rect x="423.9" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.join (1 samples, 0.06%)</title><rect x="424.6" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.joinMat (1 samples, 0.06%)</title><rect x="424.6" y="1251.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (1 samples, 0.06%)</title><rect x="424.6" y="1235.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.6" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="424.6" y="1219.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="427.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (18 samples, 1.06%)</title><rect x="425.3" y="1315.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (18 samples, 1.06%)</title><rect x="425.3" y="1299.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (18 samples, 1.06%)</title><rect x="425.3" y="1283.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (18 samples, 1.06%)</title><rect x="425.3" y="1267.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (18 samples, 1.06%)</title><rect x="425.3" y="1251.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1271/1957484972.apply (18 samples, 1.06%)</title><rect x="425.3" y="1235.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (18 samples, 1.06%)</title><rect x="425.3" y="1219.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (13 samples, 0.77%)</title><rect x="425.3" y="1203.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (13 samples, 0.77%)</title><rect x="425.3" y="1187.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (10 samples, 0.59%)</title><rect x="425.3" y="1171.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (9 samples, 0.53%)</title><rect x="425.3" y="1155.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (5 samples, 0.29%)</title><rect x="425.3" y="1139.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (2 samples, 0.12%)</title><rect x="425.3" y="1123.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insert (1 samples, 0.06%)</title><rect x="425.3" y="1107.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (1 samples, 0.06%)</title><rect x="425.3" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.newNodeIndex (1 samples, 0.06%)</title><rect x="425.3" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.3" y="1086.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="425.3" y="1059.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="428.3" y="1070.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="425.3" y="1043.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="428.3" y="1054.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="425.3" y="1027.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.3" y="1038.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="425.3" y="1011.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.3" y="1022.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="425.3" y="995.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.3" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="426.0" y="1107.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="429.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insert (1 samples, 0.06%)</title><rect x="426.7" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.06%)</title><rect x="427.4" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (1 samples, 0.06%)</title><rect x="427.4" y="1107.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="427.4" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (1 samples, 0.06%)</title><rect x="427.4" y="1075.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="427.4" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.apply (1 samples, 0.06%)</title><rect x="427.4" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.4" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="427.4" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.4" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="427.4" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.4" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="427.4" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14$$Lambda$485/7575494.apply (1 samples, 0.06%)</title><rect x="427.4" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.$anonfun$apply$14 (1 samples, 0.06%)</title><rect x="427.4" y="963.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.accept (1 samples, 0.06%)</title><rect x="427.4" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept$ (1 samples, 0.06%)</title><rect x="427.4" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.4" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept (1 samples, 0.06%)</title><rect x="427.4" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.4" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.rec$2 (1 samples, 0.06%)</title><rect x="427.4" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.4" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minusrange$minusdecl (1 samples, 0.06%)</title><rect x="427.4" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.4" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.media$minusrange$minusdecl$ (1 samples, 0.06%)</title><rect x="427.4" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.4" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.media$minusrange$minusdecl (1 samples, 0.06%)</title><rect x="427.4" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.4" y="862.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="427.4" y="835.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="430.4" y="846.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="427.4" y="819.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="430.4" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="427.4" y="803.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="430.4" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="427.4" y="787.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.4" y="798.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="427.4" y="771.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="430.4" y="782.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="427.4" y="755.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.4" y="766.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="427.4" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.4" y="750.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="427.4" y="723.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="430.4" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="427.4" y="707.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="430.4" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="427.4" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="430.4" y="702.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="427.4" y="675.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="430.4" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="427.4" y="659.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="430.4" y="670.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.06%)</title><rect x="427.4" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.4" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/util/EnhancedString$.toRootLowerCase$extension (1 samples, 0.06%)</title><rect x="428.1" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.06%)</title><rect x="428.1" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="428.1" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (4 samples, 0.24%)</title><rect x="428.8" y="1139.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (1 samples, 0.06%)</title><rect x="429.5" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (1 samples, 0.06%)</title><rect x="429.5" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="429.5" y="1091.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (1 samples, 0.06%)</title><rect x="429.5" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="429.5" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.apply (1 samples, 0.06%)</title><rect x="429.5" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.5" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="429.5" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.5" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="429.5" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.5" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="429.5" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18$$Lambda$483/1702178880.apply (1 samples, 0.06%)</title><rect x="429.5" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.$anonfun$apply$18 (1 samples, 0.06%)</title><rect x="429.5" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minuscontrol (1 samples, 0.06%)</title><rect x="429.5" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol$ (1 samples, 0.06%)</title><rect x="429.5" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.5" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol (1 samples, 0.06%)</title><rect x="429.5" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.5" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.rec$2 (1 samples, 0.06%)</title><rect x="429.5" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.5" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minusdirective (1 samples, 0.06%)</title><rect x="429.5" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.5" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective$ (1 samples, 0.06%)</title><rect x="429.5" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.5" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective (1 samples, 0.06%)</title><rect x="429.5" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.5" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (1 samples, 0.06%)</title><rect x="429.5" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.5" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/ParserInput$StringBasedParserInput.length (1 samples, 0.06%)</title><rect x="429.5" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.5" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (2 samples, 0.12%)</title><rect x="430.2" y="1123.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (2 samples, 0.12%)</title><rect x="430.2" y="1107.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (2 samples, 0.12%)</title><rect x="430.2" y="1091.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (2 samples, 0.12%)</title><rect x="430.2" y="1075.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.apply (2 samples, 0.12%)</title><rect x="430.2" y="1059.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.2" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.12%)</title><rect x="430.2" y="1043.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.2" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.12%)</title><rect x="430.2" y="1027.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.2" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.12%)</title><rect x="430.2" y="1011.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18$$Lambda$483/1702178880.apply (2 samples, 0.12%)</title><rect x="430.2" y="995.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.$anonfun$apply$18 (2 samples, 0.12%)</title><rect x="430.2" y="979.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.2" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minuscontrol (2 samples, 0.12%)</title><rect x="430.2" y="963.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol$ (2 samples, 0.12%)</title><rect x="430.2" y="947.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol (2 samples, 0.12%)</title><rect x="430.2" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.2" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.rec$2 (1 samples, 0.06%)</title><rect x="430.9" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.9" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minusdirective (1 samples, 0.06%)</title><rect x="430.9" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective$ (1 samples, 0.06%)</title><rect x="430.9" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective (1 samples, 0.06%)</title><rect x="430.9" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.9" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__push (1 samples, 0.06%)</title><rect x="430.9" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.06%)</title><rect x="431.6" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (1 samples, 0.06%)</title><rect x="431.6" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="431.6" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (1 samples, 0.06%)</title><rect x="431.6" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="431.6" y="1091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$29.apply (1 samples, 0.06%)</title><rect x="431.6" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.6" y="1086.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="431.6" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="431.6" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.6" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="431.6" y="1027.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$29$$Lambda$488/669365112.apply (1 samples, 0.06%)</title><rect x="431.6" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$29.$anonfun$apply$29 (1 samples, 0.06%)</title><rect x="431.6" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.expect (1 samples, 0.06%)</title><rect x="431.6" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.expect$ (1 samples, 0.06%)</title><rect x="431.6" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.expect (1 samples, 0.06%)</title><rect x="431.6" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (2 samples, 0.12%)</title><rect x="432.3" y="1171.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (2 samples, 0.12%)</title><rect x="432.3" y="1155.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (2 samples, 0.12%)</title><rect x="432.3" y="1139.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (2 samples, 0.12%)</title><rect x="432.3" y="1123.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (2 samples, 0.12%)</title><rect x="432.3" y="1107.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (2 samples, 0.12%)</title><rect x="432.3" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/SeqFactory$Delegate.from (2 samples, 0.12%)</title><rect x="432.3" y="1075.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.12%)</title><rect x="432.3" y="1059.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.12%)</title><rect x="432.3" y="1043.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addAll (2 samples, 0.12%)</title><rect x="432.3" y="1027.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (2 samples, 0.12%)</title><rect x="432.3" y="1011.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (2 samples, 0.12%)</title><rect x="432.3" y="995.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (2 samples, 0.12%)</title><rect x="432.3" y="979.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (2 samples, 0.12%)</title><rect x="432.3" y="963.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$$$Lambda$476/1112062307.apply (2 samples, 0.12%)</title><rect x="432.3" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.$anonfun$prime$2 (2 samples, 0.12%)</title><rect x="432.3" y="931.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.&lt;init&gt; (2 samples, 0.12%)</title><rect x="432.3" y="915.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.lookupParser (1 samples, 0.06%)</title><rect x="432.3" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$62.lookup (1 samples, 0.06%)</title><rect x="432.3" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.3" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.06%)</title><rect x="432.3" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.3" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="432.3" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.3" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="432.3" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.3" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="432.3" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.3" y="830.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="432.3" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.3" y="814.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="432.3" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.3" y="798.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (1 samples, 0.06%)</title><rect x="433.0" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sorted (1 samples, 0.06%)</title><rect x="433.7" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (1 samples, 0.06%)</title><rect x="433.7" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (1 samples, 0.06%)</title><rect x="433.7" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (1 samples, 0.06%)</title><rect x="433.7" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (1 samples, 0.06%)</title><rect x="433.7" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (1 samples, 0.06%)</title><rect x="433.7" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.copyToArray (1 samples, 0.06%)</title><rect x="433.7" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (1 samples, 0.06%)</title><rect x="433.7" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (1 samples, 0.06%)</title><rect x="433.7" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.copyToArray (1 samples, 0.06%)</title><rect x="433.7" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (1 samples, 0.06%)</title><rect x="433.7" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (1 samples, 0.06%)</title><rect x="433.7" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (1 samples, 0.06%)</title><rect x="433.7" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.7" y="990.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="433.7" y="963.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.7" y="974.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="433.7" y="947.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.7" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="433.7" y="931.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="436.7" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="433.7" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.7" y="926.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="433.7" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.7" y="910.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="433.7" y="883.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.7" y="894.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="433.7" y="867.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.7" y="878.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="433.7" y="851.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.7" y="862.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="433.7" y="835.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.7" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="433.7" y="819.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.7" y="830.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="433.7" y="803.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.7" y="814.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="433.7" y="787.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="436.7" y="798.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="433.7" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="436.7" y="782.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="433.7" y="755.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="436.7" y="766.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="433.7" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="436.7" y="750.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="433.7" y="723.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="436.7" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="433.7" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="436.7" y="718.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="433.7" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.7" y="702.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="433.7" y="675.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="436.7" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="433.7" y="659.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.7" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="433.7" y="643.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.7" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="433.7" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.7" y="638.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.out (1 samples, 0.06%)</title><rect x="434.4" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.apply (1 samples, 0.06%)</title><rect x="434.4" y="1187.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.map (2 samples, 0.12%)</title><rect x="435.1" y="1203.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.map$ (2 samples, 0.12%)</title><rect x="435.1" y="1187.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.map (2 samples, 0.12%)</title><rect x="435.1" y="1171.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.12%)</title><rect x="435.1" y="1155.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.12%)</title><rect x="435.1" y="1139.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (2 samples, 0.12%)</title><rect x="435.1" y="1123.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.12%)</title><rect x="435.1" y="1107.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.12%)</title><rect x="435.1" y="1091.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="435.1" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="435.1" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="435.1" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="435.1" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.06%)</title><rect x="435.1" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.1" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="435.7" y="1075.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="438.7" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (1 samples, 0.06%)</title><rect x="436.4" y="1203.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="436.4" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="436.4" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.06%)</title><rect x="436.4" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Shape$.hasOnePort (1 samples, 0.06%)</title><rect x="436.4" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="436.4" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="436.4" y="1107.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.06%)</title><rect x="436.4" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (1 samples, 0.06%)</title><rect x="436.4" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="436.4" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="436.4" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.lengthCompare (1 samples, 0.06%)</title><rect x="436.4" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.06%)</title><rect x="436.4" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.4" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="436.4" y="995.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="439.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (1 samples, 0.06%)</title><rect x="437.1" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (1 samples, 0.06%)</title><rect x="437.1" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (1 samples, 0.06%)</title><rect x="437.1" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (1 samples, 0.06%)</title><rect x="437.1" y="1155.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (1 samples, 0.06%)</title><rect x="437.1" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="437.1" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.buffer (1 samples, 0.06%)</title><rect x="437.8" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.8" y="1358.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.buffer$ (1 samples, 0.06%)</title><rect x="437.8" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.buffer (1 samples, 0.06%)</title><rect x="437.8" y="1315.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.06%)</title><rect x="437.8" y="1299.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.06%)</title><rect x="437.8" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (1 samples, 0.06%)</title><rect x="437.8" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="437.8" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (1 samples, 0.06%)</title><rect x="437.8" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.join (1 samples, 0.06%)</title><rect x="438.5" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.5" y="1358.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.joinMat (1 samples, 0.06%)</title><rect x="438.5" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.wire (1 samples, 0.06%)</title><rect x="438.5" y="1315.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.5" y="1326.0"></text>
</g>
<g>
<title>akka/util/OptionVal$.contains$extension (1 samples, 0.06%)</title><rect x="438.5" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (9 samples, 0.53%)</title><rect x="439.2" y="1347.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.2" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (9 samples, 0.53%)</title><rect x="439.2" y="1331.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (9 samples, 0.53%)</title><rect x="439.2" y="1315.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (9 samples, 0.53%)</title><rect x="439.2" y="1299.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="439.2" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="439.2" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.06%)</title><rect x="439.2" y="1251.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (5 samples, 0.29%)</title><rect x="439.9" y="1283.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (4 samples, 0.24%)</title><rect x="439.9" y="1267.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (4 samples, 0.24%)</title><rect x="439.9" y="1251.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.18%)</title><rect x="439.9" y="1235.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.18%)</title><rect x="439.9" y="1219.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (3 samples, 0.18%)</title><rect x="439.9" y="1203.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (3 samples, 0.18%)</title><rect x="439.9" y="1187.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (3 samples, 0.18%)</title><rect x="439.9" y="1171.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (3 samples, 0.18%)</title><rect x="439.9" y="1155.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (3 samples, 0.18%)</title><rect x="439.9" y="1139.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (3 samples, 0.18%)</title><rect x="439.9" y="1123.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (3 samples, 0.18%)</title><rect x="439.9" y="1107.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (3 samples, 0.18%)</title><rect x="439.9" y="1091.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.18%)</title><rect x="439.9" y="1075.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.18%)</title><rect x="439.9" y="1059.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (3 samples, 0.18%)</title><rect x="439.9" y="1043.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.9" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (3 samples, 0.18%)</title><rect x="439.9" y="1027.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (3 samples, 0.18%)</title><rect x="439.9" y="1011.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (3 samples, 0.18%)</title><rect x="439.9" y="995.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (3 samples, 0.18%)</title><rect x="439.9" y="979.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (3 samples, 0.18%)</title><rect x="439.9" y="963.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (3 samples, 0.18%)</title><rect x="439.9" y="947.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (3 samples, 0.18%)</title><rect x="439.9" y="931.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.18%)</title><rect x="439.9" y="915.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.18%)</title><rect x="439.9" y="899.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (2 samples, 0.12%)</title><rect x="439.9" y="883.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.9" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.12%)</title><rect x="439.9" y="867.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.9" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.12%)</title><rect x="439.9" y="851.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.9" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.12%)</title><rect x="439.9" y="835.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.9" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.12%)</title><rect x="439.9" y="819.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.9" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.12%)</title><rect x="439.9" y="803.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.9" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.12%)</title><rect x="439.9" y="787.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.9" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.12%)</title><rect x="439.9" y="771.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="439.9" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.12%)</title><rect x="439.9" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.9" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (2 samples, 0.12%)</title><rect x="439.9" y="723.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.9" y="734.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.12%)</title><rect x="439.9" y="707.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.9" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.12%)</title><rect x="439.9" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.9" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.12%)</title><rect x="439.9" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.9" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.12%)</title><rect x="439.9" y="659.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.9" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.12%)</title><rect x="439.9" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.9" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.12%)</title><rect x="439.9" y="627.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.9" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.12%)</title><rect x="439.9" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="439.9" y="595.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.12%)</title><rect x="439.9" y="579.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.9" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/settings/WebSocketSettingsImpl.toString (1 samples, 0.06%)</title><rect x="440.6" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.6" y="574.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (1 samples, 0.06%)</title><rect x="440.6" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.6" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/settings/WebSocketSettingsImpl.productIterator (1 samples, 0.06%)</title><rect x="440.6" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.6" y="542.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.typedProductIterator (1 samples, 0.06%)</title><rect x="440.6" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.6" y="526.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="440.6" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.6" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="440.6" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.06%)</title><rect x="441.3" y="883.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.06%)</title><rect x="441.3" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.06%)</title><rect x="441.3" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (1 samples, 0.06%)</title><rect x="441.3" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="442.0" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="442.0" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.0" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="442.0" y="1203.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.0" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="442.0" y="1187.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="445.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="442.7" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="442.7" y="1251.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer.createLogic (1 samples, 0.06%)</title><rect x="442.7" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (3 samples, 0.18%)</title><rect x="443.4" y="1283.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (3 samples, 0.18%)</title><rect x="443.4" y="1267.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (3 samples, 0.18%)</title><rect x="443.4" y="1251.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (3 samples, 0.18%)</title><rect x="443.4" y="1235.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (3 samples, 0.18%)</title><rect x="443.4" y="1219.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (3 samples, 0.18%)</title><rect x="443.4" y="1203.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.4" y="1214.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (3 samples, 0.18%)</title><rect x="443.4" y="1187.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (3 samples, 0.18%)</title><rect x="443.4" y="1171.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (3 samples, 0.18%)</title><rect x="443.4" y="1155.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (3 samples, 0.18%)</title><rect x="443.4" y="1139.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (3 samples, 0.18%)</title><rect x="443.4" y="1123.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (3 samples, 0.18%)</title><rect x="443.4" y="1107.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.4" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (3 samples, 0.18%)</title><rect x="443.4" y="1091.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (3 samples, 0.18%)</title><rect x="443.4" y="1075.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="443.4" y="1059.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="443.4" y="1043.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="443.4" y="1027.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="443.4" y="1011.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="443.4" y="995.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="443.4" y="979.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="443.4" y="963.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.18%)</title><rect x="443.4" y="947.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="443.4" y="931.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="443.4" y="915.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="443.4" y="899.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.4" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="443.4" y="883.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="446.4" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="443.4" y="867.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="446.4" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="444.1" y="883.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="447.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="444.8" y="867.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="444.8" y="851.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="447.8" y="862.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="444.8" y="835.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="447.8" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="444.8" y="819.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="447.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="444.8" y="803.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.8" y="814.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="444.8" y="787.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.8" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="444.8" y="771.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="444.8" y="755.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.8" y="766.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.06%)</title><rect x="445.5" y="1379.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.5" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1$$Lambda$1443/343443081.apply (1 samples, 0.06%)</title><rect x="445.5" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.5" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.$anonfun$applyOrElse$7$adapted (1 samples, 0.06%)</title><rect x="445.5" y="1347.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.$anonfun$applyOrElse$7 (1 samples, 0.06%)</title><rect x="445.5" y="1331.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.log (1 samples, 0.06%)</title><rect x="445.5" y="1315.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (1 samples, 0.06%)</title><rect x="445.5" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (1 samples, 0.06%)</title><rect x="445.5" y="1283.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.5" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="445.5" y="1267.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="448.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (3 samples, 0.18%)</title><rect x="446.2" y="1379.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="446.2" y="1363.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="446.2" y="1347.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="446.2" y="1331.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.2" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="446.2" y="1315.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.2" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="446.2" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.equals (1 samples, 0.06%)</title><rect x="446.2" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.equals (1 samples, 0.06%)</title><rect x="446.2" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.equals (1 samples, 0.06%)</title><rect x="446.2" y="1251.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.equals (1 samples, 0.06%)</title><rect x="446.2" y="1235.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.2" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="446.9" y="1363.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.9" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1347.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.9" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1331.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.9" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="446.9" y="1315.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1299.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.9" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1283.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.9" y="1294.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="446.9" y="1267.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.9" y="1278.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="446.9" y="1251.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.9" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="446.9" y="1235.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1219.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.9" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="446.9" y="1203.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1187.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.9" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="446.9" y="1171.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.9" y="1182.0"></text>
</g>
<g>
<title>scala/Some.hashCode (2 samples, 0.12%)</title><rect x="446.9" y="1155.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.9" y="1166.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="446.9" y="1139.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.9" y="1150.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="446.9" y="1123.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="446.9" y="1107.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.hashCode (1 samples, 0.06%)</title><rect x="447.6" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.6" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="447.6" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.6" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="447.6" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.6" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="447.6" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="447.6" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.hashCode (1 samples, 0.06%)</title><rect x="447.6" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Seq.hashCode$ (1 samples, 0.06%)</title><rect x="447.6" y="995.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Seq.hashCode (1 samples, 0.06%)</title><rect x="447.6" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.seqHash (1 samples, 0.06%)</title><rect x="447.6" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.listHash (1 samples, 0.06%)</title><rect x="447.6" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.6" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="447.6" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.6" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.hashCode (1 samples, 0.06%)</title><rect x="447.6" y="915.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.6" y="926.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="447.6" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.6" y="910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="447.6" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.6" y="894.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="447.6" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.6" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.productElement (1 samples, 0.06%)</title><rect x="447.6" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.6" y="862.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (2 samples, 0.12%)</title><rect x="448.2" y="1443.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.12%)</title><rect x="448.2" y="1427.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.12%)</title><rect x="448.2" y="1411.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.2" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (2 samples, 0.12%)</title><rect x="448.2" y="1395.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.12%)</title><rect x="448.2" y="1379.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1363.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.12%)</title><rect x="448.2" y="1347.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1331.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.2" y="1342.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1315.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.2" y="1326.0"></text>
</g>
<g>
<title>akka/routing/Router.route (2 samples, 0.12%)</title><rect x="448.2" y="1299.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.2" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.send (2 samples, 0.12%)</title><rect x="448.2" y="1283.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.2" y="1294.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (2 samples, 0.12%)</title><rect x="448.2" y="1267.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.12%)</title><rect x="448.2" y="1251.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.12%)</title><rect x="448.2" y="1235.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1219.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.12%)</title><rect x="448.2" y="1203.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1187.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1171.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.12%)</title><rect x="448.2" y="1155.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.12%)</title><rect x="448.2" y="1139.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.12%)</title><rect x="448.2" y="1123.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.12%)</title><rect x="448.2" y="1107.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="448.2" y="1091.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.12%)</title><rect x="448.2" y="1075.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="448.2" y="1059.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.12%)</title><rect x="448.2" y="1043.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="448.2" y="1027.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="448.2" y="1011.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.12%)</title><rect x="448.2" y="995.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="448.2" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="448.2" y="963.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="448.2" y="947.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.2" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="448.2" y="931.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="451.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="448.2" y="915.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="451.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="448.2" y="899.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.2" y="910.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="448.2" y="883.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.2" y="894.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="448.2" y="867.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="451.2" y="878.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="448.2" y="851.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.2" y="862.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="448.2" y="835.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.2" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="448.2" y="819.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.2" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="448.2" y="803.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.2" y="814.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="448.9" y="787.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.9" y="798.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="448.9" y="771.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="451.9" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="448.9" y="755.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.9" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="448.9" y="739.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.9" y="750.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="448.9" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.9" y="734.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="448.9" y="707.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.9" y="718.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="448.9" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.9" y="702.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="448.9" y="675.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.9" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="448.9" y="659.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.9" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="448.9" y="643.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="451.9" y="654.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="448.9" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.9" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="448.9" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.9" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="448.9" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="451.9" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="448.9" y="579.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.9" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="448.9" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.9" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="448.9" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.9" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.06%)</title><rect x="448.9" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.9" y="542.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="448.9" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.9" y="526.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="448.9" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.9" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="448.9" y="483.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="451.9" y="494.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="448.9" y="467.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.9" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="448.9" y="451.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.9" y="462.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (19 samples, 1.12%)</title><rect x="449.6" y="1443.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (19 samples, 1.12%)</title><rect x="449.6" y="1427.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (19 samples, 1.12%)</title><rect x="449.6" y="1411.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.6" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (19 samples, 1.12%)</title><rect x="449.6" y="1395.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.6" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (19 samples, 1.12%)</title><rect x="449.6" y="1379.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (15 samples, 0.88%)</title><rect x="449.6" y="1363.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (15 samples, 0.88%)</title><rect x="449.6" y="1347.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (15 samples, 0.88%)</title><rect x="449.6" y="1331.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (15 samples, 0.88%)</title><rect x="449.6" y="1315.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (2 samples, 0.12%)</title><rect x="449.6" y="1299.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (2 samples, 0.12%)</title><rect x="449.6" y="1283.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (2 samples, 0.12%)</title><rect x="449.6" y="1267.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (2 samples, 0.12%)</title><rect x="449.6" y="1251.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.12%)</title><rect x="449.6" y="1235.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.12%)</title><rect x="449.6" y="1219.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1203.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1187.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="452.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1171.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1155.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1139.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1123.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="449.6" y="1107.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (1 samples, 0.06%)</title><rect x="449.6" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="450.3" y="1091.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="450.3" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="450.3" y="1059.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="450.3" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="450.3" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.3" y="1038.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.06%)</title><rect x="450.3" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (1 samples, 0.06%)</title><rect x="451.0" y="1299.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (1 samples, 0.06%)</title><rect x="451.0" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (1 samples, 0.06%)</title><rect x="451.0" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (1 samples, 0.06%)</title><rect x="451.0" y="1251.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (1 samples, 0.06%)</title><rect x="451.0" y="1235.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (1 samples, 0.06%)</title><rect x="451.0" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1203.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1155.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1027.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="451.0" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (1 samples, 0.06%)</title><rect x="451.0" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.0" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (7 samples, 0.41%)</title><rect x="451.7" y="1299.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (7 samples, 0.41%)</title><rect x="451.7" y="1283.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (7 samples, 0.41%)</title><rect x="451.7" y="1267.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (7 samples, 0.41%)</title><rect x="451.7" y="1251.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (7 samples, 0.41%)</title><rect x="451.7" y="1235.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.7" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.41%)</title><rect x="451.7" y="1219.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.7" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.41%)</title><rect x="451.7" y="1203.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.7" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.41%)</title><rect x="451.7" y="1187.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.7" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.41%)</title><rect x="451.7" y="1171.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.7" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.41%)</title><rect x="451.7" y="1155.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.41%)</title><rect x="451.7" y="1139.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.41%)</title><rect x="451.7" y="1123.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.41%)</title><rect x="451.7" y="1107.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.41%)</title><rect x="451.7" y="1091.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.41%)</title><rect x="451.7" y="1075.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.41%)</title><rect x="451.7" y="1059.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="451.7" y="1043.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="454.7" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.35%)</title><rect x="452.4" y="1043.0" width="4.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="455.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.35%)</title><rect x="452.4" y="1027.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.4" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.35%)</title><rect x="452.4" y="1011.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.4" y="1022.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.29%)</title><rect x="453.1" y="995.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="456.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.29%)</title><rect x="453.1" y="979.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="456.1" y="990.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="453.1" y="963.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.1" y="974.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="453.1" y="947.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.1" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="453.1" y="931.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="456.1" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.29%)</title><rect x="453.1" y="915.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="456.1" y="926.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (5 samples, 0.29%)</title><rect x="456.6" y="1299.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (1 samples, 0.06%)</title><rect x="456.6" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (2 samples, 0.12%)</title><rect x="457.3" y="1283.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (2 samples, 0.12%)</title><rect x="457.3" y="1267.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxRequirement (1 samples, 0.06%)</title><rect x="457.3" y="1251.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getString (1 samples, 0.06%)</title><rect x="457.3" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.3" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="457.3" y="1219.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="460.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupByQueueType (1 samples, 0.06%)</title><rect x="458.0" y="1251.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.0" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookup (1 samples, 0.06%)</title><rect x="458.0" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.0" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupConfigurator (1 samples, 0.06%)</title><rect x="458.0" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="458.0" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (1 samples, 0.06%)</title><rect x="458.7" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (1 samples, 0.06%)</title><rect x="458.7" y="1267.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (1 samples, 0.06%)</title><rect x="458.7" y="1251.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (1 samples, 0.06%)</title><rect x="458.7" y="1235.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (1 samples, 0.06%)</title><rect x="458.7" y="1219.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (1 samples, 0.06%)</title><rect x="458.7" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (1 samples, 0.06%)</title><rect x="458.7" y="1187.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (1 samples, 0.06%)</title><rect x="459.4" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (3 samples, 0.18%)</title><rect x="460.1" y="1363.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (3 samples, 0.18%)</title><rect x="460.1" y="1347.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (3 samples, 0.18%)</title><rect x="460.1" y="1331.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (2 samples, 0.12%)</title><rect x="460.1" y="1315.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.1" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.12%)</title><rect x="460.1" y="1299.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/862702382.apply$mcV$sp (1 samples, 0.06%)</title><rect x="460.1" y="1283.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (1 samples, 0.06%)</title><rect x="460.1" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (1 samples, 0.06%)</title><rect x="460.1" y="1251.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.06%)</title><rect x="460.1" y="1235.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.06%)</title><rect x="460.1" y="1219.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.06%)</title><rect x="460.1" y="1203.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.06%)</title><rect x="460.1" y="1187.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.06%)</title><rect x="460.1" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.06%)</title><rect x="460.1" y="1155.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.06%)</title><rect x="460.1" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.1" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="460.7" y="1283.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="463.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (1 samples, 0.06%)</title><rect x="461.4" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (1 samples, 0.06%)</title><rect x="461.4" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (1 samples, 0.06%)</title><rect x="461.4" y="1283.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.4" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$901/2036048480.apply (1 samples, 0.06%)</title><rect x="462.1" y="1363.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (1 samples, 0.06%)</title><rect x="462.1" y="1347.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (1 samples, 0.06%)</title><rect x="462.1" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (1 samples, 0.06%)</title><rect x="462.1" y="1315.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.06%)</title><rect x="462.1" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.06%)</title><rect x="462.1" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.06%)</title><rect x="462.1" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="462.1" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.1" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.06%)</title><rect x="462.1" y="1235.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.06%)</title><rect x="462.1" y="1219.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="1230.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/896138248.apply (1 samples, 0.06%)</title><rect x="462.1" y="1203.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (1 samples, 0.06%)</title><rect x="462.1" y="1187.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.1" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (1 samples, 0.06%)</title><rect x="462.1" y="1171.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.forall (1 samples, 0.06%)</title><rect x="462.1" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall$ (1 samples, 0.06%)</title><rect x="462.1" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall (1 samples, 0.06%)</title><rect x="462.1" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.1" y="1134.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (1 samples, 0.06%)</title><rect x="462.8" y="1443.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.06%)</title><rect x="462.8" y="1427.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.06%)</title><rect x="462.8" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.8" y="1422.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="462.8" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (1 samples, 0.06%)</title><rect x="462.8" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (1 samples, 0.06%)</title><rect x="462.8" y="1363.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.06%)</title><rect x="462.8" y="1347.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="462.8" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="462.8" y="1315.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="462.8" y="1299.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.8" y="1310.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (1 samples, 0.06%)</title><rect x="462.8" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.8" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.route (1 samples, 0.06%)</title><rect x="462.8" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.8" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.select (1 samples, 0.06%)</title><rect x="462.8" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="1262.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.target$1 (1 samples, 0.06%)</title><rect x="462.8" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.8" y="1246.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHash.nodeFor (1 samples, 0.06%)</title><rect x="462.8" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.8" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.binarySearch (1 samples, 0.06%)</title><rect x="462.8" y="1203.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.8" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.binarySearch0 (1 samples, 0.06%)</title><rect x="462.8" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.8" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (72 samples, 4.24%)</title><rect x="463.5" y="1443.0" width="50.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.5" y="1454.0">akka/..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (72 samples, 4.24%)</title><rect x="463.5" y="1427.0" width="50.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.5" y="1438.0">akka/..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (72 samples, 4.24%)</title><rect x="463.5" y="1411.0" width="50.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.5" y="1422.0">akka/..</text>
</g>
<g>
<title>akka/io/TcpConnection.unhandled (1 samples, 0.06%)</title><rect x="463.5" y="1395.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.unhandled$ (1 samples, 0.06%)</title><rect x="463.5" y="1379.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.5" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="463.5" y="1363.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (10 samples, 0.59%)</title><rect x="464.2" y="1395.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.2" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (10 samples, 0.59%)</title><rect x="464.2" y="1379.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.2" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$1374/167693028.apply$mcV$sp (10 samples, 0.59%)</title><rect x="464.2" y="1363.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.2" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (10 samples, 0.59%)</title><rect x="464.2" y="1347.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.2" y="1358.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (1 samples, 0.06%)</title><rect x="464.2" y="1331.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.2" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (1 samples, 0.06%)</title><rect x="464.2" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.2" y="1326.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (1 samples, 0.06%)</title><rect x="464.2" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.2" y="1310.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.06%)</title><rect x="464.2" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.2" y="1294.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.06%)</title><rect x="464.2" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.2" y="1278.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.06%)</title><rect x="464.2" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.2" y="1262.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="464.2" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.2" y="1246.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="464.2" y="1219.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.2" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.06%)</title><rect x="464.2" y="1203.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.2" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.06%)</title><rect x="464.2" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="464.2" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.2" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (3 samples, 0.18%)</title><rect x="464.9" y="1331.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (1 samples, 0.06%)</title><rect x="465.6" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$546/1953226430.apply (1 samples, 0.06%)</title><rect x="465.6" y="1299.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (1 samples, 0.06%)</title><rect x="465.6" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (1 samples, 0.06%)</title><rect x="465.6" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.06%)</title><rect x="465.6" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.06%)</title><rect x="465.6" y="1235.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.06%)</title><rect x="465.6" y="1219.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (1 samples, 0.06%)</title><rect x="465.6" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.06%)</title><rect x="465.6" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.06%)</title><rect x="465.6" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.06%)</title><rect x="465.6" y="1155.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="465.6" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="465.6" y="1123.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.6" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="465.6" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (1 samples, 0.06%)</title><rect x="465.6" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (1 samples, 0.06%)</title><rect x="465.6" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (1 samples, 0.06%)</title><rect x="466.3" y="1315.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.3" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (1 samples, 0.06%)</title><rect x="466.3" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.3" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (1 samples, 0.06%)</title><rect x="466.3" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (1 samples, 0.06%)</title><rect x="466.3" y="1267.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (1 samples, 0.06%)</title><rect x="466.3" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.3" y="1262.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (1 samples, 0.06%)</title><rect x="466.3" y="1235.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="469.3" y="1246.0"></text>
</g>
<g>
<title>setsockopt (1 samples, 0.06%)</title><rect x="466.3" y="1219.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="469.3" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (6 samples, 0.35%)</title><rect x="467.0" y="1331.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.0" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (1 samples, 0.06%)</title><rect x="467.0" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.0" y="1326.0"></text>
</g>
<g>
<title>getsockopt (1 samples, 0.06%)</title><rect x="467.0" y="1299.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="470.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (5 samples, 0.29%)</title><rect x="467.7" y="1315.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.7" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (5 samples, 0.29%)</title><rect x="467.7" y="1299.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.7" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (4 samples, 0.24%)</title><rect x="467.7" y="1283.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.7" y="1294.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (1 samples, 0.06%)</title><rect x="467.7" y="1267.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="470.7" y="1278.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (1 samples, 0.06%)</title><rect x="467.7" y="1251.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="470.7" y="1262.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.06%)</title><rect x="467.7" y="1235.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="470.7" y="1246.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (1 samples, 0.06%)</title><rect x="467.7" y="1219.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="470.7" y="1230.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="467.7" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="470.7" y="1214.0"></text>
</g>
<g>
<title>getsockname (3 samples, 0.18%)</title><rect x="468.4" y="1267.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="471.4" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="468.4" y="1251.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.4" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="468.4" y="1235.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.4" y="1246.0"></text>
</g>
<g>
<title>sys_getsockname (3 samples, 0.18%)</title><rect x="468.4" y="1219.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.4" y="1230.0"></text>
</g>
<g>
<title>SYSC_getsockname (3 samples, 0.18%)</title><rect x="468.4" y="1203.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="471.4" y="1214.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.06%)</title><rect x="468.4" y="1187.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.4" y="1198.0"></text>
</g>
<g>
<title>security_socket_getsockname (2 samples, 0.12%)</title><rect x="469.1" y="1187.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.1" y="1198.0"></text>
</g>
<g>
<title>aa_sock_perm (1 samples, 0.06%)</title><rect x="469.1" y="1171.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="472.1" y="1182.0"></text>
</g>
<g>
<title>apparmor_socket_getsockname (1 samples, 0.06%)</title><rect x="469.8" y="1171.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.8" y="1182.0"></text>
</g>
<g>
<title>aa_sock_perm (1 samples, 0.06%)</title><rect x="469.8" y="1155.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.8" y="1166.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="469.8" y="1139.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.8" y="1150.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.06%)</title><rect x="469.8" y="1123.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.8" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localPort (1 samples, 0.06%)</title><rect x="470.5" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.5" y="1294.0"></text>
</g>
<g>
<title>getsockname (1 samples, 0.06%)</title><rect x="470.5" y="1267.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="473.5" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (10 samples, 0.59%)</title><rect x="471.2" y="1395.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.2" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (9 samples, 0.53%)</title><rect x="471.9" y="1379.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$1327/1392438601.apply$mcV$sp (9 samples, 0.53%)</title><rect x="471.9" y="1363.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (9 samples, 0.53%)</title><rect x="471.9" y="1347.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (1 samples, 0.06%)</title><rect x="472.6" y="1331.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/Dns$.apply (1 samples, 0.06%)</title><rect x="472.6" y="1315.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="472.6" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="472.6" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.6" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (1 samples, 0.06%)</title><rect x="473.2" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (1 samples, 0.06%)</title><rect x="473.2" y="1315.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (1 samples, 0.06%)</title><rect x="473.2" y="1299.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.2" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.06%)</title><rect x="473.2" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.2" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.06%)</title><rect x="473.2" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.2" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (1 samples, 0.06%)</title><rect x="473.2" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.2" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (1 samples, 0.06%)</title><rect x="473.2" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.2" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.06%)</title><rect x="473.2" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.2" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.06%)</title><rect x="473.2" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (1 samples, 0.06%)</title><rect x="473.2" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (1 samples, 0.06%)</title><rect x="473.2" y="1171.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (1 samples, 0.06%)</title><rect x="473.2" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (1 samples, 0.06%)</title><rect x="473.2" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (1 samples, 0.06%)</title><rect x="473.2" y="1123.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="473.2" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="473.2" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.2" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (4 samples, 0.24%)</title><rect x="473.9" y="1331.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (4 samples, 0.24%)</title><rect x="473.9" y="1315.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.9" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1373/1293625542.apply$mcV$sp (4 samples, 0.24%)</title><rect x="473.9" y="1299.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.9" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (4 samples, 0.24%)</title><rect x="473.9" y="1283.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.9" y="1294.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (3 samples, 0.18%)</title><rect x="473.9" y="1267.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (3 samples, 0.18%)</title><rect x="473.9" y="1251.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.9" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (2 samples, 0.12%)</title><rect x="474.6" y="1235.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.12%)</title><rect x="474.6" y="1219.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.6" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="475.3" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="475.3" y="1187.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="478.3" y="1198.0"></text>
</g>
<g>
<title>__write (1 samples, 0.06%)</title><rect x="475.3" y="1171.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="478.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="475.3" y="1155.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="478.3" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="475.3" y="1139.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="478.3" y="1150.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.06%)</title><rect x="475.3" y="1123.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.3" y="1134.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.06%)</title><rect x="475.3" y="1107.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="478.3" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.06%)</title><rect x="475.3" y="1091.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="478.3" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.06%)</title><rect x="475.3" y="1075.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="478.3" y="1086.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.06%)</title><rect x="475.3" y="1059.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="478.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (1 samples, 0.06%)</title><rect x="476.0" y="1267.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.06%)</title><rect x="476.0" y="1251.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.06%)</title><rect x="476.0" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.0" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (1 samples, 0.06%)</title><rect x="476.0" y="1219.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="476.0" y="1203.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="479.0" y="1214.0"></text>
</g>
<g>
<title>__connect (1 samples, 0.06%)</title><rect x="476.0" y="1187.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="479.0" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="476.0" y="1171.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="479.0" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="476.0" y="1155.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.0" y="1166.0"></text>
</g>
<g>
<title>sys_connect (1 samples, 0.06%)</title><rect x="476.0" y="1139.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.0" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (1 samples, 0.06%)</title><rect x="476.0" y="1123.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="479.0" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (1 samples, 0.06%)</title><rect x="476.0" y="1107.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.0" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (1 samples, 0.06%)</title><rect x="476.0" y="1091.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.0" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (1 samples, 0.06%)</title><rect x="476.0" y="1075.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="479.0" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (1 samples, 0.06%)</title><rect x="476.0" y="1059.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.0" y="1070.0"></text>
</g>
<g>
<title>secure_tcp_seq (1 samples, 0.06%)</title><rect x="476.0" y="1043.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="479.0" y="1054.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.06%)</title><rect x="476.0" y="1027.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="479.0" y="1038.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (1 samples, 0.06%)</title><rect x="476.0" y="1011.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="479.0" y="1022.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.06%)</title><rect x="476.0" y="995.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.0" y="1006.0"></text>
</g>
<g>
<title>akka/io/dns/DnsProtocol$Resolved.address (1 samples, 0.06%)</title><rect x="476.7" y="1331.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.7" y="1342.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.getHostName (1 samples, 0.06%)</title><rect x="477.4" y="1331.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.4" y="1342.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.getHostName (1 samples, 0.06%)</title><rect x="477.4" y="1315.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.4" y="1326.0"></text>
</g>
<g>
<title>java/net/InetAddress.getHostName (1 samples, 0.06%)</title><rect x="477.4" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.4" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (2 samples, 0.12%)</title><rect x="478.1" y="1395.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.1" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.12%)</title><rect x="478.1" y="1379.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$1372/2072038995.apply$mcV$sp (2 samples, 0.12%)</title><rect x="478.1" y="1363.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (2 samples, 0.12%)</title><rect x="478.1" y="1347.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (2 samples, 0.12%)</title><rect x="478.1" y="1331.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.12%)</title><rect x="478.1" y="1315.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1373/1293625542.apply$mcV$sp (2 samples, 0.12%)</title><rect x="478.1" y="1299.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.1" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (2 samples, 0.12%)</title><rect x="478.1" y="1283.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.1" y="1294.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (1 samples, 0.06%)</title><rect x="478.1" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.1" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (1 samples, 0.06%)</title><rect x="478.1" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.1" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.06%)</title><rect x="478.1" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.1" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="478.1" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="478.1" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="478.1" y="1187.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="481.1" y="1198.0"></text>
</g>
<g>
<title>__write (1 samples, 0.06%)</title><rect x="478.1" y="1171.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="481.1" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="478.1" y="1155.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="481.1" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="478.1" y="1139.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="481.1" y="1150.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="478.1" y="1123.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.1" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (1 samples, 0.06%)</title><rect x="478.8" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.06%)</title><rect x="478.8" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.06%)</title><rect x="478.8" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (1 samples, 0.06%)</title><rect x="478.8" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="478.8" y="1203.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="481.8" y="1214.0"></text>
</g>
<g>
<title>__connect (1 samples, 0.06%)</title><rect x="478.8" y="1187.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="481.8" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="478.8" y="1171.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.8" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="478.8" y="1155.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.8" y="1166.0"></text>
</g>
<g>
<title>sys_connect (1 samples, 0.06%)</title><rect x="478.8" y="1139.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.8" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (1 samples, 0.06%)</title><rect x="478.8" y="1123.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="481.8" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (1 samples, 0.06%)</title><rect x="478.8" y="1107.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="481.8" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (1 samples, 0.06%)</title><rect x="478.8" y="1091.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.8" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (1 samples, 0.06%)</title><rect x="478.8" y="1075.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.8" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (1 samples, 0.06%)</title><rect x="478.8" y="1059.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.8" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (1 samples, 0.06%)</title><rect x="478.8" y="1043.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="481.8" y="1054.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.06%)</title><rect x="478.8" y="1027.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.8" y="1038.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="478.8" y="1011.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="481.8" y="1022.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.06%)</title><rect x="478.8" y="995.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="481.8" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="478.8" y="979.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="481.8" y="990.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (49 samples, 2.88%)</title><rect x="479.5" y="1395.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.5" y="1406.0">sc..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (28 samples, 1.65%)</title><rect x="479.5" y="1379.0" width="19.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.5" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (21 samples, 1.24%)</title><rect x="479.5" y="1363.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (4 samples, 0.24%)</title><rect x="479.5" y="1347.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (1 samples, 0.06%)</title><rect x="479.5" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (1 samples, 0.06%)</title><rect x="479.5" y="1315.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (1 samples, 0.06%)</title><rect x="479.5" y="1299.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.5" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.06%)</title><rect x="479.5" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.5" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.06%)</title><rect x="479.5" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.5" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (1 samples, 0.06%)</title><rect x="479.5" y="1251.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.5" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (1 samples, 0.06%)</title><rect x="479.5" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.5" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.06%)</title><rect x="479.5" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.5" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.06%)</title><rect x="479.5" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (1 samples, 0.06%)</title><rect x="479.5" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (1 samples, 0.06%)</title><rect x="479.5" y="1171.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (1 samples, 0.06%)</title><rect x="479.5" y="1155.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath$$Lambda$528/1970436708.apply (1 samples, 0.06%)</title><rect x="479.5" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/RootActorPath.toStringWithAddress (1 samples, 0.06%)</title><rect x="479.5" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.5" y="1134.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (3 samples, 0.18%)</title><rect x="480.2" y="1331.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (3 samples, 0.18%)</title><rect x="480.2" y="1315.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (3 samples, 0.18%)</title><rect x="480.2" y="1299.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.2" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (3 samples, 0.18%)</title><rect x="480.2" y="1283.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.18%)</title><rect x="480.2" y="1267.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.2" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.18%)</title><rect x="480.2" y="1251.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="480.2" y="1235.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="483.2" y="1246.0"></text>
</g>
<g>
<title>__write (3 samples, 0.18%)</title><rect x="480.2" y="1219.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="483.2" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="480.2" y="1203.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.2" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="480.2" y="1187.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.2" y="1198.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.18%)</title><rect x="480.2" y="1171.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.2" y="1182.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.18%)</title><rect x="480.2" y="1155.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.2" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.18%)</title><rect x="480.2" y="1139.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="483.2" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.18%)</title><rect x="480.2" y="1123.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.2" y="1134.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.18%)</title><rect x="480.2" y="1107.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.2" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.12%)</title><rect x="480.2" y="1091.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.2" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="480.2" y="1075.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="483.2" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="480.2" y="1059.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.2" y="1070.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="481.6" y="1091.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.6" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (17 samples, 1.00%)</title><rect x="482.3" y="1347.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (3 samples, 0.18%)</title><rect x="482.3" y="1331.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$546/1953226430.apply (3 samples, 0.18%)</title><rect x="482.3" y="1315.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (3 samples, 0.18%)</title><rect x="482.3" y="1299.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (3 samples, 0.18%)</title><rect x="482.3" y="1283.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (3 samples, 0.18%)</title><rect x="482.3" y="1267.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (3 samples, 0.18%)</title><rect x="482.3" y="1251.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (3 samples, 0.18%)</title><rect x="482.3" y="1235.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (3 samples, 0.18%)</title><rect x="482.3" y="1219.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (3 samples, 0.18%)</title><rect x="482.3" y="1203.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (3 samples, 0.18%)</title><rect x="482.3" y="1187.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (3 samples, 0.18%)</title><rect x="482.3" y="1171.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="482.3" y="1155.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.18%)</title><rect x="482.3" y="1139.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.18%)</title><rect x="482.3" y="1123.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="482.3" y="1107.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.12%)</title><rect x="482.3" y="1091.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.12%)</title><rect x="482.3" y="1075.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.12%)</title><rect x="482.3" y="1059.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="482.3" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="482.3" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="482.3" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.3" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="482.3" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.3" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="482.3" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="482.3" y="963.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="482.3" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="482.3" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="482.3" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="482.3" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="482.3" y="883.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.3" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="482.3" y="867.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="485.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="482.3" y="851.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="485.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="482.3" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="485.3" y="846.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="482.3" y="819.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="485.3" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="482.3" y="803.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.3" y="814.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="482.3" y="787.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="485.3" y="798.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="482.3" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="485.3" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="482.3" y="755.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.3" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="482.3" y="739.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="485.3" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.06%)</title><rect x="483.0" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.06%)</title><rect x="483.0" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.06%)</title><rect x="483.0" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.0" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (1 samples, 0.06%)</title><rect x="483.7" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (1 samples, 0.06%)</title><rect x="483.7" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (14 samples, 0.82%)</title><rect x="484.4" y="1331.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.82%)</title><rect x="484.4" y="1315.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.82%)</title><rect x="484.4" y="1299.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.82%)</title><rect x="484.4" y="1283.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (14 samples, 0.82%)</title><rect x="484.4" y="1267.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.4" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (14 samples, 0.82%)</title><rect x="484.4" y="1251.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.4" y="1262.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="484.4" y="1235.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="487.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.29%)</title><rect x="485.1" y="1235.0" width="3.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="488.1" y="1246.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="485.1" y="1219.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="488.1" y="1230.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="485.1" y="1203.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="488.1" y="1214.0"></text>
</g>
<g>
<title>__read (4 samples, 0.24%)</title><rect x="485.8" y="1219.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="488.8" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="485.8" y="1203.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.8" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="485.8" y="1187.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.8" y="1198.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.18%)</title><rect x="486.4" y="1171.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.4" y="1182.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="486.4" y="1155.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.4" y="1166.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="486.4" y="1139.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="489.4" y="1150.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="486.4" y="1123.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="489.4" y="1134.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.12%)</title><rect x="487.1" y="1155.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="490.1" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.12%)</title><rect x="487.1" y="1139.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="490.1" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.12%)</title><rect x="487.1" y="1123.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.1" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (2 samples, 0.12%)</title><rect x="487.1" y="1107.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.1" y="1118.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.06%)</title><rect x="487.1" y="1091.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.1" y="1102.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.06%)</title><rect x="487.8" y="1091.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.8" y="1102.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.06%)</title><rect x="487.8" y="1075.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="490.8" y="1086.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="487.8" y="1059.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="490.8" y="1070.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="487.8" y="1043.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.8" y="1054.0"></text>
</g>
<g>
<title>__strerror_r (1 samples, 0.06%)</title><rect x="488.5" y="1235.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="491.5" y="1246.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="488.5" y="1219.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="491.5" y="1230.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.12%)</title><rect x="489.2" y="1235.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="492.2" y="1246.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.06%)</title><rect x="489.2" y="1219.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="492.2" y="1230.0"></text>
</g>
<g>
<title>_IO_vfprintf (1 samples, 0.06%)</title><rect x="489.9" y="1219.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="492.9" y="1230.0"></text>
</g>
<g>
<title>convertReturnVal (4 samples, 0.24%)</title><rect x="490.6" y="1235.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="493.6" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (4 samples, 0.24%)</title><rect x="490.6" y="1219.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="493.6" y="1230.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (1 samples, 0.06%)</title><rect x="490.6" y="1203.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="493.6" y="1214.0"></text>
</g>
<g>
<title>jni_FindClass (1 samples, 0.06%)</title><rect x="490.6" y="1187.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="493.6" y="1198.0"></text>
</g>
<g>
<title>JavaThread::security_get_caller_class(int) (1 samples, 0.06%)</title><rect x="490.6" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="493.6" y="1182.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="490.6" y="1155.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="493.6" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="490.6" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="493.6" y="1150.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="490.6" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="493.6" y="1134.0"></text>
</g>
<g>
<title>JNU_NewStringPlatform (3 samples, 0.18%)</title><rect x="491.3" y="1203.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="494.3" y="1214.0"></text>
</g>
<g>
<title>newSizedString8859_1 (3 samples, 0.18%)</title><rect x="491.3" y="1187.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="494.3" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="491.3" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="494.3" y="1182.0"></text>
</g>
<g>
<title>jni_NewString (2 samples, 0.12%)</title><rect x="492.0" y="1171.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="495.0" y="1182.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_unicode(unsigned short*, int, Thread*) (2 samples, 0.12%)</title><rect x="492.0" y="1155.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="495.0" y="1166.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (2 samples, 0.12%)</title><rect x="492.0" y="1139.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="495.0" y="1150.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="492.0" y="1123.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="495.0" y="1134.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="492.7" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="495.7" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="492.7" y="1107.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="495.7" y="1118.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="493.4" y="1235.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="493.4" y="1219.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="493.4" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="493.4" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="493.4" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.4" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="493.4" y="1155.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="496.4" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="493.4" y="1139.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="496.4" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.06%)</title><rect x="493.4" y="1123.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="496.4" y="1134.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (2 samples, 0.12%)</title><rect x="494.1" y="1363.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (2 samples, 0.12%)</title><rect x="494.1" y="1347.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (1 samples, 0.06%)</title><rect x="494.1" y="1331.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (1 samples, 0.06%)</title><rect x="494.1" y="1315.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (1 samples, 0.06%)</title><rect x="494.1" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (1 samples, 0.06%)</title><rect x="494.1" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (1 samples, 0.06%)</title><rect x="494.1" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat (1 samples, 0.06%)</title><rect x="494.1" y="1251.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (1 samples, 0.06%)</title><rect x="494.1" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (1 samples, 0.06%)</title><rect x="494.1" y="1219.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.apply (1 samples, 0.06%)</title><rect x="494.8" y="1331.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (1 samples, 0.06%)</title><rect x="494.8" y="1315.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (1 samples, 0.06%)</title><rect x="494.8" y="1299.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (1 samples, 0.06%)</title><rect x="494.8" y="1283.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (1 samples, 0.06%)</title><rect x="494.8" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.8" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (1 samples, 0.06%)</title><rect x="494.8" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (1 samples, 0.06%)</title><rect x="494.8" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (1 samples, 0.06%)</title><rect x="494.8" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$ArrayIterator.next (1 samples, 0.06%)</title><rect x="494.8" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.8" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (5 samples, 0.29%)</title><rect x="495.5" y="1363.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (5 samples, 0.29%)</title><rect x="495.5" y="1347.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (5 samples, 0.29%)</title><rect x="495.5" y="1331.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.5" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (5 samples, 0.29%)</title><rect x="495.5" y="1315.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.5" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.29%)</title><rect x="495.5" y="1299.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.24%)</title><rect x="496.2" y="1283.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.24%)</title><rect x="496.2" y="1267.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="499.2" y="1278.0"></text>
</g>
<g>
<title>__write (4 samples, 0.24%)</title><rect x="496.2" y="1251.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="499.2" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="496.2" y="1235.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.2" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="496.2" y="1219.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.2" y="1230.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.24%)</title><rect x="496.2" y="1203.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="499.2" y="1214.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.24%)</title><rect x="496.2" y="1187.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.2" y="1198.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.24%)</title><rect x="496.2" y="1171.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.2" y="1182.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.24%)</title><rect x="496.2" y="1155.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.2" y="1166.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.24%)</title><rect x="496.2" y="1139.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="499.2" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.24%)</title><rect x="496.2" y="1123.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.2" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.24%)</title><rect x="496.2" y="1107.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.2" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="496.9" y="1091.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.9" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (21 samples, 1.24%)</title><rect x="498.9" y="1379.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (21 samples, 1.24%)</title><rect x="498.9" y="1363.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (21 samples, 1.24%)</title><rect x="498.9" y="1347.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (21 samples, 1.24%)</title><rect x="498.9" y="1331.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (6 samples, 0.35%)</title><rect x="498.9" y="1315.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$546/1953226430.apply (6 samples, 0.35%)</title><rect x="498.9" y="1299.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (6 samples, 0.35%)</title><rect x="498.9" y="1283.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (6 samples, 0.35%)</title><rect x="498.9" y="1267.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (6 samples, 0.35%)</title><rect x="498.9" y="1251.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (6 samples, 0.35%)</title><rect x="498.9" y="1235.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (6 samples, 0.35%)</title><rect x="498.9" y="1219.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (6 samples, 0.35%)</title><rect x="498.9" y="1203.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (6 samples, 0.35%)</title><rect x="498.9" y="1187.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (6 samples, 0.35%)</title><rect x="498.9" y="1171.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (6 samples, 0.35%)</title><rect x="498.9" y="1155.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.35%)</title><rect x="498.9" y="1139.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (6 samples, 0.35%)</title><rect x="498.9" y="1123.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (6 samples, 0.35%)</title><rect x="498.9" y="1107.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.9" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.24%)</title><rect x="498.9" y="1091.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (4 samples, 0.24%)</title><rect x="498.9" y="1075.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.9" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (4 samples, 0.24%)</title><rect x="498.9" y="1059.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.9" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (4 samples, 0.24%)</title><rect x="498.9" y="1043.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="498.9" y="1027.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="498.9" y="1011.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.9" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="498.9" y="995.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="498.9" y="979.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="498.9" y="963.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="498.9" y="947.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="498.9" y="931.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.18%)</title><rect x="498.9" y="915.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="498.9" y="899.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="498.9" y="883.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="498.9" y="867.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.9" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="498.9" y="851.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="501.9" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="498.9" y="835.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="501.9" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="499.6" y="851.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="502.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="500.3" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="500.3" y="819.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.3" y="830.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="500.3" y="803.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="503.3" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="500.3" y="787.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="500.3" y="771.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.3" y="782.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="500.3" y="755.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.3" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="500.3" y="739.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.3" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="500.3" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.3" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.06%)</title><rect x="501.0" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.06%)</title><rect x="501.0" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.0" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.06%)</title><rect x="501.0" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.0" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (2 samples, 0.12%)</title><rect x="501.7" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (2 samples, 0.12%)</title><rect x="501.7" y="1075.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.7" y="1086.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (1 samples, 0.06%)</title><rect x="503.1" y="1315.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.1" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (14 samples, 0.82%)</title><rect x="503.8" y="1315.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.8" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (14 samples, 0.82%)</title><rect x="503.8" y="1299.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (14 samples, 0.82%)</title><rect x="503.8" y="1283.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (14 samples, 0.82%)</title><rect x="503.8" y="1267.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (14 samples, 0.82%)</title><rect x="503.8" y="1251.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (14 samples, 0.82%)</title><rect x="503.8" y="1235.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.77%)</title><rect x="503.8" y="1219.0" width="9.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="506.8" y="1230.0"></text>
</g>
<g>
<title>__write (13 samples, 0.77%)</title><rect x="503.8" y="1203.0" width="9.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="506.8" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.71%)</title><rect x="504.5" y="1187.0" width="8.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.5" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.71%)</title><rect x="504.5" y="1171.0" width="8.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="507.5" y="1182.0"></text>
</g>
<g>
<title>sys_write (12 samples, 0.71%)</title><rect x="504.5" y="1155.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.5" y="1166.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="504.5" y="1139.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="507.5" y="1150.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="504.5" y="1123.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="507.5" y="1134.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="504.5" y="1107.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.5" y="1118.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.65%)</title><rect x="505.2" y="1139.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="508.2" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.65%)</title><rect x="505.2" y="1123.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.2" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.65%)</title><rect x="505.2" y="1107.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="508.2" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (11 samples, 0.65%)</title><rect x="505.2" y="1091.0" width="7.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="508.2" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (11 samples, 0.65%)</title><rect x="505.2" y="1075.0" width="7.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="508.2" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (10 samples, 0.59%)</title><rect x="505.2" y="1059.0" width="6.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="508.2" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (10 samples, 0.59%)</title><rect x="505.2" y="1043.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="508.2" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (10 samples, 0.59%)</title><rect x="505.2" y="1027.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="508.2" y="1038.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.06%)</title><rect x="505.9" y="1011.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="508.9" y="1022.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.06%)</title><rect x="505.9" y="995.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="508.9" y="1006.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.06%)</title><rect x="506.6" y="1011.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.6" y="1022.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="506.6" y="995.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.6" y="1006.0"></text>
</g>
<g>
<title>tcp_push (7 samples, 0.41%)</title><rect x="507.3" y="1011.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="510.3" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (7 samples, 0.41%)</title><rect x="507.3" y="995.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.3" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (7 samples, 0.41%)</title><rect x="507.3" y="979.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.3" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.35%)</title><rect x="507.3" y="963.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="510.3" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.24%)</title><rect x="508.7" y="947.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.7" y="958.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.06%)</title><rect x="509.4" y="931.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="512.4" y="942.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.12%)</title><rect x="510.1" y="931.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="513.1" y="942.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.12%)</title><rect x="510.1" y="915.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.1" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.12%)</title><rect x="510.1" y="899.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.1" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.12%)</title><rect x="510.1" y="883.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="513.1" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="510.8" y="867.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="513.8" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="510.8" y="851.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.8" y="862.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.06%)</title><rect x="510.8" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="513.8" y="846.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.06%)</title><rect x="510.8" y="819.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="513.8" y="830.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="510.8" y="803.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="513.8" y="814.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.06%)</title><rect x="510.8" y="787.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="513.8" y="798.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="511.4" y="963.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.4" y="974.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="511.4" y="947.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.4" y="958.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.06%)</title><rect x="511.4" y="931.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="514.4" y="942.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="511.4" y="915.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.4" y="926.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="511.4" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.4" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="511.4" y="883.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="514.4" y="894.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="512.1" y="1059.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="515.1" y="1070.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="512.1" y="1043.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.1" y="1054.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.06%)</title><rect x="512.8" y="1219.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="515.8" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (5 samples, 0.29%)</title><rect x="513.5" y="1443.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (5 samples, 0.29%)</title><rect x="513.5" y="1427.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (5 samples, 0.29%)</title><rect x="513.5" y="1411.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (5 samples, 0.29%)</title><rect x="513.5" y="1395.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.5" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (1 samples, 0.06%)</title><rect x="513.5" y="1379.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.5" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (1 samples, 0.06%)</title><rect x="513.5" y="1363.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.06%)</title><rect x="513.5" y="1347.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="513.5" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="513.5" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="513.5" y="1299.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="516.5" y="1310.0"></text>
</g>
<g>
<title>__write (1 samples, 0.06%)</title><rect x="513.5" y="1283.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="516.5" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="513.5" y="1267.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.5" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="513.5" y="1251.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="516.5" y="1262.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.06%)</title><rect x="513.5" y="1235.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.5" y="1246.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.06%)</title><rect x="513.5" y="1219.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="516.5" y="1230.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.06%)</title><rect x="513.5" y="1203.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.5" y="1214.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.06%)</title><rect x="513.5" y="1187.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.5" y="1198.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.06%)</title><rect x="513.5" y="1171.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.5" y="1182.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.06%)</title><rect x="513.5" y="1155.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="516.5" y="1166.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.06%)</title><rect x="513.5" y="1139.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="516.5" y="1150.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (4 samples, 0.24%)</title><rect x="514.2" y="1379.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.06%)</title><rect x="514.2" y="1363.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1347.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="514.2" y="1331.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1315.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.2" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1299.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.2" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.route (1 samples, 0.06%)</title><rect x="514.2" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.2" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.send (1 samples, 0.06%)</title><rect x="514.2" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.2" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (1 samples, 0.06%)</title><rect x="514.2" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (1 samples, 0.06%)</title><rect x="514.2" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.06%)</title><rect x="514.2" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="514.2" y="1187.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1171.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="514.2" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="514.2" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="514.2" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="514.2" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="514.2" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="514.2" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="514.2" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="514.2" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="514.2" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="514.2" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="514.2" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="514.2" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="514.2" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="514.2" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.2" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="514.2" y="915.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="517.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="514.2" y="899.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="514.2" y="883.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="517.2" y="894.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="514.2" y="867.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.2" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="514.2" y="851.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="517.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="514.2" y="835.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.2" y="846.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="514.2" y="819.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="517.2" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="514.2" y="803.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="517.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="514.2" y="787.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.2" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (1 samples, 0.06%)</title><rect x="514.9" y="1363.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.9" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (1 samples, 0.06%)</title><rect x="514.9" y="1347.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (1 samples, 0.06%)</title><rect x="514.9" y="1331.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.9" y="1342.0"></text>
</g>
<g>
<title>__fcntl (1 samples, 0.06%)</title><rect x="514.9" y="1315.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="517.9" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="514.9" y="1299.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="517.9" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="514.9" y="1283.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="517.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (2 samples, 0.12%)</title><rect x="515.6" y="1363.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.6" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (2 samples, 0.12%)</title><rect x="515.6" y="1347.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (2 samples, 0.12%)</title><rect x="515.6" y="1331.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.6" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (1 samples, 0.06%)</title><rect x="515.6" y="1315.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="518.6" y="1326.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.06%)</title><rect x="515.6" y="1299.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="518.6" y="1310.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (1 samples, 0.06%)</title><rect x="515.6" y="1283.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="518.6" y="1294.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="515.6" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="518.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="516.3" y="1315.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="519.3" y="1326.0"></text>
</g>
<g>
<title>accept (1 samples, 0.06%)</title><rect x="516.3" y="1299.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="519.3" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="516.3" y="1283.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="519.3" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="516.3" y="1267.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.3" y="1278.0"></text>
</g>
<g>
<title>sys_accept (1 samples, 0.06%)</title><rect x="516.3" y="1251.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.3" y="1262.0"></text>
</g>
<g>
<title>SYSC_accept4 (1 samples, 0.06%)</title><rect x="516.3" y="1235.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="519.3" y="1246.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.06%)</title><rect x="516.3" y="1219.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="519.3" y="1230.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.06%)</title><rect x="516.3" y="1203.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="519.3" y="1214.0"></text>
</g>
<g>
<title>get_empty_filp (1 samples, 0.06%)</title><rect x="516.3" y="1187.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.3" y="1198.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.aroundReceive (2 samples, 0.12%)</title><rect x="517.0" y="1443.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.12%)</title><rect x="517.0" y="1427.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.12%)</title><rect x="517.0" y="1411.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.0" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (2 samples, 0.12%)</title><rect x="517.0" y="1395.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.0" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$anonfun$receiveClusterEvent$1.applyOrElse (2 samples, 0.12%)</title><rect x="517.0" y="1379.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.0" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.memberUp (2 samples, 0.12%)</title><rect x="517.0" y="1363.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.12%)</title><rect x="517.0" y="1347.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (2 samples, 0.12%)</title><rect x="517.0" y="1331.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (2 samples, 0.12%)</title><rect x="517.0" y="1315.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (2 samples, 0.12%)</title><rect x="517.0" y="1299.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (2 samples, 0.12%)</title><rect x="517.0" y="1283.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.12%)</title><rect x="517.0" y="1267.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="517.0" y="1251.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="517.7" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="517.7" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="517.7" y="1203.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.7" y="1214.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.06%)</title><rect x="517.7" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.7" y="1198.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="517.7" y="1171.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="520.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (373 samples, 21.95%)</title><rect x="518.4" y="1443.0" width="259.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.4" y="1454.0">akka/stream/impl/fusing/ActorGraphI..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (373 samples, 21.95%)</title><rect x="518.4" y="1427.0" width="259.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.4" y="1438.0">akka/actor/Actor.aroundReceive$</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (373 samples, 21.95%)</title><rect x="518.4" y="1411.0" width="259.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.4" y="1422.0">akka/actor/Actor.aroundReceive</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (372 samples, 21.90%)</title><rect x="518.4" y="1395.0" width="258.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.4" y="1406.0">akka/stream/impl/fusing/ActorGraph..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (296 samples, 17.42%)</title><rect x="518.4" y="1379.0" width="205.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.4" y="1390.0">akka/stream/impl/fusing/Act..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.isTerminated (1 samples, 0.06%)</title><rect x="518.4" y="1363.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.canShutDown (1 samples, 0.06%)</title><rect x="518.4" y="1347.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (294 samples, 17.30%)</title><rect x="519.1" y="1363.0" width="204.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.1" y="1374.0">akka/stream/impl/fusing/Gra..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (294 samples, 17.30%)</title><rect x="519.1" y="1347.0" width="204.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.1" y="1358.0">akka/stream/impl/fusing/Gra..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (38 samples, 2.24%)</title><rect x="519.1" y="1331.0" width="26.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.1" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$1284/789404945.apply (7 samples, 0.41%)</title><rect x="521.2" y="1315.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (7 samples, 0.41%)</title><rect x="521.2" y="1299.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (7 samples, 0.41%)</title><rect x="521.2" y="1283.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.2" y="1294.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (1 samples, 0.06%)</title><rect x="521.2" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.2" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (1 samples, 0.06%)</title><rect x="521.2" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.2" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (1 samples, 0.06%)</title><rect x="521.2" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.2" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.06%)</title><rect x="521.2" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.2" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.06%)</title><rect x="521.2" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.2" y="1214.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.06%)</title><rect x="521.2" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.2" y="1198.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="521.2" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.2" y="1182.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="521.2" y="1155.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.2" y="1166.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.06%)</title><rect x="521.2" y="1139.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.2" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.06%)</title><rect x="521.2" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="521.2" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (1 samples, 0.06%)</title><rect x="521.9" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (1 samples, 0.06%)</title><rect x="521.9" y="1251.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.9" y="1262.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.06%)</title><rect x="521.9" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$683/966201776.apply (1 samples, 0.06%)</title><rect x="521.9" y="1219.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$cancelTimer$1 (1 samples, 0.06%)</title><rect x="521.9" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$minus$eq (1 samples, 0.06%)</title><rect x="521.9" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/Shrinkable.$minus$eq$ (1 samples, 0.06%)</title><rect x="521.9" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Shrinkable.$minus$eq (1 samples, 0.06%)</title><rect x="521.9" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.subtractOne (1 samples, 0.06%)</title><rect x="521.9" y="1139.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.subtractOne (1 samples, 0.06%)</title><rect x="521.9" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.remove0 (1 samples, 0.06%)</title><rect x="521.9" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri.toHttpRequestTargetOriginForm (1 samples, 0.06%)</title><rect x="522.6" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (4 samples, 0.24%)</title><rect x="523.3" y="1267.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (4 samples, 0.24%)</title><rect x="523.3" y="1251.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (4 samples, 0.24%)</title><rect x="523.3" y="1235.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.3" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.24%)</title><rect x="523.3" y="1219.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.3" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.24%)</title><rect x="523.3" y="1203.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.3" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.24%)</title><rect x="523.3" y="1187.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1270/103479348.apply (3 samples, 0.18%)</title><rect x="523.3" y="1171.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (3 samples, 0.18%)</title><rect x="523.3" y="1155.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (3 samples, 0.18%)</title><rect x="523.3" y="1139.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.IP$minusliteral (1 samples, 0.06%)</title><rect x="523.3" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (1 samples, 0.06%)</title><rect x="523.9" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (1 samples, 0.06%)</title><rect x="523.9" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (1 samples, 0.06%)</title><rect x="523.9" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (1 samples, 0.06%)</title><rect x="523.9" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (1 samples, 0.06%)</title><rect x="524.6" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (1 samples, 0.06%)</title><rect x="524.6" y="1107.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.6" y="1118.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (1 samples, 0.06%)</title><rect x="524.6" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.6" y="1102.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (1 samples, 0.06%)</title><rect x="525.3" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1280/161750189.apply (4 samples, 0.24%)</title><rect x="526.0" y="1315.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (4 samples, 0.24%)</title><rect x="526.0" y="1299.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (4 samples, 0.24%)</title><rect x="526.0" y="1283.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1376/1754133975.apply$mcV$sp (4 samples, 0.24%)</title><rect x="526.0" y="1267.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (4 samples, 0.24%)</title><rect x="526.0" y="1251.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1318/49220172.apply (4 samples, 0.24%)</title><rect x="526.0" y="1235.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (4 samples, 0.24%)</title><rect x="526.0" y="1219.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (4 samples, 0.24%)</title><rect x="526.0" y="1203.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (4 samples, 0.24%)</title><rect x="526.0" y="1187.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1379/1709287315.apply (4 samples, 0.24%)</title><rect x="526.0" y="1171.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (4 samples, 0.24%)</title><rect x="526.0" y="1155.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (4 samples, 0.24%)</title><rect x="526.0" y="1139.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (1 samples, 0.06%)</title><rect x="526.0" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="1134.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.06%)</title><rect x="526.0" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.0" y="1118.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.06%)</title><rect x="526.0" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.0" y="1102.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.06%)</title><rect x="526.0" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (3 samples, 0.18%)</title><rect x="526.7" y="1123.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (3 samples, 0.18%)</title><rect x="526.7" y="1107.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (3 samples, 0.18%)</title><rect x="526.7" y="1091.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (3 samples, 0.18%)</title><rect x="526.7" y="1075.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState.name (2 samples, 0.12%)</title><rect x="526.7" y="1059.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1294/907100646.apply (1 samples, 0.06%)</title><rect x="527.4" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="528.1" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="528.1" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (2 samples, 0.12%)</title><rect x="528.8" y="1315.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (2 samples, 0.12%)</title><rect x="528.8" y="1299.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.postStop (1 samples, 0.06%)</title><rect x="528.8" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.afterPostStop (1 samples, 0.06%)</title><rect x="529.5" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (1 samples, 0.06%)</title><rect x="529.5" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.akka$stream$stage$GraphStageLogic$$streamDetachedException (1 samples, 0.06%)</title><rect x="529.5" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="529.5" y="1235.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="529.5" y="1219.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="529.5" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="529.5" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.5" y="1198.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="529.5" y="1171.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.5" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="529.5" y="1155.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="532.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/1107510609.apply (8 samples, 0.47%)</title><rect x="530.2" y="1315.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (8 samples, 0.47%)</title><rect x="530.2" y="1299.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (8 samples, 0.47%)</title><rect x="530.2" y="1283.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (8 samples, 0.47%)</title><rect x="530.2" y="1267.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1321/1104411526.apply (6 samples, 0.35%)</title><rect x="530.2" y="1251.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (6 samples, 0.35%)</title><rect x="530.2" y="1235.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (6 samples, 0.35%)</title><rect x="530.2" y="1219.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (6 samples, 0.35%)</title><rect x="530.2" y="1203.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.18%)</title><rect x="530.2" y="1187.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="530.2" y="1171.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.18%)</title><rect x="530.2" y="1155.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.18%)</title><rect x="530.2" y="1139.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="530.2" y="1123.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.18%)</title><rect x="530.2" y="1107.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.18%)</title><rect x="530.2" y="1091.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.18%)</title><rect x="530.2" y="1075.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="530.2" y="1059.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="530.2" y="1043.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="530.2" y="1027.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="530.2" y="1011.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.2" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="530.2" y="995.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="530.2" y="979.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="530.2" y="963.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.18%)</title><rect x="530.2" y="947.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="530.2" y="931.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="530.2" y="915.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="530.2" y="899.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.2" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.18%)</title><rect x="530.2" y="883.0" width="2.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="533.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="530.2" y="867.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="533.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="530.2" y="851.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="533.2" y="862.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.18%)</title><rect x="530.2" y="835.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="533.2" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.18%)</title><rect x="530.2" y="819.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="533.2" y="830.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.18%)</title><rect x="530.2" y="803.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="533.2" y="814.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.18%)</title><rect x="530.2" y="787.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.2" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.18%)</title><rect x="530.2" y="771.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="533.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="530.2" y="755.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="533.2" y="766.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.unwatch (1 samples, 0.06%)</title><rect x="532.3" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatch (1 samples, 0.06%)</title><rect x="532.3" y="1171.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="532.3" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.06%)</title><rect x="532.3" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.06%)</title><rect x="532.3" y="1123.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.06%)</title><rect x="532.3" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.06%)</title><rect x="532.3" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="532.3" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="532.3" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="532.3" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="532.3" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="532.3" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="532.3" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="532.3" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="532.3" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="532.3" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="532.3" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="532.3" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.3" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="532.3" y="899.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="535.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="532.3" y="883.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="535.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="532.3" y="867.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="535.3" y="878.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="532.3" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="535.3" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="532.3" y="835.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="535.3" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="532.3" y="819.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="535.3" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="532.3" y="803.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="535.3" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="532.3" y="787.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="532.3" y="771.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.3" y="782.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (1 samples, 0.06%)</title><rect x="533.0" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (1 samples, 0.06%)</title><rect x="533.0" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="533.0" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.0" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.06%)</title><rect x="533.0" y="1139.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.0" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.06%)</title><rect x="533.0" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.06%)</title><rect x="533.0" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.06%)</title><rect x="533.0" y="1091.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="533.0" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="533.0" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.0" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="533.0" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="533.0" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="533.0" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="533.0" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="533.0" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="533.0" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="533.0" y="947.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="533.0" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="533.0" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.0" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="533.0" y="899.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="536.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="533.0" y="883.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="533.0" y="867.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.0" y="878.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="533.0" y="851.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="536.0" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="533.0" y="835.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.0" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="533.0" y="819.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.0" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="533.0" y="803.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="536.0" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="533.0" y="787.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="536.0" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="533.0" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="536.0" y="782.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (1 samples, 0.06%)</title><rect x="533.7" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (1 samples, 0.06%)</title><rect x="533.7" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (1 samples, 0.06%)</title><rect x="533.7" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (1 samples, 0.06%)</title><rect x="533.7" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (1 samples, 0.06%)</title><rect x="533.7" y="1123.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.7" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (1 samples, 0.06%)</title><rect x="533.7" y="1107.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.7" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.06%)</title><rect x="533.7" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.7" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="533.7" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.7" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="533.7" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.7" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.06%)</title><rect x="533.7" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (1 samples, 0.06%)</title><rect x="533.7" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="533.7" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="533.7" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (1 samples, 0.06%)</title><rect x="533.7" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.7" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (1 samples, 0.06%)</title><rect x="533.7" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.7" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (1 samples, 0.06%)</title><rect x="533.7" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.7" y="958.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1 samples, 0.06%)</title><rect x="533.7" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.7" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.06%)</title><rect x="533.7" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.7" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1377/632763153.apply (2 samples, 0.12%)</title><rect x="534.4" y="1251.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1$adapted (2 samples, 0.12%)</title><rect x="534.4" y="1235.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1 (2 samples, 0.12%)</title><rect x="534.4" y="1219.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (2 samples, 0.12%)</title><rect x="534.4" y="1203.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.akka$stream$impl$io$TcpConnectionStage$TcpStreamLogic$$fail (1 samples, 0.06%)</title><rect x="534.4" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (1 samples, 0.06%)</title><rect x="534.4" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="534.4" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.06%)</title><rect x="534.4" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="534.4" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="534.4" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.4" y="1118.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (1 samples, 0.06%)</title><rect x="535.1" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="535.1" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="535.1" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.1" y="1166.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (1 samples, 0.06%)</title><rect x="535.1" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.06%)</title><rect x="535.1" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.06%)</title><rect x="535.1" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$684/1037651086.apply (12 samples, 0.71%)</title><rect x="535.8" y="1315.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (12 samples, 0.71%)</title><rect x="535.8" y="1299.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (12 samples, 0.71%)</title><rect x="535.8" y="1283.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (12 samples, 0.71%)</title><rect x="535.8" y="1267.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (6 samples, 0.35%)</title><rect x="535.8" y="1251.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (1 samples, 0.06%)</title><rect x="536.5" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="536.5" y="1219.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.06%)</title><rect x="536.5" y="1203.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (4 samples, 0.24%)</title><rect x="537.1" y="1235.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.24%)</title><rect x="537.1" y="1219.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.24%)</title><rect x="537.1" y="1203.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.24%)</title><rect x="537.1" y="1187.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.24%)</title><rect x="537.1" y="1171.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.1" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.24%)</title><rect x="537.1" y="1155.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="540.1" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.24%)</title><rect x="537.1" y="1139.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="540.1" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (4 samples, 0.24%)</title><rect x="537.1" y="1123.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="540.1" y="1134.0"></text>
</g>
<g>
<title>frame::interpreter_frame_bcp() const (1 samples, 0.06%)</title><rect x="537.1" y="1107.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="540.1" y="1118.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.18%)</title><rect x="537.8" y="1107.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="540.8" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.06%)</title><rect x="538.5" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="541.5" y="1102.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.06%)</title><rect x="539.2" y="1091.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="542.2" y="1102.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.06%)</title><rect x="539.2" y="1075.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="542.2" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="539.2" y="1059.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="542.2" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="539.2" y="1043.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="542.2" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="539.2" y="1027.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="542.2" y="1038.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="539.2" y="1011.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="542.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (6 samples, 0.35%)</title><rect x="539.9" y="1251.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (4 samples, 0.24%)</title><rect x="539.9" y="1235.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.9" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (4 samples, 0.24%)</title><rect x="539.9" y="1219.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.9" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (4 samples, 0.24%)</title><rect x="539.9" y="1203.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.9" y="1214.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="542.0" y="1187.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="545.0" y="1198.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="542.0" y="1171.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.0" y="1182.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="542.0" y="1155.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="545.0" y="1166.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="542.0" y="1139.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="545.0" y="1150.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="542.0" y="1123.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.0" y="1134.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="542.0" y="1107.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="545.0" y="1118.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="542.0" y="1091.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="545.0" y="1102.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="542.0" y="1075.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="545.0" y="1086.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="542.0" y="1059.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.0" y="1070.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="542.0" y="1043.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.0" y="1054.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="542.0" y="1027.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="545.0" y="1038.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="542.0" y="1011.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="545.0" y="1022.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="542.0" y="995.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="545.0" y="1006.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="542.0" y="979.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="545.0" y="990.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="542.0" y="963.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="545.0" y="974.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="542.0" y="947.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="545.0" y="958.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="542.0" y="931.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="545.0" y="942.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.06%)</title><rect x="542.0" y="915.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="545.0" y="926.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="542.0" y="899.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="545.0" y="910.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="542.0" y="883.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.0" y="894.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="542.0" y="867.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.0" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="542.0" y="851.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="545.0" y="862.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="542.7" y="1235.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.7" y="1246.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="543.4" y="1219.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="546.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (2 samples, 0.12%)</title><rect x="544.1" y="1315.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.1" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (2 samples, 0.12%)</title><rect x="544.1" y="1299.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.1" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (2 samples, 0.12%)</title><rect x="544.1" y="1283.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.1" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (2 samples, 0.12%)</title><rect x="544.1" y="1267.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.1" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (2 samples, 0.12%)</title><rect x="544.1" y="1251.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.1" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (2 samples, 0.12%)</title><rect x="544.1" y="1235.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.1" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (2 samples, 0.12%)</title><rect x="544.1" y="1219.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.1" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.12%)</title><rect x="544.1" y="1203.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.1" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (2 samples, 0.12%)</title><rect x="544.1" y="1187.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.1" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.12%)</title><rect x="544.1" y="1171.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.1" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (2 samples, 0.12%)</title><rect x="544.1" y="1155.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.06%)</title><rect x="544.1" y="1139.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.06%)</title><rect x="544.1" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.06%)</title><rect x="544.1" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.1" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1 samples, 0.06%)</title><rect x="544.8" y="1139.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.8" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="544.8" y="1123.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="547.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (1 samples, 0.06%)</title><rect x="545.5" y="1331.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (1 samples, 0.06%)</title><rect x="545.5" y="1315.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (255 samples, 15.01%)</title><rect x="546.2" y="1331.0" width="177.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.2" y="1342.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (254 samples, 14.95%)</title><rect x="546.2" y="1315.0" width="176.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.2" y="1326.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$$anon$1$$anon$2.onPush (1 samples, 0.06%)</title><rect x="546.9" y="1299.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$5.onPull (1 samples, 0.06%)</title><rect x="547.6" y="1299.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (8 samples, 0.47%)</title><rect x="548.3" y="1299.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (8 samples, 0.47%)</title><rect x="548.3" y="1283.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.postStop (1 samples, 0.06%)</title><rect x="548.3" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="551.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="548.3" y="1251.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="548.3" y="1235.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.postStop (1 samples, 0.06%)</title><rect x="549.0" y="1267.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.postStop (1 samples, 0.06%)</title><rect x="549.6" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (5 samples, 0.29%)</title><rect x="550.3" y="1267.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (4 samples, 0.24%)</title><rect x="551.0" y="1251.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (4 samples, 0.24%)</title><rect x="551.0" y="1235.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (4 samples, 0.24%)</title><rect x="551.0" y="1219.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (4 samples, 0.24%)</title><rect x="551.0" y="1203.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (4 samples, 0.24%)</title><rect x="551.0" y="1187.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (4 samples, 0.24%)</title><rect x="551.0" y="1171.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (4 samples, 0.24%)</title><rect x="551.0" y="1155.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.0" y="1166.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="551.0" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="551.0" y="1123.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.0" y="1134.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="551.0" y="1107.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="554.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (3 samples, 0.18%)</title><rect x="551.7" y="1139.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$1085/40639605.apply (1 samples, 0.06%)</title><rect x="551.7" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (1 samples, 0.06%)</title><rect x="551.7" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (1 samples, 0.06%)</title><rect x="551.7" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (1 samples, 0.06%)</title><rect x="551.7" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="551.7" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.06%)</title><rect x="551.7" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.7" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.06%)</title><rect x="551.7" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.7" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.06%)</title><rect x="551.7" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.06%)</title><rect x="551.7" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.06%)</title><rect x="551.7" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.7" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.06%)</title><rect x="551.7" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.7" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.06%)</title><rect x="551.7" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.7" y="958.0"></text>
</g>
<g>
<title>scala/Predef$.assert (1 samples, 0.06%)</title><rect x="551.7" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.7" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Unwatch.unlinked (1 samples, 0.06%)</title><rect x="551.7" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="926.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$1445/1704906986.apply (1 samples, 0.06%)</title><rect x="552.4" y="1123.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$2$adapted (1 samples, 0.06%)</title><rect x="552.4" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.4" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$2 (1 samples, 0.06%)</title><rect x="552.4" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.4" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="552.4" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="555.4" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="552.4" y="1059.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="555.4" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="552.4" y="1043.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="555.4" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="552.4" y="1027.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="555.4" y="1038.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.06%)</title><rect x="552.4" y="1011.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="555.4" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="552.4" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="555.4" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="552.4" y="979.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="555.4" y="990.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="552.4" y="963.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="555.4" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="552.4" y="947.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="555.4" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="552.4" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="555.4" y="942.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$1448/138144438.apply (1 samples, 0.06%)</title><rect x="553.1" y="1123.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$3$adapted (1 samples, 0.06%)</title><rect x="553.1" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$3 (1 samples, 0.06%)</title><rect x="553.1" y="1091.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (1 samples, 0.06%)</title><rect x="553.1" y="1075.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="553.1" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.1" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.06%)</title><rect x="553.1" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.1" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.06%)</title><rect x="553.1" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.1" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.06%)</title><rect x="553.1" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.06%)</title><rect x="553.1" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.06%)</title><rect x="553.1" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.1" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.06%)</title><rect x="553.1" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.06%)</title><rect x="553.1" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.1" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="553.1" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="556.1" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="553.1" y="915.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="556.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="553.1" y="899.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="556.1" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.06%)</title><rect x="553.1" y="883.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="556.1" y="894.0"></text>
</g>
<g>
<title>CompiledMethod::attached_method_before_pc(unsigned char*) (1 samples, 0.06%)</title><rect x="553.1" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="556.1" y="878.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.06%)</title><rect x="553.1" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="556.1" y="862.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (89 samples, 5.24%)</title><rect x="553.8" y="1299.0" width="61.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.8" y="1310.0">akka/s..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.onUpstreamFailure (1 samples, 0.06%)</title><rect x="555.2" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (1 samples, 0.06%)</title><rect x="555.2" y="1267.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (1 samples, 0.06%)</title><rect x="555.2" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (1 samples, 0.06%)</title><rect x="555.2" y="1235.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="555.2" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$7.onPull (1 samples, 0.06%)</title><rect x="555.9" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$4.onDownstreamFinish (1 samples, 0.06%)</title><rect x="556.6" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (1 samples, 0.06%)</title><rect x="556.6" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (3 samples, 0.18%)</title><rect x="557.3" y="1283.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.onPull (1 samples, 0.06%)</title><rect x="558.0" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/FixedSizeBuffer$FixedSizeBuffer.dequeue (1 samples, 0.06%)</title><rect x="558.0" y="1251.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/FixedSizeBuffer$FixedSizeBuffer.get (1 samples, 0.06%)</title><rect x="558.0" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.0" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="558.7" y="1267.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="561.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (30 samples, 1.77%)</title><rect x="559.4" y="1283.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onDownstreamFinish (1 samples, 0.06%)</title><rect x="560.1" y="1267.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (9 samples, 0.53%)</title><rect x="560.8" y="1267.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$524/2033282874.apply (8 samples, 0.47%)</title><rect x="560.8" y="1251.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (8 samples, 0.47%)</title><rect x="560.8" y="1235.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (8 samples, 0.47%)</title><rect x="560.8" y="1219.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (8 samples, 0.47%)</title><rect x="560.8" y="1203.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (8 samples, 0.47%)</title><rect x="560.8" y="1187.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (8 samples, 0.47%)</title><rect x="560.8" y="1171.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (1 samples, 0.06%)</title><rect x="560.8" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (3 samples, 0.18%)</title><rect x="561.5" y="1155.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (3 samples, 0.18%)</title><rect x="561.5" y="1139.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (3 samples, 0.18%)</title><rect x="561.5" y="1123.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (3 samples, 0.18%)</title><rect x="561.5" y="1107.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (3 samples, 0.18%)</title><rect x="561.5" y="1091.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (3 samples, 0.18%)</title><rect x="561.5" y="1075.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.5" y="1086.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (3 samples, 0.18%)</title><rect x="561.5" y="1059.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (3 samples, 0.18%)</title><rect x="561.5" y="1043.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.5" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (3 samples, 0.18%)</title><rect x="561.5" y="1027.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.5" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (3 samples, 0.18%)</title><rect x="561.5" y="1011.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (3 samples, 0.18%)</title><rect x="561.5" y="995.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (3 samples, 0.18%)</title><rect x="561.5" y="979.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (3 samples, 0.18%)</title><rect x="561.5" y="963.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (3 samples, 0.18%)</title><rect x="561.5" y="947.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.5" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="561.5" y="931.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.5" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="561.5" y="915.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.5" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="561.5" y="899.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="561.5" y="883.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.5" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="561.5" y="867.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="561.5" y="851.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="561.5" y="835.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.18%)</title><rect x="561.5" y="819.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="561.5" y="803.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="561.5" y="787.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="561.5" y="771.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.5" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="561.5" y="755.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="564.5" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="561.5" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="564.5" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="562.1" y="755.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="565.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="562.1" y="739.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="565.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="562.1" y="723.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="565.1" y="734.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="562.1" y="707.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="565.1" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="562.1" y="691.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="562.1" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="565.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="562.1" y="659.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="565.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="562.1" y="643.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="565.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="562.1" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="565.1" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (1 samples, 0.06%)</title><rect x="563.5" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (1 samples, 0.06%)</title><rect x="563.5" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="563.5" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="563.5" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.5" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="563.5" y="1091.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="566.5" y="1102.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="563.5" y="1075.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="566.5" y="1086.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="563.5" y="1059.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="566.5" y="1070.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="563.5" y="1043.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="566.5" y="1054.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="563.5" y="1027.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (1 samples, 0.06%)</title><rect x="564.2" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$910/202257585.apply (1 samples, 0.06%)</title><rect x="564.2" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (1 samples, 0.06%)</title><rect x="564.2" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (1 samples, 0.06%)</title><rect x="564.2" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.06%)</title><rect x="564.2" y="1091.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.06%)</title><rect x="564.2" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.06%)</title><rect x="564.2" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="564.2" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="564.2" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="564.2" y="1011.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="564.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.06%)</title><rect x="564.2" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.copyAndMigrateFromInlineToNode (1 samples, 0.06%)</title><rect x="564.2" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.2" y="974.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="564.2" y="947.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="567.2" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.06%)</title><rect x="564.9" y="1155.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.9" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.06%)</title><rect x="564.9" y="1139.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.9" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.grow (1 samples, 0.06%)</title><rect x="564.9" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.9" y="1134.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="564.9" y="1107.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="567.9" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeLast (1 samples, 0.06%)</title><rect x="565.6" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.6" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollLast (1 samples, 0.06%)</title><rect x="565.6" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.6" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.06%)</title><rect x="565.6" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.6" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (1 samples, 0.06%)</title><rect x="566.3" y="1251.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.3" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (1 samples, 0.06%)</title><rect x="566.3" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (19 samples, 1.12%)</title><rect x="567.0" y="1267.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (16 samples, 0.94%)</title><rect x="567.0" y="1251.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (16 samples, 0.94%)</title><rect x="567.0" y="1235.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (16 samples, 0.94%)</title><rect x="567.0" y="1219.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (16 samples, 0.94%)</title><rect x="567.0" y="1203.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (16 samples, 0.94%)</title><rect x="567.0" y="1187.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (16 samples, 0.94%)</title><rect x="567.0" y="1171.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (16 samples, 0.94%)</title><rect x="567.0" y="1155.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (16 samples, 0.94%)</title><rect x="567.0" y="1139.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (15 samples, 0.88%)</title><rect x="567.0" y="1123.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (15 samples, 0.88%)</title><rect x="567.0" y="1107.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (15 samples, 0.88%)</title><rect x="567.0" y="1091.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (15 samples, 0.88%)</title><rect x="567.0" y="1075.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (15 samples, 0.88%)</title><rect x="567.0" y="1059.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.88%)</title><rect x="567.0" y="1043.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.88%)</title><rect x="567.0" y="1027.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="567.0" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="567.0" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="567.0" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="567.0" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (14 samples, 0.82%)</title><rect x="567.7" y="1011.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 0.82%)</title><rect x="567.7" y="995.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.82%)</title><rect x="567.7" y="979.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.77%)</title><rect x="568.4" y="963.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="568.4" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="571.4" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="569.1" y="947.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="572.1" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.06%)</title><rect x="569.1" y="931.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="572.1" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.65%)</title><rect x="569.8" y="947.0" width="7.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="572.8" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.53%)</title><rect x="571.2" y="931.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="574.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.53%)</title><rect x="571.2" y="915.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="574.2" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="571.2" y="899.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.2" y="910.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.47%)</title><rect x="571.9" y="899.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.9" y="910.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.47%)</title><rect x="571.9" y="883.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="574.9" y="894.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.47%)</title><rect x="571.9" y="867.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="574.9" y="878.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.47%)</title><rect x="571.9" y="851.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="574.9" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.47%)</title><rect x="571.9" y="835.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.47%)</title><rect x="571.9" y="819.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.9" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.06%)</title><rect x="577.4" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.06%)</title><rect x="577.4" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.06%)</title><rect x="577.4" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (1 samples, 0.06%)</title><rect x="577.4" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.06%)</title><rect x="577.4" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.06%)</title><rect x="577.4" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.4" y="1054.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="577.4" y="1027.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.4" y="1038.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="577.4" y="1011.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.4" y="1022.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="577.4" y="995.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.4" y="1006.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="577.4" y="979.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.4" y="990.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="577.4" y="963.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="580.4" y="974.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="577.4" y="947.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.4" y="958.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="577.4" y="931.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.4" y="942.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="577.4" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.4" y="926.0"></text>
</g>
<g>
<title>akka/io/Tcp$Write.&lt;init&gt; (1 samples, 0.06%)</title><rect x="578.1" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.1" y="1262.0"></text>
</g>
<g>
<title>akka/io/Tcp$SimpleWriteCommand.&lt;init&gt; (1 samples, 0.06%)</title><rect x="578.1" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.1" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="578.1" y="1219.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="581.1" y="1230.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (2 samples, 0.12%)</title><rect x="578.8" y="1251.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.8" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (2 samples, 0.12%)</title><rect x="578.8" y="1235.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (2 samples, 0.12%)</title><rect x="578.8" y="1219.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (2 samples, 0.12%)</title><rect x="578.8" y="1203.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.8" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (2 samples, 0.12%)</title><rect x="578.8" y="1187.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (2 samples, 0.12%)</title><rect x="578.8" y="1171.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (2 samples, 0.12%)</title><rect x="578.8" y="1155.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onUpstreamFailure (1 samples, 0.06%)</title><rect x="580.2" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (1 samples, 0.06%)</title><rect x="580.2" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (1 samples, 0.06%)</title><rect x="580.2" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreter (1 samples, 0.06%)</title><rect x="580.2" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="580.2" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="580.2" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (3 samples, 0.18%)</title><rect x="580.9" y="1283.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.18%)</title><rect x="580.9" y="1267.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.18%)</title><rect x="580.9" y="1251.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (3 samples, 0.18%)</title><rect x="580.9" y="1235.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.18%)</title><rect x="580.9" y="1219.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.18%)</title><rect x="580.9" y="1203.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (3 samples, 0.18%)</title><rect x="580.9" y="1187.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="580.9" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="580.9" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.06%)</title><rect x="580.9" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.12%)</title><rect x="581.6" y="1171.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.12%)</title><rect x="581.6" y="1155.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.12%)</title><rect x="581.6" y="1139.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.12%)</title><rect x="581.6" y="1123.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.12%)</title><rect x="581.6" y="1107.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.06%)</title><rect x="582.3" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onUpstreamFailure (1 samples, 0.06%)</title><rect x="583.0" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (1 samples, 0.06%)</title><rect x="583.0" y="1267.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (1 samples, 0.06%)</title><rect x="583.0" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (1 samples, 0.06%)</title><rect x="583.0" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="583.0" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFailure (2 samples, 0.12%)</title><rect x="583.7" y="1283.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.7" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failure (2 samples, 0.12%)</title><rect x="583.7" y="1267.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure$ (2 samples, 0.12%)</title><rect x="583.7" y="1251.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure (2 samples, 0.12%)</title><rect x="583.7" y="1235.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (2 samples, 0.12%)</title><rect x="583.7" y="1219.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (2 samples, 0.12%)</title><rect x="583.7" y="1203.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (2 samples, 0.12%)</title><rect x="583.7" y="1187.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (2 samples, 0.12%)</title><rect x="583.7" y="1171.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.12%)</title><rect x="583.7" y="1155.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (2 samples, 0.12%)</title><rect x="583.7" y="1139.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.12%)</title><rect x="583.7" y="1123.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.06%)</title><rect x="584.4" y="1107.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="584.4" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="584.4" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.06%)</title><rect x="584.4" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.06%)</title><rect x="584.4" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="584.4" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="584.4" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="584.4" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.4" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="584.4" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="584.4" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="584.4" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="584.4" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="584.4" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="584.4" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="584.4" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.4" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="584.4" y="867.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="587.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="584.4" y="851.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.4" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="584.4" y="835.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.4" y="846.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="584.4" y="819.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.4" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="584.4" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.4" y="814.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="584.4" y="787.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.4" y="798.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="584.4" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.4" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="584.4" y="755.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.4" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="584.4" y="739.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.4" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (3 samples, 0.18%)</title><rect x="585.1" y="1283.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="588.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.18%)</title><rect x="585.1" y="1267.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.18%)</title><rect x="585.1" y="1251.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (3 samples, 0.18%)</title><rect x="585.1" y="1235.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.18%)</title><rect x="585.1" y="1219.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.18%)</title><rect x="585.1" y="1203.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (3 samples, 0.18%)</title><rect x="585.1" y="1187.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="585.1" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="585.1" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.06%)</title><rect x="585.1" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.12%)</title><rect x="585.8" y="1171.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.12%)</title><rect x="585.8" y="1155.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.12%)</title><rect x="585.8" y="1139.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.12%)</title><rect x="585.8" y="1123.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.12%)</title><rect x="585.8" y="1107.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.06%)</title><rect x="586.5" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onUpstreamFailure (2 samples, 0.12%)</title><rect x="587.2" y="1283.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (1 samples, 0.06%)</title><rect x="587.2" y="1267.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (1 samples, 0.06%)</title><rect x="587.2" y="1251.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (1 samples, 0.06%)</title><rect x="587.2" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="587.2" y="1219.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.2" y="1230.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="587.2" y="1203.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="590.2" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="587.2" y="1187.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.2" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="587.2" y="1171.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="590.2" y="1182.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="587.2" y="1155.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="590.2" y="1166.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="587.2" y="1139.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="590.2" y="1150.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="587.2" y="1123.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="590.2" y="1134.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="587.2" y="1107.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="590.2" y="1118.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="587.2" y="1091.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="590.2" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/AbstractPartialFunction.apply (1 samples, 0.06%)</title><rect x="587.8" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (1 samples, 0.06%)</title><rect x="587.8" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (1 samples, 0.06%)</title><rect x="587.8" y="1235.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (8 samples, 0.47%)</title><rect x="588.5" y="1283.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.18%)</title><rect x="588.5" y="1267.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="588.5" y="1251.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.18%)</title><rect x="588.5" y="1235.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.18%)</title><rect x="588.5" y="1219.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="588.5" y="1203.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.18%)</title><rect x="588.5" y="1187.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.18%)</title><rect x="588.5" y="1171.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.5" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.18%)</title><rect x="588.5" y="1155.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="588.5" y="1139.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="588.5" y="1123.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="588.5" y="1107.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="588.5" y="1091.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="588.5" y="1075.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="588.5" y="1059.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="588.5" y="1043.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.18%)</title><rect x="588.5" y="1027.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="588.5" y="1011.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="588.5" y="995.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="589.2" y="979.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.2" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="589.2" y="963.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="592.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="589.2" y="947.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="592.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="589.2" y="931.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="592.2" y="942.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="589.2" y="915.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.2" y="926.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="589.2" y="899.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="592.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="589.2" y="883.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="589.2" y="867.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="592.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="589.2" y="851.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="589.2" y="835.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="592.2" y="846.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.12%)</title><rect x="590.6" y="1267.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="1278.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (2 samples, 0.12%)</title><rect x="590.6" y="1251.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.6" y="1262.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.06%)</title><rect x="590.6" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.6" y="1246.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="590.6" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.6" y="1230.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="590.6" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.06%)</title><rect x="590.6" y="1187.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.6" y="1198.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.06%)</title><rect x="590.6" y="1171.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="590.6" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.6" y="1166.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (1 samples, 0.06%)</title><rect x="591.3" y="1235.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.3" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (1 samples, 0.06%)</title><rect x="591.3" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.3" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.06%)</title><rect x="591.3" y="1203.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.3" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.06%)</title><rect x="591.3" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.log (3 samples, 0.18%)</title><rect x="592.0" y="1267.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log$ (3 samples, 0.18%)</title><rect x="592.0" y="1251.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log (3 samples, 0.18%)</title><rect x="592.0" y="1235.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.makeLogger (2 samples, 0.12%)</title><rect x="592.0" y="1219.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.0" y="1230.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (2 samples, 0.12%)</title><rect x="592.0" y="1203.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="1214.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (2 samples, 0.12%)</title><rect x="592.0" y="1187.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.0" y="1198.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$6.genString (2 samples, 0.12%)</title><rect x="592.0" y="1171.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.0" y="1182.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$6.genString (2 samples, 0.12%)</title><rect x="592.0" y="1155.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.0" y="1166.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$6.genString (2 samples, 0.12%)</title><rect x="592.0" y="1139.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="1150.0"></text>
</g>
<g>
<title>akka/event/Logging$.simpleName (2 samples, 0.12%)</title><rect x="592.0" y="1123.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="592.0" y="1107.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="592.7" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="592.7" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.logSource (1 samples, 0.06%)</title><rect x="593.4" y="1219.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (25 samples, 1.47%)</title><rect x="594.1" y="1283.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.18%)</title><rect x="594.8" y="1267.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="594.8" y="1251.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.18%)</title><rect x="594.8" y="1235.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.18%)</title><rect x="594.8" y="1219.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="594.8" y="1203.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.18%)</title><rect x="594.8" y="1187.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.18%)</title><rect x="594.8" y="1171.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.18%)</title><rect x="594.8" y="1155.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="594.8" y="1139.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="594.8" y="1123.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="594.8" y="1107.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="594.8" y="1091.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="594.8" y="1075.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="594.8" y="1059.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="594.8" y="1043.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.18%)</title><rect x="594.8" y="1027.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="594.8" y="1011.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="594.8" y="995.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="595.5" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.06%)</title><rect x="595.5" y="963.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="598.5" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="596.2" y="963.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="599.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="596.2" y="947.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="599.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="596.2" y="931.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.2" y="942.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="596.2" y="915.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="599.2" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="596.2" y="899.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="599.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="596.2" y="883.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="599.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="596.2" y="867.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="599.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="596.2" y="851.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="599.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="596.2" y="835.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.2" y="846.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (17 samples, 1.00%)</title><rect x="596.9" y="1267.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.9" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (17 samples, 1.00%)</title><rect x="596.9" y="1251.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.9" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (17 samples, 1.00%)</title><rect x="596.9" y="1235.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.9" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (6 samples, 0.35%)</title><rect x="597.6" y="1219.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.6" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (6 samples, 0.35%)</title><rect x="597.6" y="1203.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.6" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (6 samples, 0.35%)</title><rect x="597.6" y="1187.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.6" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (6 samples, 0.35%)</title><rect x="597.6" y="1171.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="597.6" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/ArraySeq$ofRef.length (1 samples, 0.06%)</title><rect x="597.6" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.29%)</title><rect x="598.3" y="1155.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (5 samples, 0.29%)</title><rect x="598.3" y="1139.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Throwable.toString (2 samples, 0.12%)</title><rect x="598.3" y="1123.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="598.3" y="1107.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="598.3" y="1091.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="599.0" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.0" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="599.0" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.0" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="599.0" y="1043.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="602.0" y="1054.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.toString (3 samples, 0.18%)</title><rect x="599.7" y="1123.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.7" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.toString (2 samples, 0.12%)</title><rect x="600.3" y="1107.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="600.3" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="600.3" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="600.3" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.3" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="600.3" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.3" y="1054.0"></text>
</g>
<g>
<title>java/net/InetAddress.toString (1 samples, 0.06%)</title><rect x="601.0" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.0" y="1102.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getHostAddress (1 samples, 0.06%)</title><rect x="601.0" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.0" y="1086.0"></text>
</g>
<g>
<title>java/net/Inet4Address.numericToTextFormat (1 samples, 0.06%)</title><rect x="601.0" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.0" y="1070.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.12%)</title><rect x="601.7" y="1219.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (2 samples, 0.12%)</title><rect x="601.7" y="1203.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (2 samples, 0.12%)</title><rect x="601.7" y="1187.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.7" y="1198.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.12%)</title><rect x="601.7" y="1171.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="604.7" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.12%)</title><rect x="601.7" y="1155.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="604.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="601.7" y="1139.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.7" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="601.7" y="1123.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.7" y="1134.0"></text>
</g>
<g>
<title>sys_gettimeofday (1 samples, 0.06%)</title><rect x="602.4" y="1107.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.4" y="1118.0"></text>
</g>
<g>
<title>__getnstimeofday64 (1 samples, 0.06%)</title><rect x="602.4" y="1091.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.4" y="1102.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (7 samples, 0.41%)</title><rect x="603.1" y="1219.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.1" y="1230.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (7 samples, 0.41%)</title><rect x="603.1" y="1203.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.1" y="1214.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (7 samples, 0.41%)</title><rect x="603.1" y="1187.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.1" y="1198.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (7 samples, 0.41%)</title><rect x="603.1" y="1171.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (7 samples, 0.41%)</title><rect x="603.1" y="1155.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.1" y="1166.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/432430300.apply (7 samples, 0.41%)</title><rect x="603.1" y="1139.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="1150.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (7 samples, 0.41%)</title><rect x="603.1" y="1123.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.1" y="1134.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (7 samples, 0.41%)</title><rect x="603.1" y="1107.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.1" y="1118.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (7 samples, 0.41%)</title><rect x="603.1" y="1091.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.1" y="1102.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (7 samples, 0.41%)</title><rect x="603.1" y="1075.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (7 samples, 0.41%)</title><rect x="603.1" y="1059.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.1" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.41%)</title><rect x="603.1" y="1043.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.41%)</title><rect x="603.1" y="1027.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.1" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.41%)</title><rect x="603.1" y="1011.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.41%)</title><rect x="603.1" y="995.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.41%)</title><rect x="603.1" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.1" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.41%)</title><rect x="603.1" y="963.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.41%)</title><rect x="603.1" y="947.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.1" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.35%)</title><rect x="603.1" y="931.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.1" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.35%)</title><rect x="603.1" y="915.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.1" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.35%)</title><rect x="603.1" y="899.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.35%)</title><rect x="603.1" y="883.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.1" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.35%)</title><rect x="603.1" y="867.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.35%)</title><rect x="603.1" y="851.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.35%)</title><rect x="603.1" y="835.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.35%)</title><rect x="603.1" y="819.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.35%)</title><rect x="603.1" y="803.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.35%)</title><rect x="603.1" y="787.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.35%)</title><rect x="603.1" y="771.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.1" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="603.1" y="755.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="606.1" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.29%)</title><rect x="603.8" y="755.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="606.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="603.8" y="739.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="603.8" y="723.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.8" y="734.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.29%)</title><rect x="603.8" y="707.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.8" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.29%)</title><rect x="603.8" y="691.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="606.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="603.8" y="675.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="606.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="603.8" y="659.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="603.8" y="643.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.29%)</title><rect x="603.8" y="627.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.8" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.06%)</title><rect x="607.3" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.3" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.06%)</title><rect x="607.3" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.3" y="926.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.genericWrapArray (1 samples, 0.06%)</title><rect x="608.0" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.akka$stream$impl$io$TcpConnectionStage$TcpStreamLogic$$fail (1 samples, 0.06%)</title><rect x="608.7" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (3 samples, 0.18%)</title><rect x="609.4" y="1267.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.12%)</title><rect x="609.4" y="1251.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.4" y="1262.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.12%)</title><rect x="609.4" y="1235.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="612.4" y="1246.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;540784ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)9, 540784ul&gt;::access_barrier(oopDesc*, oopDesc*, unsigned long) (1 samples, 0.06%)</title><rect x="609.4" y="1219.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="612.4" y="1230.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="610.1" y="1219.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="613.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (1 samples, 0.06%)</title><rect x="610.8" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (1 samples, 0.06%)</title><rect x="610.8" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.initStackTraceElements (1 samples, 0.06%)</title><rect x="610.8" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.8" y="1230.0"></text>
</g>
<g>
<title>Java_java_lang_StackTraceElement_initStackTraceElements (1 samples, 0.06%)</title><rect x="610.8" y="1203.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="613.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11$$anon$12.onDownstreamFinish (1 samples, 0.06%)</title><rect x="611.5" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (1 samples, 0.06%)</title><rect x="611.5" y="1267.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (1 samples, 0.06%)</title><rect x="611.5" y="1251.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="611.5" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.06%)</title><rect x="611.5" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="611.5" y="1203.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="611.5" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$EagerTerminateOutput$.onDownstreamFinish (2 samples, 0.12%)</title><rect x="612.2" y="1283.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.12%)</title><rect x="612.2" y="1267.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.12%)</title><rect x="612.2" y="1251.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$EagerTerminateOutput$.onDownstreamFinish (2 samples, 0.12%)</title><rect x="612.2" y="1235.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (1 samples, 0.06%)</title><rect x="612.8" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (1 samples, 0.06%)</title><rect x="612.8" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (1 samples, 0.06%)</title><rect x="612.8" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="612.8" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="612.8" y="1155.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.06%)</title><rect x="612.8" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.18%)</title><rect x="613.5" y="1283.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$5.onDownstreamFinish (2 samples, 0.12%)</title><rect x="613.5" y="1267.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.12%)</title><rect x="613.5" y="1251.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.12%)</title><rect x="613.5" y="1235.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (2 samples, 0.12%)</title><rect x="613.5" y="1219.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.12%)</title><rect x="613.5" y="1203.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.12%)</title><rect x="613.5" y="1187.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.06%)</title><rect x="614.2" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.06%)</title><rect x="614.2" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.06%)</title><rect x="614.2" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$17.onDownstreamFinish (1 samples, 0.06%)</title><rect x="614.9" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (1 samples, 0.06%)</title><rect x="614.9" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.06%)</title><rect x="614.9" y="1235.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (13 samples, 0.77%)</title><rect x="615.6" y="1299.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$3.onPull (1 samples, 0.06%)</title><rect x="615.6" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPull (1 samples, 0.06%)</title><rect x="616.3" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.06%)</title><rect x="616.3" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="616.3" y="1251.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (1 samples, 0.06%)</title><rect x="617.0" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.06%)</title><rect x="617.0" y="1267.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="617.0" y="1251.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (3 samples, 0.18%)</title><rect x="617.7" y="1283.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.18%)</title><rect x="617.7" y="1267.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="617.7" y="1251.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.18%)</title><rect x="617.7" y="1235.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.18%)</title><rect x="617.7" y="1219.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.18%)</title><rect x="617.7" y="1203.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.18%)</title><rect x="617.7" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.18%)</title><rect x="617.7" y="1171.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.7" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.18%)</title><rect x="617.7" y="1155.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.7" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.18%)</title><rect x="617.7" y="1139.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="617.7" y="1123.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.18%)</title><rect x="617.7" y="1107.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.18%)</title><rect x="617.7" y="1091.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.18%)</title><rect x="617.7" y="1075.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.18%)</title><rect x="617.7" y="1059.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.18%)</title><rect x="617.7" y="1043.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.18%)</title><rect x="617.7" y="1027.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.18%)</title><rect x="617.7" y="1011.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.18%)</title><rect x="617.7" y="995.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.18%)</title><rect x="617.7" y="979.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.7" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.18%)</title><rect x="617.7" y="963.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="620.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="617.7" y="947.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.7" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="617.7" y="931.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.7" y="942.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.18%)</title><rect x="617.7" y="915.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.7" y="926.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.18%)</title><rect x="617.7" y="899.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.7" y="910.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.18%)</title><rect x="617.7" y="883.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.7" y="894.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.18%)</title><rect x="617.7" y="867.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="620.7" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.18%)</title><rect x="617.7" y="851.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="617.7" y="835.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.7" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (7 samples, 0.41%)</title><rect x="619.8" y="1283.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (7 samples, 0.41%)</title><rect x="619.8" y="1267.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.41%)</title><rect x="619.8" y="1251.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.41%)</title><rect x="619.8" y="1235.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.41%)</title><rect x="619.8" y="1219.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.41%)</title><rect x="619.8" y="1203.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.41%)</title><rect x="619.8" y="1187.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.41%)</title><rect x="619.8" y="1171.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.41%)</title><rect x="619.8" y="1155.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.41%)</title><rect x="619.8" y="1139.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.41%)</title><rect x="619.8" y="1123.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.41%)</title><rect x="619.8" y="1107.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.41%)</title><rect x="619.8" y="1091.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.41%)</title><rect x="619.8" y="1075.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.41%)</title><rect x="619.8" y="1059.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.41%)</title><rect x="619.8" y="1043.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.41%)</title><rect x="619.8" y="1027.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.41%)</title><rect x="619.8" y="1011.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.41%)</title><rect x="619.8" y="995.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.41%)</title><rect x="619.8" y="979.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.8" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="619.8" y="963.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="622.8" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.35%)</title><rect x="620.5" y="963.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="623.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="621.2" y="947.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="621.2" y="931.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="624.2" y="942.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.29%)</title><rect x="621.2" y="915.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.2" y="926.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.29%)</title><rect x="621.2" y="899.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="621.2" y="883.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="621.2" y="867.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="624.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="621.2" y="851.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.29%)</title><rect x="621.2" y="835.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="624.2" y="846.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="624.0" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.0" y="830.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="624.0" y="803.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="627.0" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="624.0" y="787.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="627.0" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="624.0" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="627.0" y="782.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="624.0" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="627.0" y="766.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="624.0" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="627.0" y="750.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="624.0" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="627.0" y="734.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="624.0" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.0" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="624.0" y="691.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="627.0" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="624.0" y="675.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="627.0" y="686.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="624.0" y="659.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="627.0" y="670.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="624.0" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.0" y="654.0"></text>
</g>
<g>
<title>ip_route_input_noref (1 samples, 0.06%)</title><rect x="624.0" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="627.0" y="638.0"></text>
</g>
<g>
<title>ip_route_input_rcu (1 samples, 0.06%)</title><rect x="624.0" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.0" y="622.0"></text>
</g>
<g>
<title>l3mdev_master_ifindex_rcu (1 samples, 0.06%)</title><rect x="624.0" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="627.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (132 samples, 7.77%)</title><rect x="624.7" y="1299.0" width="91.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.7" y="1310.0">akka/stream..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.onPush (1 samples, 0.06%)</title><rect x="624.7" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse$.apply (1 samples, 0.06%)</title><rect x="624.7" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="624.7" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.7" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="624.7" y="1235.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="627.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (12 samples, 0.71%)</title><rect x="625.4" y="1283.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (12 samples, 0.71%)</title><rect x="625.4" y="1267.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (12 samples, 0.71%)</title><rect x="625.4" y="1251.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (12 samples, 0.71%)</title><rect x="625.4" y="1235.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (12 samples, 0.71%)</title><rect x="625.4" y="1219.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (12 samples, 0.71%)</title><rect x="625.4" y="1203.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (12 samples, 0.71%)</title><rect x="625.4" y="1187.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (12 samples, 0.71%)</title><rect x="625.4" y="1171.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1385/875665360.apply (12 samples, 0.71%)</title><rect x="625.4" y="1155.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (12 samples, 0.71%)</title><rect x="625.4" y="1139.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1383/1342008485.apply (12 samples, 0.71%)</title><rect x="625.4" y="1123.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (12 samples, 0.71%)</title><rect x="625.4" y="1107.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (12 samples, 0.71%)</title><rect x="625.4" y="1091.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (12 samples, 0.71%)</title><rect x="625.4" y="1075.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (12 samples, 0.71%)</title><rect x="625.4" y="1059.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (12 samples, 0.71%)</title><rect x="625.4" y="1043.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (12 samples, 0.71%)</title><rect x="625.4" y="1027.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (12 samples, 0.71%)</title><rect x="625.4" y="1011.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (12 samples, 0.71%)</title><rect x="625.4" y="995.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (12 samples, 0.71%)</title><rect x="625.4" y="979.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (10 samples, 0.59%)</title><rect x="625.4" y="963.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (2 samples, 0.12%)</title><rect x="626.0" y="947.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.0" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (2 samples, 0.12%)</title><rect x="626.0" y="931.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.0" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="626.7" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (1 samples, 0.06%)</title><rect x="626.7" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.7" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="626.7" y="883.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.7" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (7 samples, 0.41%)</title><rect x="627.4" y="947.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (6 samples, 0.35%)</title><rect x="627.4" y="931.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.4" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (6 samples, 0.35%)</title><rect x="627.4" y="915.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.4" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (6 samples, 0.35%)</title><rect x="627.4" y="899.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.4" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (2 samples, 0.12%)</title><rect x="627.4" y="883.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.4" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.12%)</title><rect x="627.4" y="867.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.4" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.12%)</title><rect x="627.4" y="851.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.4" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.12%)</title><rect x="627.4" y="835.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.4" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1099/1792842852.apply (2 samples, 0.12%)</title><rect x="627.4" y="819.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.4" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (2 samples, 0.12%)</title><rect x="627.4" y="803.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.4" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (2 samples, 0.12%)</title><rect x="627.4" y="787.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.4" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (2 samples, 0.12%)</title><rect x="627.4" y="771.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.4" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (2 samples, 0.12%)</title><rect x="627.4" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.4" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (2 samples, 0.12%)</title><rect x="627.4" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.4" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (1 samples, 0.06%)</title><rect x="627.4" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.4" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (1 samples, 0.06%)</title><rect x="627.4" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.4" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (1 samples, 0.06%)</title><rect x="627.4" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.4" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/MediaTypes$.getForKey (1 samples, 0.06%)</title><rect x="627.4" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.4" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey$ (1 samples, 0.06%)</title><rect x="627.4" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.4" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey (1 samples, 0.06%)</title><rect x="627.4" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.4" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.06%)</title><rect x="627.4" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.4" y="638.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="627.4" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.4" y="622.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.06%)</title><rect x="627.4" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.4" y="606.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="627.4" y="579.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.4" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (1 samples, 0.06%)</title><rect x="628.1" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.1" y="734.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals$ (1 samples, 0.06%)</title><rect x="628.1" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.1" y="718.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals (1 samples, 0.06%)</title><rect x="628.1" y="691.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.1" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sameElements (1 samples, 0.06%)</title><rect x="628.1" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.1" y="686.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.sameElements$ (1 samples, 0.06%)</title><rect x="628.1" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.1" y="670.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.sameElements (1 samples, 0.06%)</title><rect x="628.1" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.1" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$LinearSeqOps$$super$sameElements (1 samples, 0.06%)</title><rect x="628.1" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.1" y="638.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sameElements$ (1 samples, 0.06%)</title><rect x="628.1" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.1" y="622.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sameElements (1 samples, 0.06%)</title><rect x="628.1" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.1" y="606.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.knownSize (1 samples, 0.06%)</title><rect x="628.1" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.1" y="590.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.knownSize$ (1 samples, 0.06%)</title><rect x="628.1" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.1" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.length (1 samples, 0.06%)</title><rect x="628.1" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.1" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (3 samples, 0.18%)</title><rect x="628.8" y="883.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.8" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.18%)</title><rect x="628.8" y="867.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.8" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.18%)</title><rect x="628.8" y="851.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.8" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.18%)</title><rect x="628.8" y="835.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$1399/1177896412.apply (3 samples, 0.18%)</title><rect x="628.8" y="819.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (3 samples, 0.18%)</title><rect x="628.8" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (3 samples, 0.18%)</title><rect x="628.8" y="787.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (3 samples, 0.18%)</title><rect x="628.8" y="771.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (3 samples, 0.18%)</title><rect x="628.8" y="755.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.8" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (2 samples, 0.12%)</title><rect x="628.8" y="739.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (2 samples, 0.12%)</title><rect x="628.8" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (2 samples, 0.12%)</title><rect x="628.8" y="707.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (2 samples, 0.12%)</title><rect x="628.8" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (2 samples, 0.12%)</title><rect x="628.8" y="675.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.8" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (2 samples, 0.12%)</title><rect x="628.8" y="659.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.8" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (1 samples, 0.06%)</title><rect x="628.8" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.8" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (1 samples, 0.06%)</title><rect x="628.8" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.8" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (1 samples, 0.06%)</title><rect x="628.8" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.8" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.month (1 samples, 0.06%)</title><rect x="628.8" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.8" y="606.0"></text>
</g>
<g>
<title>akka/parboiled2/ParserInput$StringBasedParserInput.charAt (1 samples, 0.06%)</title><rect x="628.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.8" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.day$minusname (1 samples, 0.06%)</title><rect x="629.5" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.5" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$ (1 samples, 0.06%)</title><rect x="629.5" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.5" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname (1 samples, 0.06%)</title><rect x="629.5" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.5" y="622.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__push (1 samples, 0.06%)</title><rect x="630.2" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.2" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (1 samples, 0.06%)</title><rect x="630.9" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.9" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="630.9" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.9" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="630.9" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.9" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="630.9" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$1398/1799495097.apply (1 samples, 0.06%)</title><rect x="630.9" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (1 samples, 0.06%)</title><rect x="630.9" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (1 samples, 0.06%)</title><rect x="630.9" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.9" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (1 samples, 0.06%)</title><rect x="630.9" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.9" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (1 samples, 0.06%)</title><rect x="630.9" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.9" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="631.6" y="931.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="634.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (2 samples, 0.12%)</title><rect x="632.3" y="963.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.emit (1 samples, 0.06%)</title><rect x="632.3" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.emit$ (1 samples, 0.06%)</title><rect x="632.3" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.emit (1 samples, 0.06%)</title><rect x="632.3" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.3" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMethod.equals (1 samples, 0.06%)</title><rect x="633.0" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="633.0" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.0" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (34 samples, 2.00%)</title><rect x="633.7" y="1283.0" width="23.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.7" y="1294.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (2 samples, 0.12%)</title><rect x="634.4" y="1267.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (2 samples, 0.12%)</title><rect x="634.4" y="1251.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (2 samples, 0.12%)</title><rect x="634.4" y="1235.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (2 samples, 0.12%)</title><rect x="634.4" y="1219.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (2 samples, 0.12%)</title><rect x="634.4" y="1203.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (2 samples, 0.12%)</title><rect x="634.4" y="1187.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (2 samples, 0.12%)</title><rect x="634.4" y="1171.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoPos$ (2 samples, 0.12%)</title><rect x="634.4" y="1155.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Connecting.isIdle (1 samples, 0.06%)</title><rect x="634.4" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.4" y="1150.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="635.1" y="1139.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="638.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (30 samples, 1.77%)</title><rect x="635.8" y="1267.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (29 samples, 1.71%)</title><rect x="635.8" y="1251.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (29 samples, 1.71%)</title><rect x="635.8" y="1235.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (29 samples, 1.71%)</title><rect x="635.8" y="1219.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (29 samples, 1.71%)</title><rect x="635.8" y="1203.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1298/137297923.apply (26 samples, 1.53%)</title><rect x="635.8" y="1187.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (26 samples, 1.53%)</title><rect x="635.8" y="1171.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (26 samples, 1.53%)</title><rect x="635.8" y="1155.0" width="18.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (26 samples, 1.53%)</title><rect x="635.8" y="1139.0" width="18.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (26 samples, 1.53%)</title><rect x="635.8" y="1123.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (26 samples, 1.53%)</title><rect x="635.8" y="1107.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (26 samples, 1.53%)</title><rect x="635.8" y="1091.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (21 samples, 1.24%)</title><rect x="635.8" y="1075.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (21 samples, 1.24%)</title><rect x="635.8" y="1059.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (21 samples, 1.24%)</title><rect x="635.8" y="1043.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.8" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (21 samples, 1.24%)</title><rect x="635.8" y="1027.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.8" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/Compose.apply (1 samples, 0.06%)</title><rect x="638.5" y="1011.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Keep$$$Lambda$433/253380088.apply (1 samples, 0.06%)</title><rect x="638.5" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (1 samples, 0.06%)</title><rect x="638.5" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (6 samples, 0.35%)</title><rect x="639.2" y="1011.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.2" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (5 samples, 0.29%)</title><rect x="639.9" y="995.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (4 samples, 0.24%)</title><rect x="640.6" y="979.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (1 samples, 0.06%)</title><rect x="640.6" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.6" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher.createLogic (1 samples, 0.06%)</title><rect x="641.3" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.3" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="641.3" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.3" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.06%)</title><rect x="641.3" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="641.3" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="641.3" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="910.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="641.3" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.3" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.06%)</title><rect x="641.3" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.3" y="878.0"></text>
</g>
<g>
<title>akka/stream/FlowShape.inlets (1 samples, 0.06%)</title><rect x="641.3" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.3" y="862.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map.createLogic (1 samples, 0.06%)</title><rect x="642.0" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.0" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="642.0" y="947.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.06%)</title><rect x="642.0" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="642.0" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="642.0" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="642.0" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.0" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.06%)</title><rect x="642.0" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.0" y="878.0"></text>
</g>
<g>
<title>akka/stream/FlowShape.inlets (1 samples, 0.06%)</title><rect x="642.0" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.0" y="862.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (1 samples, 0.06%)</title><rect x="642.7" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.&lt;init&gt; (1 samples, 0.06%)</title><rect x="642.7" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (4 samples, 0.24%)</title><rect x="643.4" y="1011.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.4" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.24%)</title><rect x="643.4" y="995.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.4" y="1006.0"></text>
</g>
<g>
<title>checkcast_arraycopy_uninit (2 samples, 0.12%)</title><rect x="644.1" y="979.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="647.1" y="990.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="644.8" y="963.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="647.8" y="974.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="644.8" y="947.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="647.8" y="958.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="644.8" y="931.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="647.8" y="942.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="644.8" y="915.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.8" y="926.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="644.8" y="899.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="647.8" y="910.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="644.8" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="647.8" y="894.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="644.8" y="867.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="647.8" y="878.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="644.8" y="851.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="647.8" y="862.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="645.5" y="979.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="648.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (2 samples, 0.12%)</title><rect x="646.2" y="1011.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.2" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (2 samples, 0.12%)</title><rect x="646.2" y="995.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.2" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.06%)</title><rect x="646.9" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.9" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.06%)</title><rect x="646.9" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.9" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (4 samples, 0.24%)</title><rect x="647.6" y="1011.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.6" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (1 samples, 0.06%)</title><rect x="648.3" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.3" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.06%)</title><rect x="648.3" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.3" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.06%)</title><rect x="648.3" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.3" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (1 samples, 0.06%)</title><rect x="648.3" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="649.0" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="649.0" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.06%)</title><rect x="649.0" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (1 samples, 0.06%)</title><rect x="649.0" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (1 samples, 0.06%)</title><rect x="649.7" y="995.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator$ (1 samples, 0.06%)</title><rect x="649.7" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator (1 samples, 0.06%)</title><rect x="649.7" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.7" y="974.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="649.7" y="947.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.7" y="958.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="649.7" y="931.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="652.7" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="649.7" y="915.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="652.7" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="649.7" y="899.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.7" y="910.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="649.7" y="883.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.7" y="894.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="649.7" y="867.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="652.7" y="878.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="649.7" y="851.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.7" y="862.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="649.7" y="835.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.7" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="649.7" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.7" y="830.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="649.7" y="803.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="652.7" y="814.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="649.7" y="787.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="652.7" y="798.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="649.7" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="652.7" y="782.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="649.7" y="755.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.7" y="766.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="649.7" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.7" y="750.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="649.7" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.7" y="734.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="649.7" y="707.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="652.7" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="649.7" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="652.7" y="702.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (1 samples, 0.06%)</title><rect x="650.4" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="650.4" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.4" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.initialAttributes (1 samples, 0.06%)</title><rect x="650.4" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (1 samples, 0.06%)</title><rect x="650.4" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.4" y="1038.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.06%)</title><rect x="650.4" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.4" y="1022.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.06%)</title><rect x="650.4" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="650.4" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.4" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="650.4" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (4 samples, 0.24%)</title><rect x="651.0" y="1075.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (4 samples, 0.24%)</title><rect x="651.0" y="1059.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.12%)</title><rect x="651.0" y="1043.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="651.7" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.7" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="651.7" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.7" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="651.7" y="995.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="654.7" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.12%)</title><rect x="652.4" y="1043.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="653.1" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.06%)</title><rect x="653.1" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.1" y="1022.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="653.1" y="995.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="656.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (1 samples, 0.06%)</title><rect x="653.8" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.log (1 samples, 0.06%)</title><rect x="653.8" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log$ (1 samples, 0.06%)</title><rect x="653.8" y="1155.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log (1 samples, 0.06%)</title><rect x="653.8" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$util$StageLoggingWithOverride$$_log_$eq (1 samples, 0.06%)</title><rect x="653.8" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$ConnectedState.isConnected (1 samples, 0.06%)</title><rect x="653.8" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.pushRequest (1 samples, 0.06%)</title><rect x="654.5" y="1187.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.emitRequest (1 samples, 0.06%)</title><rect x="654.5" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.push (1 samples, 0.06%)</title><rect x="654.5" y="1155.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.pushSubstream (1 samples, 0.06%)</title><rect x="654.5" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="655.2" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="655.2" y="1171.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (1 samples, 0.06%)</title><rect x="655.9" y="1251.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (1 samples, 0.06%)</title><rect x="655.9" y="1235.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.9" y="1246.0"></text>
</g>
<g>
<title>akka/util/ByteString.size (1 samples, 0.06%)</title><rect x="655.9" y="1219.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="655.9" y="1203.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="655.9" y="1187.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.9" y="1198.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="655.9" y="1171.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="658.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (1 samples, 0.06%)</title><rect x="656.6" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.06%)</title><rect x="656.6" y="1251.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (1 samples, 0.06%)</title><rect x="656.6" y="1235.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (1 samples, 0.06%)</title><rect x="656.6" y="1219.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.next (1 samples, 0.06%)</title><rect x="656.6" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.advanceToNextBlockIfNecessary (1 samples, 0.06%)</title><rect x="656.6" y="1187.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (6 samples, 0.35%)</title><rect x="657.3" y="1283.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (6 samples, 0.35%)</title><rect x="657.3" y="1267.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (6 samples, 0.35%)</title><rect x="657.3" y="1251.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (6 samples, 0.35%)</title><rect x="657.3" y="1235.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (6 samples, 0.35%)</title><rect x="657.3" y="1219.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (6 samples, 0.35%)</title><rect x="657.3" y="1203.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (6 samples, 0.35%)</title><rect x="657.3" y="1187.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (6 samples, 0.35%)</title><rect x="657.3" y="1171.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$916/980296428.apply (2 samples, 0.12%)</title><rect x="657.3" y="1155.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (2 samples, 0.12%)</title><rect x="657.3" y="1139.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (2 samples, 0.12%)</title><rect x="657.3" y="1123.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (2 samples, 0.12%)</title><rect x="657.3" y="1107.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (2 samples, 0.12%)</title><rect x="657.3" y="1091.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (2 samples, 0.12%)</title><rect x="657.3" y="1075.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (2 samples, 0.12%)</title><rect x="657.3" y="1059.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (2 samples, 0.12%)</title><rect x="657.3" y="1043.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (2 samples, 0.12%)</title><rect x="657.3" y="1027.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (2 samples, 0.12%)</title><rect x="657.3" y="1011.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (2 samples, 0.12%)</title><rect x="657.3" y="995.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="657.3" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.3" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$445/1400671358.apply (1 samples, 0.06%)</title><rect x="657.3" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="657.3" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (1 samples, 0.06%)</title><rect x="657.3" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.3" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="657.3" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.3" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="657.3" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.3" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="657.3" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1099/1792842852.apply (1 samples, 0.06%)</title><rect x="657.3" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (1 samples, 0.06%)</title><rect x="657.3" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (1 samples, 0.06%)</title><rect x="657.3" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.3" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (1 samples, 0.06%)</title><rect x="657.3" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (1 samples, 0.06%)</title><rect x="657.3" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.3" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (1 samples, 0.06%)</title><rect x="657.3" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.3" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (1 samples, 0.06%)</title><rect x="657.3" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (1 samples, 0.06%)</title><rect x="657.3" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.3" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (1 samples, 0.06%)</title><rect x="657.3" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.3" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/MediaTypes$.getForKey (1 samples, 0.06%)</title><rect x="657.3" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.3" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey$ (1 samples, 0.06%)</title><rect x="657.3" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.3" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey (1 samples, 0.06%)</title><rect x="657.3" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.06%)</title><rect x="657.3" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.3" y="686.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="657.3" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.3" y="670.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.06%)</title><rect x="657.3" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.3" y="654.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="657.3" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.3" y="638.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="657.3" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.3" y="622.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="657.3" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="657.3" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="657.3" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.3" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (1 samples, 0.06%)</title><rect x="658.0" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.newNodeIndex (1 samples, 0.06%)</title><rect x="658.0" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.0" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="658.0" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.0" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$933/1975007127.apply (4 samples, 0.24%)</title><rect x="658.7" y="1155.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (4 samples, 0.24%)</title><rect x="658.7" y="1139.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$932/1168681258.apply (4 samples, 0.24%)</title><rect x="658.7" y="1123.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (4 samples, 0.24%)</title><rect x="658.7" y="1107.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (4 samples, 0.24%)</title><rect x="658.7" y="1091.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (4 samples, 0.24%)</title><rect x="658.7" y="1075.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (4 samples, 0.24%)</title><rect x="658.7" y="1059.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (4 samples, 0.24%)</title><rect x="658.7" y="1043.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (4 samples, 0.24%)</title><rect x="658.7" y="1027.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (3 samples, 0.18%)</title><rect x="658.7" y="1011.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (3 samples, 0.18%)</title><rect x="658.7" y="995.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (3 samples, 0.18%)</title><rect x="658.7" y="979.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.7" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.06%)</title><rect x="658.7" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (1 samples, 0.06%)</title><rect x="658.7" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (1 samples, 0.06%)</title><rect x="658.7" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.7" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (2 samples, 0.12%)</title><rect x="659.4" y="963.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.emitRequestStart$1 (1 samples, 0.06%)</title><rect x="659.4" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/ws/Handshake$Server$.websocketUpgrade (1 samples, 0.06%)</title><rect x="659.4" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.4" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/ws/Handshake$Server$.hasAllRequiredWebsocketUpgradeHeaders$1 (1 samples, 0.06%)</title><rect x="659.4" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.4" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.strictEntity (1 samples, 0.06%)</title><rect x="660.1" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity$ (1 samples, 0.06%)</title><rect x="660.1" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.1" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity (1 samples, 0.06%)</title><rect x="660.1" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.1" y="926.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.slice (1 samples, 0.06%)</title><rect x="660.1" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.1" y="910.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.slice (1 samples, 0.06%)</title><rect x="660.1" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.1" y="894.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.drop (1 samples, 0.06%)</title><rect x="660.1" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.1" y="878.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.drop1 (1 samples, 0.06%)</title><rect x="660.1" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.1" y="862.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1$.apply (1 samples, 0.06%)</title><rect x="660.1" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.1" y="846.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="660.1" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.1" y="830.0"></text>
</g>
<g>
<title>akka/util/ByteString.&lt;init&gt; (1 samples, 0.06%)</title><rect x="660.1" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.1" y="814.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSeqOps.$init$ (1 samples, 0.06%)</title><rect x="660.1" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (1 samples, 0.06%)</title><rect x="660.8" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (1 samples, 0.06%)</title><rect x="660.8" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (1 samples, 0.06%)</title><rect x="660.8" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.8" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="660.8" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.8" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="660.8" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.8" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="660.8" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$930/1291396539.apply (1 samples, 0.06%)</title><rect x="660.8" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (1 samples, 0.06%)</title><rect x="660.8" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (1 samples, 0.06%)</title><rect x="660.8" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.8" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (1 samples, 0.06%)</title><rect x="660.8" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$26 (1 samples, 0.06%)</title><rect x="660.8" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.8" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.segment (1 samples, 0.06%)</title><rect x="660.8" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$12 (1 samples, 0.06%)</title><rect x="660.8" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.pchar (1 samples, 0.06%)</title><rect x="660.8" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (1 samples, 0.06%)</title><rect x="660.8" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (1 samples, 0.06%)</title><rect x="660.8" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (1 samples, 0.06%)</title><rect x="660.8" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="660.8" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.8" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="660.8" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.8" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="660.8" y="707.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="663.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (2 samples, 0.12%)</title><rect x="661.5" y="1283.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (2 samples, 0.12%)</title><rect x="661.5" y="1267.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (1 samples, 0.06%)</title><rect x="661.5" y="1251.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (1 samples, 0.06%)</title><rect x="661.5" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.akka$http$impl$engine$rendering$HttpResponseRendererFactory$$dateHeader (1 samples, 0.06%)</title><rect x="661.5" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="661.5" y="1203.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.06%)</title><rect x="661.5" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="661.5" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="661.5" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="661.5" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledCompanion.render (1 samples, 0.06%)</title><rect x="661.5" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderStatusLine$1 (1 samples, 0.06%)</title><rect x="662.2" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.onPush (1 samples, 0.06%)</title><rect x="662.9" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Queue.enqueue (1 samples, 0.06%)</title><rect x="662.9" y="1267.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (1 samples, 0.06%)</title><rect x="663.5" y="1283.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.emit (1 samples, 0.06%)</title><rect x="663.5" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$Lambda$914/854936378.apply$mcV$sp (1 samples, 0.06%)</title><rect x="663.5" y="1251.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9.$anonfun$pullHttpResponseIn$1 (1 samples, 0.06%)</title><rect x="663.5" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$16.onPush (2 samples, 0.12%)</title><rect x="664.2" y="1283.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage.akka$http$impl$engine$server$HttpServerBluePrint$ProtocolSwitchStage$$fromHttp (1 samples, 0.06%)</title><rect x="664.9" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$4.onPush (2 samples, 0.12%)</title><rect x="665.6" y="1283.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="666.3" y="1267.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (1 samples, 0.06%)</title><rect x="666.3" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.06%)</title><rect x="666.3" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1 samples, 0.06%)</title><rect x="666.3" y="1219.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$939/640950460.apply (1 samples, 0.06%)</title><rect x="666.3" y="1203.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="666.3" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$938/1939349468.apply (1 samples, 0.06%)</title><rect x="666.3" y="1171.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$new$1 (1 samples, 0.06%)</title><rect x="666.3" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.schedule (1 samples, 0.06%)</title><rect x="666.3" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleOnce (1 samples, 0.06%)</title><rect x="666.3" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.06%)</title><rect x="666.3" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.06%)</title><rect x="666.3" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$4.onPush (1 samples, 0.06%)</title><rect x="667.0" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi.out (1 samples, 0.06%)</title><rect x="667.0" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onPush (1 samples, 0.06%)</title><rect x="667.7" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.06%)</title><rect x="667.7" y="1267.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="667.7" y="1251.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (1 samples, 0.06%)</title><rect x="668.4" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SupervisedGraphStageLogic.withSupervision (1 samples, 0.06%)</title><rect x="668.4" y="1267.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6$$Lambda$920/544334017.apply (1 samples, 0.06%)</title><rect x="668.4" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.$anonfun$wrappedPf$1 (1 samples, 0.06%)</title><rect x="668.4" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (1 samples, 0.06%)</title><rect x="669.1" y="1283.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$$$Lambda$489/1858779250.apply (1 samples, 0.06%)</title><rect x="669.1" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.$anonfun$parsing$1 (1 samples, 0.06%)</title><rect x="669.1" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.establishAbsoluteUri$1 (1 samples, 0.06%)</title><rect x="669.1" y="1235.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.effectiveUri (1 samples, 0.06%)</title><rect x="669.1" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.findHostAndWsUpgrade$1 (1 samples, 0.06%)</title><rect x="669.1" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.1" y="1214.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="669.1" y="1187.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.1" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="669.1" y="1171.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.1" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="669.1" y="1155.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="672.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (67 samples, 3.94%)</title><rect x="669.8" y="1283.0" width="46.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.8" y="1294.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$436/1791014677.apply (67 samples, 3.94%)</title><rect x="669.8" y="1267.0" width="46.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.8" y="1278.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (67 samples, 3.94%)</title><rect x="669.8" y="1251.0" width="46.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.8" y="1262.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (67 samples, 3.94%)</title><rect x="669.8" y="1235.0" width="46.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.8" y="1246.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (67 samples, 3.94%)</title><rect x="669.8" y="1219.0" width="46.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.8" y="1230.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$950/1088735716.apply (66 samples, 3.88%)</title><rect x="669.8" y="1203.0" width="45.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.8" y="1214.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (66 samples, 3.88%)</title><rect x="669.8" y="1187.0" width="45.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.8" y="1198.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (66 samples, 3.88%)</title><rect x="669.8" y="1171.0" width="45.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.8" y="1182.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (66 samples, 3.88%)</title><rect x="669.8" y="1155.0" width="45.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.8" y="1166.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$960/162786203.apply (66 samples, 3.88%)</title><rect x="669.8" y="1139.0" width="45.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.8" y="1150.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (66 samples, 3.88%)</title><rect x="669.8" y="1123.0" width="45.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.8" y="1134.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$273/1685134322.apply (3 samples, 0.18%)</title><rect x="669.8" y="1107.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (3 samples, 0.18%)</title><rect x="669.8" y="1091.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (3 samples, 0.18%)</title><rect x="669.8" y="1075.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (3 samples, 0.18%)</title><rect x="669.8" y="1059.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (3 samples, 0.18%)</title><rect x="669.8" y="1043.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$962/1513591217.apply (3 samples, 0.18%)</title><rect x="669.8" y="1027.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.8" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (3 samples, 0.18%)</title><rect x="669.8" y="1011.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (2 samples, 0.12%)</title><rect x="669.8" y="995.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (2 samples, 0.12%)</title><rect x="669.8" y="979.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$985/1148896344.apply (2 samples, 0.12%)</title><rect x="669.8" y="963.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.8" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (2 samples, 0.12%)</title><rect x="669.8" y="947.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (2 samples, 0.12%)</title><rect x="669.8" y="931.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (2 samples, 0.12%)</title><rect x="669.8" y="915.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$987/304456087.apply (2 samples, 0.12%)</title><rect x="669.8" y="899.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (2 samples, 0.12%)</title><rect x="669.8" y="883.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1059/1339429821.apply (2 samples, 0.12%)</title><rect x="669.8" y="867.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (2 samples, 0.12%)</title><rect x="669.8" y="851.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.8" y="862.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinationServer$$Lambda$1056/1198945055.apply (2 samples, 0.12%)</title><rect x="669.8" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.8" y="846.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinationServer.$anonfun$route$6 (2 samples, 0.12%)</title><rect x="669.8" y="819.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.8" y="830.0"></text>
</g>
<g>
<title>akka/pattern/AskableActorRef$.$qmark$extension (2 samples, 0.12%)</title><rect x="669.8" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.8" y="814.0"></text>
</g>
<g>
<title>akka/pattern/AskableActorRef$.internalAsk$extension (2 samples, 0.12%)</title><rect x="669.8" y="787.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.8" y="798.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.12%)</title><rect x="669.8" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.8" y="782.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.12%)</title><rect x="669.8" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.8" y="766.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="669.8" y="739.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.8" y="750.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.12%)</title><rect x="669.8" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.8" y="734.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.12%)</title><rect x="669.8" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.8" y="718.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="669.8" y="691.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.8" y="702.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.12%)</title><rect x="669.8" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.8" y="686.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.12%)</title><rect x="669.8" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.8" y="670.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.12%)</title><rect x="669.8" y="643.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.8" y="654.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.12%)</title><rect x="669.8" y="627.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.8" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="669.8" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.8" y="622.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.12%)</title><rect x="669.8" y="595.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.8" y="606.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="669.8" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.8" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.12%)</title><rect x="669.8" y="563.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="669.8" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="669.8" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.12%)</title><rect x="669.8" y="515.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="669.8" y="499.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="669.8" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="669.8" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.8" y="478.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="669.8" y="451.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="672.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="669.8" y="435.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="669.8" y="419.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.8" y="430.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="669.8" y="403.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.8" y="414.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="669.8" y="387.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.8" y="398.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="669.8" y="371.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="672.8" y="382.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="669.8" y="355.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.8" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="669.8" y="339.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.8" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="669.8" y="323.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.8" y="334.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (1 samples, 0.06%)</title><rect x="671.2" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.06%)</title><rect x="671.2" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1063/7169518.get$Lambda (1 samples, 0.06%)</title><rect x="671.2" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.2" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (63 samples, 3.71%)</title><rect x="671.9" y="1107.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.9" y="1118.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (63 samples, 3.71%)</title><rect x="671.9" y="1091.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.9" y="1102.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$944/124274057.apply (1 samples, 0.06%)</title><rect x="671.9" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$985/1148896344.apply (62 samples, 3.65%)</title><rect x="672.6" y="1075.0" width="43.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.6" y="1086.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (62 samples, 3.65%)</title><rect x="672.6" y="1059.0" width="43.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.6" y="1070.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (62 samples, 3.65%)</title><rect x="672.6" y="1043.0" width="43.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.6" y="1054.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (62 samples, 3.65%)</title><rect x="672.6" y="1027.0" width="43.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.6" y="1038.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$268/1604342290.apply (1 samples, 0.06%)</title><rect x="672.6" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (1 samples, 0.06%)</title><rect x="672.6" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (1 samples, 0.06%)</title><rect x="672.6" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.6" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="672.6" y="963.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="675.6" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$987/304456087.apply (61 samples, 3.59%)</title><rect x="673.3" y="1011.0" width="42.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.3" y="1022.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (61 samples, 3.59%)</title><rect x="673.3" y="995.0" width="42.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.3" y="1006.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$985/1148896344.apply (61 samples, 3.59%)</title><rect x="673.3" y="979.0" width="42.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.3" y="990.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (61 samples, 3.59%)</title><rect x="673.3" y="963.0" width="42.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.3" y="974.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$269/65438140.apply (59 samples, 3.47%)</title><rect x="673.3" y="947.0" width="40.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.3" y="958.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (59 samples, 3.47%)</title><rect x="673.3" y="931.0" width="40.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.3" y="942.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1059/1339429821.apply (59 samples, 3.47%)</title><rect x="673.3" y="915.0" width="40.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.3" y="926.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (59 samples, 3.47%)</title><rect x="673.3" y="899.0" width="40.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.3" y="910.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1155/1468802158.apply (56 samples, 3.30%)</title><rect x="673.3" y="883.0" width="38.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.3" y="894.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (56 samples, 3.30%)</title><rect x="673.3" y="867.0" width="38.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.3" y="878.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (56 samples, 3.30%)</title><rect x="673.3" y="851.0" width="38.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.3" y="862.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1161/576511337.apply (56 samples, 3.30%)</title><rect x="673.3" y="835.0" width="38.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.3" y="846.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (56 samples, 3.30%)</title><rect x="673.3" y="819.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.3" y="830.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (56 samples, 3.30%)</title><rect x="673.3" y="803.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.3" y="814.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1165/1273229827.apply (55 samples, 3.24%)</title><rect x="674.0" y="787.0" width="38.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.0" y="798.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (55 samples, 3.24%)</title><rect x="674.0" y="771.0" width="38.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.0" y="782.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (55 samples, 3.24%)</title><rect x="674.0" y="755.0" width="38.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.0" y="766.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1165/1273229827.apply (55 samples, 3.24%)</title><rect x="674.0" y="739.0" width="38.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.0" y="750.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (55 samples, 3.24%)</title><rect x="674.0" y="723.0" width="38.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.0" y="734.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (55 samples, 3.24%)</title><rect x="674.0" y="707.0" width="38.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.0" y="718.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1173/1961343286.apply (54 samples, 3.18%)</title><rect x="674.0" y="691.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.0" y="702.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (54 samples, 3.18%)</title><rect x="674.0" y="675.0" width="37.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.0" y="686.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (54 samples, 3.18%)</title><rect x="674.0" y="659.0" width="37.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.0" y="670.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (13 samples, 0.77%)</title><rect x="674.0" y="643.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.0" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (2 samples, 0.12%)</title><rect x="674.0" y="627.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.0" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (2 samples, 0.12%)</title><rect x="674.0" y="611.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.0" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (2 samples, 0.12%)</title><rect x="674.0" y="595.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.12%)</title><rect x="674.0" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.0" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.12%)</title><rect x="674.0" y="563.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (2 samples, 0.12%)</title><rect x="674.0" y="547.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.0" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="674.0" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.0" y="542.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="674.7" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (1 samples, 0.06%)</title><rect x="675.4" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="675.4" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.4" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="675.4" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="675.4" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.4" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="675.4" y="563.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="678.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (6 samples, 0.35%)</title><rect x="676.1" y="627.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.1" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (5 samples, 0.29%)</title><rect x="676.1" y="611.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.1" y="622.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.24%)</title><rect x="676.1" y="595.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.1" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (4 samples, 0.24%)</title><rect x="676.1" y="579.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.1" y="590.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (3 samples, 0.18%)</title><rect x="676.1" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.1" y="574.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (3 samples, 0.18%)</title><rect x="676.1" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.1" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (3 samples, 0.18%)</title><rect x="676.1" y="531.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.1" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (3 samples, 0.18%)</title><rect x="676.1" y="515.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.1" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (3 samples, 0.18%)</title><rect x="676.1" y="499.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.1" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (3 samples, 0.18%)</title><rect x="676.1" y="483.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.1" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (3 samples, 0.18%)</title><rect x="676.1" y="467.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.1" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (1 samples, 0.06%)</title><rect x="676.1" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.1" y="462.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator$ (1 samples, 0.06%)</title><rect x="676.1" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.1" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (1 samples, 0.06%)</title><rect x="676.1" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.12%)</title><rect x="676.7" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.12%)</title><rect x="676.7" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.7" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.12%)</title><rect x="676.7" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.7" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.size (1 samples, 0.06%)</title><rect x="676.7" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.7" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.updated (1 samples, 0.06%)</title><rect x="677.4" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.4" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.updated (1 samples, 0.06%)</title><rect x="677.4" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.4" y="398.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="678.1" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.1" y="574.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="678.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.1" y="558.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="678.1" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.1" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.06%)</title><rect x="678.1" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.1" y="526.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.withAttributes (1 samples, 0.06%)</title><rect x="678.8" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.8" y="606.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="678.8" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.8" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.withAttributes (1 samples, 0.06%)</title><rect x="679.5" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.5" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (1 samples, 0.06%)</title><rect x="679.5" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.5" y="606.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.06%)</title><rect x="679.5" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.5" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.06%)</title><rect x="679.5" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.5" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$Lambda$430/885991756.apply (1 samples, 0.06%)</title><rect x="679.5" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.$anonfun$isAsync$1$adapted (1 samples, 0.06%)</title><rect x="679.5" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.5" y="542.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (4 samples, 0.24%)</title><rect x="680.2" y="627.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.2" y="638.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (3 samples, 0.18%)</title><rect x="680.2" y="611.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.2" y="622.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (3 samples, 0.18%)</title><rect x="680.2" y="595.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.2" y="606.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.06%)</title><rect x="680.2" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.2" y="590.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.forName (2 samples, 0.12%)</title><rect x="680.9" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.9" y="590.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup (2 samples, 0.12%)</title><rect x="680.9" y="563.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.addAttributes (1 samples, 0.06%)</title><rect x="682.3" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.3" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.withAttributes (1 samples, 0.06%)</title><rect x="682.3" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.3" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (1 samples, 0.06%)</title><rect x="682.3" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.3" y="590.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.06%)</title><rect x="682.3" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.06%)</title><rect x="682.3" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.3" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$Lambda$430/885991756.apply (1 samples, 0.06%)</title><rect x="682.3" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.3" y="542.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (41 samples, 2.41%)</title><rect x="683.0" y="643.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.0" y="654.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (41 samples, 2.41%)</title><rect x="683.0" y="627.0" width="28.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.0" y="638.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (41 samples, 2.41%)</title><rect x="683.0" y="611.0" width="28.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.0" y="622.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (41 samples, 2.41%)</title><rect x="683.0" y="595.0" width="28.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.0" y="606.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (41 samples, 2.41%)</title><rect x="683.0" y="579.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.0" y="590.0">ak..</text>
</g>
<g>
<title>akka/stream/Attributes.and (2 samples, 0.12%)</title><rect x="684.4" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (2 samples, 0.12%)</title><rect x="684.4" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.4" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (2 samples, 0.12%)</title><rect x="684.4" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (2 samples, 0.12%)</title><rect x="684.4" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (6 samples, 0.35%)</title><rect x="685.8" y="563.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.8" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes.nameOrDefault (1 samples, 0.06%)</title><rect x="686.5" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$2 (1 samples, 0.06%)</title><rect x="686.5" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.5" y="542.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (4 samples, 0.24%)</title><rect x="687.2" y="547.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.2" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="687.9" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.9" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.&lt;init&gt; (1 samples, 0.06%)</title><rect x="687.9" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.9" y="526.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.06%)</title><rect x="687.9" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.9" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="687.9" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="687.9" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.9" y="478.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="687.9" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.06%)</title><rect x="687.9" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.9" y="446.0"></text>
</g>
<g>
<title>akka/stream/SinkShape.inlets (1 samples, 0.06%)</title><rect x="687.9" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.9" y="430.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (2 samples, 0.12%)</title><rect x="688.6" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.6" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (1 samples, 0.06%)</title><rect x="688.6" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.&lt;init&gt; (1 samples, 0.06%)</title><rect x="688.6" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.6" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource.createLogic (1 samples, 0.06%)</title><rect x="689.2" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.2" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.&lt;init&gt; (1 samples, 0.06%)</title><rect x="689.2" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.2" y="510.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.06%)</title><rect x="689.2" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.2" y="494.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="689.2" y="467.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="692.2" y="478.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (24 samples, 1.41%)</title><rect x="689.9" y="563.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.9" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (17 samples, 1.00%)</title><rect x="689.9" y="547.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.9" y="558.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (17 samples, 1.00%)</title><rect x="689.9" y="531.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.9" y="542.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (17 samples, 1.00%)</title><rect x="689.9" y="515.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.9" y="526.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (17 samples, 1.00%)</title><rect x="689.9" y="499.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.9" y="510.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (17 samples, 1.00%)</title><rect x="689.9" y="483.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.9" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (2 samples, 0.12%)</title><rect x="689.9" y="467.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.9" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (2 samples, 0.12%)</title><rect x="689.9" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.9" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (2 samples, 0.12%)</title><rect x="689.9" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.9" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (2 samples, 0.12%)</title><rect x="689.9" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.9" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.12%)</title><rect x="689.9" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.9" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.12%)</title><rect x="689.9" y="387.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.9" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="689.9" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="689.9" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.9" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="689.9" y="339.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.9" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="689.9" y="323.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.9" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.12%)</title><rect x="689.9" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="195.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="689.9" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.9" y="174.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.06%)</title><rect x="690.6" y="291.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.6" y="302.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.06%)</title><rect x="690.6" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.6" y="286.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (1 samples, 0.06%)</title><rect x="690.6" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.6" y="270.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (1 samples, 0.06%)</title><rect x="690.6" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.06%)</title><rect x="690.6" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.6" y="238.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (15 samples, 0.88%)</title><rect x="691.3" y="467.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.3" y="478.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.elements (1 samples, 0.06%)</title><rect x="691.3" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.3" y="462.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$1 (1 samples, 0.06%)</title><rect x="691.3" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.3" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (14 samples, 0.82%)</title><rect x="692.0" y="451.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.0" y="462.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (14 samples, 0.82%)</title><rect x="692.0" y="435.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.0" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (14 samples, 0.82%)</title><rect x="692.0" y="419.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.0" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (14 samples, 0.82%)</title><rect x="692.0" y="403.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.0" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (14 samples, 0.82%)</title><rect x="692.0" y="387.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.0" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (14 samples, 0.82%)</title><rect x="692.0" y="371.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.0" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (14 samples, 0.82%)</title><rect x="692.0" y="355.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.0" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (14 samples, 0.82%)</title><rect x="692.0" y="339.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.0" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (14 samples, 0.82%)</title><rect x="692.0" y="323.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.0" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (14 samples, 0.82%)</title><rect x="692.0" y="307.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.0" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (14 samples, 0.82%)</title><rect x="692.0" y="291.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.0" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (14 samples, 0.82%)</title><rect x="692.0" y="275.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (14 samples, 0.82%)</title><rect x="692.0" y="259.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (14 samples, 0.82%)</title><rect x="692.0" y="243.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.77%)</title><rect x="692.7" y="227.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.77%)</title><rect x="692.7" y="211.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.77%)</title><rect x="692.7" y="195.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.71%)</title><rect x="693.4" y="179.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.4" y="190.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.71%)</title><rect x="693.4" y="163.0" width="8.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="696.4" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.65%)</title><rect x="694.1" y="147.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.1" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.65%)</title><rect x="694.1" y="131.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.1" y="142.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.65%)</title><rect x="694.1" y="115.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.1" y="126.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.65%)</title><rect x="694.1" y="99.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.1" y="110.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.65%)</title><rect x="694.1" y="83.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.1" y="94.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="694.1" y="67.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.1" y="78.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.59%)</title><rect x="694.8" y="67.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.8" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.59%)</title><rect x="694.8" y="51.0" width="6.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.59%)</title><rect x="694.8" y="35.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="697.8" y="46.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (5 samples, 0.29%)</title><rect x="701.7" y="547.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.7" y="558.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (2 samples, 0.12%)</title><rect x="701.7" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.7" y="542.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (2 samples, 0.12%)</title><rect x="701.7" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.7" y="526.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (2 samples, 0.12%)</title><rect x="701.7" y="499.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.7" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (2 samples, 0.12%)</title><rect x="701.7" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (2 samples, 0.12%)</title><rect x="701.7" y="467.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.7" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (2 samples, 0.12%)</title><rect x="701.7" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.12%)</title><rect x="701.7" y="435.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.7" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (2 samples, 0.12%)</title><rect x="701.7" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.7" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.06%)</title><rect x="702.4" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.4" y="414.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$ArrayIterator.next (1 samples, 0.06%)</title><rect x="702.4" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.4" y="398.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (3 samples, 0.18%)</title><rect x="703.1" y="531.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.1" y="542.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (3 samples, 0.18%)</title><rect x="703.1" y="515.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.1" y="526.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (2 samples, 0.12%)</title><rect x="703.8" y="499.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.8" y="510.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (2 samples, 0.12%)</title><rect x="703.8" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.8" y="494.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (2 samples, 0.12%)</title><rect x="703.8" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.8" y="478.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (2 samples, 0.12%)</title><rect x="703.8" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.8" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.12%)</title><rect x="703.8" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.8" y="446.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.12%)</title><rect x="703.8" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.8" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.12%)</title><rect x="703.8" y="403.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.8" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$EmptyMap.keySet (1 samples, 0.06%)</title><rect x="703.8" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$EmptySet.iterator (1 samples, 0.06%)</title><rect x="704.5" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.06%)</title><rect x="705.2" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.2" y="558.0"></text>
</g>
<g>
<title>checkcast_arraycopy_uninit (1 samples, 0.06%)</title><rect x="705.2" y="531.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="708.2" y="542.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$.apply (1 samples, 0.06%)</title><rect x="705.9" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.9" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (4 samples, 0.24%)</title><rect x="706.6" y="563.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (1 samples, 0.06%)</title><rect x="706.6" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (3 samples, 0.18%)</title><rect x="707.3" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.3" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (3 samples, 0.18%)</title><rect x="707.3" y="531.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.3" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (3 samples, 0.18%)</title><rect x="707.3" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.3" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (1 samples, 0.06%)</title><rect x="708.7" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.7" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (1 samples, 0.06%)</title><rect x="709.4" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$$$Lambda$1178/1012857012.apply (1 samples, 0.06%)</title><rect x="709.4" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.$anonfun$head$1 (1 samples, 0.06%)</title><rect x="709.4" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.4" y="542.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.map (1 samples, 0.06%)</title><rect x="709.4" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.4" y="526.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (1 samples, 0.06%)</title><rect x="709.4" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="710.1" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="710.8" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="710.8" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.8" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="711.5" y="691.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="714.5" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (3 samples, 0.18%)</title><rect x="712.2" y="883.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.2" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.06%)</title><rect x="713.6" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.6" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1 samples, 0.06%)</title><rect x="713.6" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.6" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1061/2141953227.apply (1 samples, 0.06%)</title><rect x="713.6" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.6" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (1 samples, 0.06%)</title><rect x="713.6" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.6" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1060/658627847.apply (1 samples, 0.06%)</title><rect x="713.6" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.6" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (1 samples, 0.06%)</title><rect x="713.6" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.6" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$987/304456087.apply (1 samples, 0.06%)</title><rect x="713.6" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.6" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (1 samples, 0.06%)</title><rect x="713.6" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="716.6" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1059/1339429821.apply (1 samples, 0.06%)</title><rect x="713.6" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.6" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (1 samples, 0.06%)</title><rect x="713.6" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.6" y="734.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1187/1440957806.apply (1 samples, 0.06%)</title><rect x="713.6" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.6" y="718.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (1 samples, 0.06%)</title><rect x="713.6" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.6" y="702.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (1 samples, 0.06%)</title><rect x="713.6" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.6" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (1 samples, 0.06%)</title><rect x="713.6" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.6" y="670.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (1 samples, 0.06%)</title><rect x="713.6" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (1 samples, 0.06%)</title><rect x="713.6" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="713.6" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="713.6" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="713.6" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="713.6" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="713.6" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="713.6" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="713.6" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="713.6" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.6" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="713.6" y="483.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="716.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="713.6" y="467.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="713.6" y="451.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.6" y="462.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="713.6" y="435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.6" y="446.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="713.6" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.6" y="430.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="713.6" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.6" y="414.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="713.6" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.6" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="713.6" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.6" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="713.6" y="355.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.6" y="366.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1113/84114230.apply (2 samples, 0.12%)</title><rect x="714.2" y="947.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (2 samples, 0.12%)</title><rect x="714.2" y="931.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (2 samples, 0.12%)</title><rect x="714.2" y="915.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1147/951341716.apply (2 samples, 0.12%)</title><rect x="714.2" y="899.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.2" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (2 samples, 0.12%)</title><rect x="714.2" y="883.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.2" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (2 samples, 0.12%)</title><rect x="714.2" y="867.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.2" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1149/656008666.apply (2 samples, 0.12%)</title><rect x="714.2" y="851.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.2" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (2 samples, 0.12%)</title><rect x="714.2" y="835.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.2" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (2 samples, 0.12%)</title><rect x="714.2" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.2" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (2 samples, 0.12%)</title><rect x="714.2" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.2" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (2 samples, 0.12%)</title><rect x="714.2" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.2" y="798.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (2 samples, 0.12%)</title><rect x="714.2" y="771.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.2" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (2 samples, 0.12%)</title><rect x="714.2" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.2" y="766.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (1 samples, 0.06%)</title><rect x="714.2" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.2" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.addMatCompose (1 samples, 0.06%)</title><rect x="714.2" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.2" y="734.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="714.9" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.9" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="714.9" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.9" y="734.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.06%)</title><rect x="714.9" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.9" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="714.9" y="691.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="717.9" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$267/1097069005.apply (1 samples, 0.06%)</title><rect x="715.6" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (1 samples, 0.06%)</title><rect x="715.6" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$435/169049466.apply (1 samples, 0.06%)</title><rect x="715.6" y="1171.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (1 samples, 0.06%)</title><rect x="715.6" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (1 samples, 0.06%)</title><rect x="715.6" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$944/124274057.apply (1 samples, 0.06%)</title><rect x="715.6" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$940/1280569305.apply (1 samples, 0.06%)</title><rect x="715.6" y="1107.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPull (1 samples, 0.06%)</title><rect x="716.3" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (1 samples, 0.06%)</title><rect x="717.0" y="1299.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.0" y="1310.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.41%)</title><rect x="717.7" y="1299.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="720.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (1 samples, 0.06%)</title><rect x="722.6" y="1315.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (1 samples, 0.06%)</title><rect x="722.6" y="1299.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.6" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="723.3" y="1363.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="726.3" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (76 samples, 4.47%)</title><rect x="724.0" y="1379.0" width="52.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.0" y="1390.0">akka/..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (54 samples, 3.18%)</title><rect x="726.8" y="1363.0" width="37.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.8" y="1374.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (54 samples, 3.18%)</title><rect x="726.8" y="1347.0" width="37.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.8" y="1358.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (54 samples, 3.18%)</title><rect x="726.8" y="1331.0" width="37.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.8" y="1342.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (20 samples, 1.18%)</title><rect x="726.8" y="1315.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13$$Lambda$1322/82036384.apply (1 samples, 0.06%)</title><rect x="726.8" y="1299.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.$anonfun$preStart$2$adapted (1 samples, 0.06%)</title><rect x="726.8" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$1311/203834125.apply (19 samples, 1.12%)</title><rect x="727.4" y="1299.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (19 samples, 1.12%)</title><rect x="727.4" y="1283.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (19 samples, 1.12%)</title><rect x="727.4" y="1267.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (13 samples, 0.77%)</title><rect x="727.4" y="1251.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (12 samples, 0.71%)</title><rect x="727.4" y="1235.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1402/17417782.apply (1 samples, 0.06%)</title><rect x="727.4" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1$adapted (1 samples, 0.06%)</title><rect x="727.4" y="1203.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1 (1 samples, 0.06%)</title><rect x="727.4" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (1 samples, 0.06%)</title><rect x="727.4" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.4" y="1182.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.06%)</title><rect x="727.4" y="1155.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.4" y="1166.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.06%)</title><rect x="727.4" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.4" y="1150.0"></text>
</g>
<g>
<title>akka/event/EventStream.logLevel (1 samples, 0.06%)</title><rect x="727.4" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.4" y="1134.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.logLevel$ (1 samples, 0.06%)</title><rect x="727.4" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1403/160856450.apply (11 samples, 0.65%)</title><rect x="728.1" y="1219.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (11 samples, 0.65%)</title><rect x="728.1" y="1203.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (11 samples, 0.65%)</title><rect x="728.1" y="1187.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (11 samples, 0.65%)</title><rect x="728.1" y="1171.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (11 samples, 0.65%)</title><rect x="728.1" y="1155.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (11 samples, 0.65%)</title><rect x="728.1" y="1139.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (11 samples, 0.65%)</title><rect x="728.1" y="1123.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1294/907100646.apply (1 samples, 0.06%)</title><rect x="728.1" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (1 samples, 0.06%)</title><rect x="728.1" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1303/1985226539.apply (1 samples, 0.06%)</title><rect x="728.1" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseDispatchable$1 (1 samples, 0.06%)</title><rect x="728.1" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponseDispatch.onResponseDispatchable (1 samples, 0.06%)</title><rect x="728.1" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.dispatchResponseResult (1 samples, 0.06%)</title><rect x="728.1" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$dispatchResponseResult (1 samples, 0.06%)</title><rect x="728.1" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.1" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (1 samples, 0.06%)</title><rect x="728.1" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.1" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="728.1" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.portToConn (1 samples, 0.06%)</title><rect x="728.1" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1302/574381475.apply (1 samples, 0.06%)</title><rect x="728.8" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseReceived$1 (1 samples, 0.06%)</title><rect x="728.8" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponse.onResponseReceived (1 samples, 0.06%)</title><rect x="728.8" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="728.8" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="728.8" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.8" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="728.8" y="1027.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="731.8" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="728.8" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="731.8" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="728.8" y="995.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="731.8" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="728.8" y="979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="731.8" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="728.8" y="963.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="731.8" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="728.8" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="731.8" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="728.8" y="931.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="731.8" y="942.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.06%)</title><rect x="728.8" y="915.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="731.8" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.06%)</title><rect x="728.8" y="899.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="731.8" y="910.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.06%)</title><rect x="728.8" y="883.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="731.8" y="894.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.06%)</title><rect x="728.8" y="867.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="731.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (2 samples, 0.12%)</title><rect x="729.5" y="1107.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.5" y="1118.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.12%)</title><rect x="729.5" y="1091.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.5" y="1102.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (2 samples, 0.12%)</title><rect x="729.5" y="1075.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.5" y="1086.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (2 samples, 0.12%)</title><rect x="729.5" y="1059.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.5" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="730.2" y="1043.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="733.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (1 samples, 0.06%)</title><rect x="730.9" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (1 samples, 0.06%)</title><rect x="730.9" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.06%)</title><rect x="730.9" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (1 samples, 0.06%)</title><rect x="730.9" y="1059.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (1 samples, 0.06%)</title><rect x="730.9" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.06%)</title><rect x="730.9" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState.name (2 samples, 0.12%)</title><rect x="731.6" y="1107.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.6" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="732.3" y="1091.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="735.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/OptHttpResponse$.isEmpty$extension (1 samples, 0.06%)</title><rect x="733.0" y="1107.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleOnce (2 samples, 0.12%)</title><rect x="733.7" y="1107.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (2 samples, 0.12%)</title><rect x="733.7" y="1091.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (2 samples, 0.12%)</title><rect x="733.7" y="1075.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.7" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (2 samples, 0.12%)</title><rect x="733.7" y="1059.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.7" y="1070.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (2 samples, 0.12%)</title><rect x="733.7" y="1043.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.7" y="1054.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (2 samples, 0.12%)</title><rect x="733.7" y="1027.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.7" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (2 samples, 0.12%)</title><rect x="733.7" y="1011.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.7" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (2 samples, 0.12%)</title><rect x="733.7" y="995.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.7" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (2 samples, 0.12%)</title><rect x="733.7" y="979.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (2 samples, 0.12%)</title><rect x="733.7" y="963.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.7" y="974.0"></text>
</g>
<g>
<title>scala/runtime/RichLong.self (2 samples, 0.12%)</title><rect x="733.7" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.7" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (2 samples, 0.12%)</title><rect x="733.7" y="931.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.12%)</title><rect x="733.7" y="915.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="735.1" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="735.1" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.pull (1 samples, 0.06%)</title><rect x="735.8" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.pullSubstream (1 samples, 0.06%)</title><rect x="735.8" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.dispatchCommand (1 samples, 0.06%)</title><rect x="735.8" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.06%)</title><rect x="735.8" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (6 samples, 0.35%)</title><rect x="736.5" y="1251.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (6 samples, 0.35%)</title><rect x="736.5" y="1235.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1436/1422788494.apply (6 samples, 0.35%)</title><rect x="736.5" y="1219.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (6 samples, 0.35%)</title><rect x="736.5" y="1203.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (6 samples, 0.35%)</title><rect x="736.5" y="1187.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (6 samples, 0.35%)</title><rect x="736.5" y="1171.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (6 samples, 0.35%)</title><rect x="736.5" y="1155.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (6 samples, 0.35%)</title><rect x="736.5" y="1139.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (6 samples, 0.35%)</title><rect x="736.5" y="1123.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (5 samples, 0.29%)</title><rect x="737.2" y="1107.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (5 samples, 0.29%)</title><rect x="737.2" y="1091.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.2" y="1102.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (5 samples, 0.29%)</title><rect x="737.2" y="1075.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1437/1137112626.apply (5 samples, 0.29%)</title><rect x="737.2" y="1059.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (5 samples, 0.29%)</title><rect x="737.2" y="1043.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (5 samples, 0.29%)</title><rect x="737.2" y="1027.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (5 samples, 0.29%)</title><rect x="737.2" y="1011.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (5 samples, 0.29%)</title><rect x="737.2" y="995.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.29%)</title><rect x="737.2" y="979.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.2" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.29%)</title><rect x="737.2" y="963.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.29%)</title><rect x="737.2" y="947.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.2" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (5 samples, 0.29%)</title><rect x="737.2" y="931.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="740.2" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (5 samples, 0.29%)</title><rect x="737.2" y="915.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="740.2" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (5 samples, 0.29%)</title><rect x="737.2" y="899.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="740.2" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (5 samples, 0.29%)</title><rect x="737.2" y="883.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="740.2" y="894.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.12%)</title><rect x="737.9" y="867.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="740.9" y="878.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.06%)</title><rect x="738.6" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="741.6" y="862.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.06%)</title><rect x="738.6" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="741.6" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="738.6" y="819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="741.6" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="738.6" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="741.6" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.12%)</title><rect x="739.3" y="867.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="742.3" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.12%)</title><rect x="739.3" y="851.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="742.3" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.12%)</title><rect x="739.3" y="835.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="742.3" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="739.9" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="742.9" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (34 samples, 2.00%)</title><rect x="740.6" y="1315.0" width="23.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.6" y="1326.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (34 samples, 2.00%)</title><rect x="740.6" y="1299.0" width="23.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.6" y="1310.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (9 samples, 0.53%)</title><rect x="741.3" y="1283.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (9 samples, 0.53%)</title><rect x="741.3" y="1267.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (9 samples, 0.53%)</title><rect x="741.3" y="1251.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.afterRequestFinished (1 samples, 0.06%)</title><rect x="741.3" y="1235.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (1 samples, 0.06%)</title><rect x="741.3" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleOnce (1 samples, 0.06%)</title><rect x="741.3" y="1203.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.getTimerAsyncCallback (1 samples, 0.06%)</title><rect x="741.3" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.3" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (8 samples, 0.47%)</title><rect x="742.0" y="1235.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (8 samples, 0.47%)</title><rect x="742.0" y="1219.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (8 samples, 0.47%)</title><rect x="742.0" y="1203.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.0" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (8 samples, 0.47%)</title><rect x="742.0" y="1187.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (8 samples, 0.47%)</title><rect x="742.0" y="1171.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.0" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="742.0" y="1155.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="745.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.41%)</title><rect x="742.7" y="1155.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.41%)</title><rect x="742.7" y="1139.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (7 samples, 0.41%)</title><rect x="742.7" y="1123.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.41%)</title><rect x="742.7" y="1107.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.41%)</title><rect x="742.7" y="1091.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (5 samples, 0.29%)</title><rect x="742.7" y="1075.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (5 samples, 0.29%)</title><rect x="742.7" y="1059.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="742.7" y="1043.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.29%)</title><rect x="742.7" y="1027.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="742.7" y="1011.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.29%)</title><rect x="742.7" y="995.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.29%)</title><rect x="742.7" y="979.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.29%)</title><rect x="742.7" y="963.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.29%)</title><rect x="742.7" y="947.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.29%)</title><rect x="742.7" y="931.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.29%)</title><rect x="742.7" y="915.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.29%)</title><rect x="742.7" y="899.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.7" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.29%)</title><rect x="742.7" y="883.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="745.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="742.7" y="867.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="745.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="742.7" y="851.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.7" y="862.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.29%)</title><rect x="742.7" y="835.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.7" y="846.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.29%)</title><rect x="742.7" y="819.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.7" y="830.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="742.7" y="803.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.7" y="814.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="742.7" y="787.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="745.7" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="742.7" y="771.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="745.7" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.29%)</title><rect x="742.7" y="755.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="746.2" y="1075.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.12%)</title><rect x="746.2" y="1059.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (2 samples, 0.12%)</title><rect x="747.6" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.onPull (1 samples, 0.06%)</title><rect x="747.6" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.06%)</title><rect x="747.6" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="747.6" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.6" y="1246.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="747.6" y="1219.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.6" y="1230.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="747.6" y="1203.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.6" y="1214.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="747.6" y="1187.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.6" y="1198.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="747.6" y="1171.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="750.6" y="1182.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="747.6" y="1155.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.6" y="1166.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="747.6" y="1139.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11$$anon$12.onPull (1 samples, 0.06%)</title><rect x="748.3" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.3" y="1278.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="748.3" y="1251.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="751.3" y="1262.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="748.3" y="1235.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="751.3" y="1246.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="748.3" y="1219.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="751.3" y="1230.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="748.3" y="1203.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="751.3" y="1214.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="748.3" y="1187.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="751.3" y="1198.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="748.3" y="1171.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.3" y="1182.0"></text>
</g>
<g>
<title>napi_consume_skb (1 samples, 0.06%)</title><rect x="748.3" y="1155.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="751.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (21 samples, 1.24%)</title><rect x="749.0" y="1283.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (3 samples, 0.18%)</title><rect x="749.0" y="1267.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (3 samples, 0.18%)</title><rect x="749.0" y="1251.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (3 samples, 0.18%)</title><rect x="749.0" y="1235.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (3 samples, 0.18%)</title><rect x="749.0" y="1219.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (2 samples, 0.12%)</title><rect x="749.0" y="1203.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1385/875665360.apply (1 samples, 0.06%)</title><rect x="749.0" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (1 samples, 0.06%)</title><rect x="749.0" y="1171.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser$$Lambda$1401/294078936.apply (1 samples, 0.06%)</title><rect x="749.0" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.$anonfun$parseMessage$1$adapted (1 samples, 0.06%)</title><rect x="749.0" y="1139.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.$anonfun$parseMessage$1 (1 samples, 0.06%)</title><rect x="749.0" y="1123.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (1 samples, 0.06%)</title><rect x="749.0" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (1 samples, 0.06%)</title><rect x="749.0" y="1091.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (1 samples, 0.06%)</title><rect x="749.0" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="749.0" y="1059.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="752.0" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::rethrow_C(oopDesc*, JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="749.0" y="1043.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="752.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$916/980296428.apply (1 samples, 0.06%)</title><rect x="749.7" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (1 samples, 0.06%)</title><rect x="749.7" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (1 samples, 0.06%)</title><rect x="749.7" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (1 samples, 0.06%)</title><rect x="749.7" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (1 samples, 0.06%)</title><rect x="749.7" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="749.7" y="1107.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="749.7" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1383/1342008485.get$Lambda (1 samples, 0.06%)</title><rect x="749.7" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.doPull (1 samples, 0.06%)</title><rect x="750.4" y="1203.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull$ (1 samples, 0.06%)</title><rect x="750.4" y="1187.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull (1 samples, 0.06%)</title><rect x="750.4" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$2.onPush (2 samples, 0.12%)</title><rect x="751.1" y="1267.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.akka$stream$impl$fusing$FlattenMerge$$anon$$addSource (2 samples, 0.12%)</title><rect x="751.1" y="1251.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.getSingleSource (2 samples, 0.12%)</title><rect x="751.1" y="1235.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (2 samples, 0.12%)</title><rect x="751.1" y="1219.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (10 samples, 0.59%)</title><rect x="752.4" y="1267.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1274/906161504.apply (8 samples, 0.47%)</title><rect x="753.1" y="1251.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (8 samples, 0.47%)</title><rect x="753.1" y="1235.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (8 samples, 0.47%)</title><rect x="753.1" y="1219.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (1 samples, 0.06%)</title><rect x="753.1" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (1 samples, 0.06%)</title><rect x="753.1" y="1187.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (1 samples, 0.06%)</title><rect x="753.1" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.06%)</title><rect x="753.1" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="753.1" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.06%)</title><rect x="753.1" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/SourceShape.inlets (1 samples, 0.06%)</title><rect x="753.1" y="1107.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (7 samples, 0.41%)</title><rect x="753.8" y="1203.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (2 samples, 0.12%)</title><rect x="753.8" y="1187.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderContentLength$1 (1 samples, 0.06%)</title><rect x="753.8" y="1171.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMethod.isEntityAccepted (1 samples, 0.06%)</title><rect x="753.8" y="1155.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.get (1 samples, 0.06%)</title><rect x="754.5" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.5" y="1182.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.result (1 samples, 0.06%)</title><rect x="754.5" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.5" y="1166.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings$.apply (1 samples, 0.06%)</title><rect x="754.5" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.5" y="1150.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.&lt;init&gt; (1 samples, 0.06%)</title><rect x="754.5" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (1 samples, 0.06%)</title><rect x="754.5" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="754.5" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="754.5" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.lengthCompare (1 samples, 0.06%)</title><rect x="754.5" y="1059.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.06%)</title><rect x="754.5" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.06%)</title><rect x="754.5" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.length (1 samples, 0.06%)</title><rect x="754.5" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (2 samples, 0.12%)</title><rect x="755.2" y="1187.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render$1 (1 samples, 0.06%)</title><rect x="755.2" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.2" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.06%)</title><rect x="755.2" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.2" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="755.2" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="755.2" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering$CrLf$.render (1 samples, 0.06%)</title><rect x="755.2" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.2" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.2" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.2" y="1054.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.$plus$eq (1 samples, 0.06%)</title><rect x="755.2" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq$ (1 samples, 0.06%)</title><rect x="755.2" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq (1 samples, 0.06%)</title><rect x="755.2" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.2" y="1006.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.addOne (1 samples, 0.06%)</title><rect x="755.2" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.2" y="990.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.addOne (1 samples, 0.06%)</title><rect x="755.2" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.9" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.06%)</title><rect x="755.9" y="1155.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.9" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="755.9" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="755.9" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (1 samples, 0.06%)</title><rect x="755.9" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (1 samples, 0.06%)</title><rect x="755.9" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (1 samples, 0.06%)</title><rect x="755.9" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (1 samples, 0.06%)</title><rect x="755.9" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.9" y="1027.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.06%)</title><rect x="755.9" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="755.9" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (1 samples, 0.06%)</title><rect x="755.9" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.9" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (1 samples, 0.06%)</title><rect x="755.9" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.9" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (1 samples, 0.06%)</title><rect x="755.9" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="755.9" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="755.9" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.06%)</title><rect x="755.9" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (2 samples, 0.12%)</title><rect x="756.6" y="1187.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.12%)</title><rect x="756.6" y="1171.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.12%)</title><rect x="756.6" y="1155.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.12%)</title><rect x="756.6" y="1139.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.12%)</title><rect x="756.6" y="1123.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.12%)</title><rect x="756.6" y="1107.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering$CrLf$.render (1 samples, 0.06%)</title><rect x="756.6" y="1091.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="756.6" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpProtocol.render (1 samples, 0.06%)</title><rect x="757.3" y="1091.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/SingletonValueRenderable.render$ (1 samples, 0.06%)</title><rect x="757.3" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/SingletonValueRenderable.render (1 samples, 0.06%)</title><rect x="757.3" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="757.3" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="757.3" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.3" y="1038.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.putByteArrayUnsafe (1 samples, 0.06%)</title><rect x="757.3" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (1 samples, 0.06%)</title><rect x="757.3" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq$ (1 samples, 0.06%)</title><rect x="757.3" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq (1 samples, 0.06%)</title><rect x="757.3" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addOne (1 samples, 0.06%)</title><rect x="757.3" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addOne (1 samples, 0.06%)</title><rect x="757.3" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.advanceToNextBlockIfNecessary (1 samples, 0.06%)</title><rect x="757.3" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable$ (1 samples, 0.06%)</title><rect x="757.3" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.&lt;init&gt; (1 samples, 0.06%)</title><rect x="758.0" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.0" y="1198.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="758.0" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq$ (1 samples, 0.06%)</title><rect x="758.0" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.06%)</title><rect x="758.7" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="758.7" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/TLSProtocol$SendBytes$.apply (1 samples, 0.06%)</title><rect x="758.7" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (6 samples, 0.35%)</title><rect x="759.4" y="1267.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (5 samples, 0.29%)</title><rect x="759.4" y="1251.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.29%)</title><rect x="759.4" y="1235.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.29%)</title><rect x="759.4" y="1219.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.29%)</title><rect x="759.4" y="1203.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.29%)</title><rect x="759.4" y="1187.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (5 samples, 0.29%)</title><rect x="759.4" y="1171.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (5 samples, 0.29%)</title><rect x="759.4" y="1155.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (5 samples, 0.29%)</title><rect x="759.4" y="1139.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.29%)</title><rect x="759.4" y="1123.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="759.4" y="1107.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.29%)</title><rect x="759.4" y="1091.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.29%)</title><rect x="759.4" y="1075.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.29%)</title><rect x="759.4" y="1059.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.29%)</title><rect x="759.4" y="1043.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.29%)</title><rect x="759.4" y="1027.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.29%)</title><rect x="759.4" y="1011.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.29%)</title><rect x="759.4" y="995.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.29%)</title><rect x="759.4" y="979.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.29%)</title><rect x="759.4" y="963.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.4" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.29%)</title><rect x="759.4" y="947.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="762.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="759.4" y="931.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="762.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="759.4" y="915.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="762.4" y="926.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.29%)</title><rect x="759.4" y="899.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="762.4" y="910.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="759.4" y="883.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="762.4" y="894.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.24%)</title><rect x="759.4" y="867.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="762.4" y="878.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="759.4" y="851.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="762.4" y="862.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.18%)</title><rect x="760.1" y="851.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.1" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.18%)</title><rect x="760.1" y="835.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.1" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.18%)</title><rect x="760.1" y="819.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="763.1" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="762.2" y="883.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="765.2" y="894.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (1 samples, 0.06%)</title><rect x="762.9" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.9" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (1 samples, 0.06%)</title><rect x="762.9" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="762.9" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="762.9" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.9" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (1 samples, 0.06%)</title><rect x="762.9" y="1187.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.06%)</title><rect x="762.9" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.06%)</title><rect x="762.9" y="1155.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.9" y="1166.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="763.6" y="1283.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="766.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (17 samples, 1.00%)</title><rect x="764.3" y="1363.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.3" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (17 samples, 1.00%)</title><rect x="764.3" y="1347.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.3" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (16 samples, 0.94%)</title><rect x="764.3" y="1331.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (10 samples, 0.59%)</title><rect x="764.3" y="1315.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (2 samples, 0.12%)</title><rect x="764.3" y="1299.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (2 samples, 0.12%)</title><rect x="764.3" y="1283.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (1 samples, 0.06%)</title><rect x="764.3" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (1 samples, 0.06%)</title><rect x="764.3" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay$ (1 samples, 0.06%)</title><rect x="764.3" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay (1 samples, 0.06%)</title><rect x="764.3" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="764.3" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.06%)</title><rect x="764.3" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (1 samples, 0.06%)</title><rect x="764.9" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.06%)</title><rect x="764.9" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (1 samples, 0.06%)</title><rect x="764.9" y="1235.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.9" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="764.9" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.9" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="764.9" y="1203.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$$anon$12.preStart (1 samples, 0.06%)</title><rect x="765.6" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$$anon$12.setCallback (1 samples, 0.06%)</title><rect x="765.6" y="1283.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (6 samples, 0.35%)</title><rect x="766.3" y="1299.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.06%)</title><rect x="766.3" y="1283.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="766.3" y="1267.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="766.3" y="1251.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="766.3" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="766.3" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="766.3" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="766.3" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="766.3" y="1171.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="766.3" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="766.3" y="1139.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="766.3" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="766.3" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="766.3" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="766.3" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="766.3" y="1059.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="766.3" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="766.3" y="1027.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="766.3" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="766.3" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.3" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="766.3" y="979.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="769.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="766.3" y="963.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="769.3" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="766.3" y="947.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.3" y="958.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="766.3" y="931.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="769.3" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="766.3" y="915.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.3" y="926.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="766.3" y="899.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.3" y="910.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="766.3" y="883.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.3" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="766.3" y="867.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="769.3" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="766.3" y="851.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="769.3" y="862.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (4 samples, 0.24%)</title><rect x="767.0" y="1283.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (4 samples, 0.24%)</title><rect x="767.0" y="1267.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (4 samples, 0.24%)</title><rect x="767.0" y="1251.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (4 samples, 0.24%)</title><rect x="767.0" y="1235.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (4 samples, 0.24%)</title><rect x="767.0" y="1219.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (4 samples, 0.24%)</title><rect x="767.0" y="1203.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.0" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (4 samples, 0.24%)</title><rect x="767.0" y="1187.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.0" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.24%)</title><rect x="767.0" y="1171.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.24%)</title><rect x="767.0" y="1155.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.24%)</title><rect x="767.0" y="1139.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.24%)</title><rect x="767.0" y="1123.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.24%)</title><rect x="767.0" y="1107.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.24%)</title><rect x="767.0" y="1091.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.24%)</title><rect x="767.0" y="1075.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.24%)</title><rect x="767.0" y="1059.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.24%)</title><rect x="767.0" y="1043.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.24%)</title><rect x="767.0" y="1027.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.24%)</title><rect x="767.0" y="1011.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.0" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.24%)</title><rect x="767.0" y="995.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="770.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="767.7" y="979.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="770.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="767.7" y="963.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.7" y="974.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.18%)</title><rect x="767.7" y="947.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="770.7" y="958.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.18%)</title><rect x="767.7" y="931.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="770.7" y="942.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.18%)</title><rect x="767.7" y="915.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="770.7" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="768.4" y="899.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.4" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="768.4" y="883.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="771.4" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="768.4" y="867.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.4" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (1 samples, 0.06%)</title><rect x="769.8" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (1 samples, 0.06%)</title><rect x="769.8" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="769.8" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (1 samples, 0.06%)</title><rect x="769.8" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (1 samples, 0.06%)</title><rect x="769.8" y="1219.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (1 samples, 0.06%)</title><rect x="769.8" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (1 samples, 0.06%)</title><rect x="769.8" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.06%)</title><rect x="769.8" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.06%)</title><rect x="769.8" y="1155.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.8" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="769.8" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="769.8" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="769.8" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (1 samples, 0.06%)</title><rect x="770.5" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.06%)</title><rect x="770.5" y="1283.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$$Lambda$542/629165485.apply (1 samples, 0.06%)</title><rect x="770.5" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1$adapted (1 samples, 0.06%)</title><rect x="770.5" y="1251.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1 (1 samples, 0.06%)</title><rect x="770.5" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (1 samples, 0.06%)</title><rect x="770.5" y="1219.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="770.5" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="770.5" y="1187.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.06%)</title><rect x="770.5" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (4 samples, 0.24%)</title><rect x="771.2" y="1315.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (4 samples, 0.24%)</title><rect x="771.2" y="1299.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="771.2" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.2" y="1294.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (1 samples, 0.06%)</title><rect x="771.2" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.2" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcII$sp.apply (1 samples, 0.06%)</title><rect x="771.2" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.06%)</title><rect x="771.2" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (3 samples, 0.18%)</title><rect x="771.9" y="1283.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (2 samples, 0.12%)</title><rect x="771.9" y="1267.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.9" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (2 samples, 0.12%)</title><rect x="771.9" y="1251.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.9" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (2 samples, 0.12%)</title><rect x="771.9" y="1235.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.9" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (2 samples, 0.12%)</title><rect x="771.9" y="1219.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.9" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (2 samples, 0.12%)</title><rect x="771.9" y="1203.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (2 samples, 0.12%)</title><rect x="771.9" y="1187.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (2 samples, 0.12%)</title><rect x="771.9" y="1171.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (2 samples, 0.12%)</title><rect x="771.9" y="1155.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (2 samples, 0.12%)</title><rect x="771.9" y="1139.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (2 samples, 0.12%)</title><rect x="771.9" y="1123.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.12%)</title><rect x="771.9" y="1107.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.9" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="771.9" y="1091.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.9" y="1102.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (1 samples, 0.06%)</title><rect x="773.3" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (2 samples, 0.12%)</title><rect x="774.0" y="1315.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (2 samples, 0.12%)</title><rect x="774.0" y="1299.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (2 samples, 0.12%)</title><rect x="774.0" y="1283.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$5.onPull (1 samples, 0.06%)</title><rect x="774.0" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.0" y="1278.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="774.7" y="1267.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="777.7" y="1278.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="775.4" y="1331.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="778.4" y="1342.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="776.1" y="1363.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="779.1" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.unhandled (1 samples, 0.06%)</title><rect x="776.8" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.unhandled$ (1 samples, 0.06%)</title><rect x="776.8" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.8" y="1390.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="776.8" y="1363.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="779.8" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener.aroundReceive (1 samples, 0.06%)</title><rect x="777.5" y="1443.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (1 samples, 0.06%)</title><rect x="777.5" y="1427.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (1 samples, 0.06%)</title><rect x="777.5" y="1411.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.5" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener.akka$actor$Timers$$super$aroundReceive (1 samples, 0.06%)</title><rect x="777.5" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.06%)</title><rect x="777.5" y="1379.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.06%)</title><rect x="777.5" y="1363.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.5" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="777.5" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.5" y="1358.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.06%)</title><rect x="777.5" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.5" y="1342.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.06%)</title><rect x="777.5" y="1315.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.5" y="1326.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.06%)</title><rect x="777.5" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.5" y="1310.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.06%)</title><rect x="777.5" y="1283.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="780.5" y="1294.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.06%)</title><rect x="777.5" y="1267.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="780.5" y="1278.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.aroundReceive (3 samples, 0.18%)</title><rect x="778.1" y="1443.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (3 samples, 0.18%)</title><rect x="778.1" y="1427.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (3 samples, 0.18%)</title><rect x="778.1" y="1411.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.1" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.akka$actor$Timers$$super$aroundReceive (3 samples, 0.18%)</title><rect x="778.1" y="1395.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.18%)</title><rect x="778.1" y="1379.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.18%)</title><rect x="778.1" y="1363.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.1" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.applyOrElse (3 samples, 0.18%)</title><rect x="778.1" y="1347.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.count (3 samples, 0.18%)</title><rect x="778.1" y="1331.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count$ (3 samples, 0.18%)</title><rect x="778.1" y="1315.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count (3 samples, 0.18%)</title><rect x="778.1" y="1299.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.1" y="1310.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1$$Lambda$898/268239663.apply (1 samples, 0.06%)</title><rect x="779.5" y="1283.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.5" y="1294.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.$anonfun$applyOrElse$1$adapted (1 samples, 0.06%)</title><rect x="779.5" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.5" y="1278.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.$anonfun$applyOrElse$1 (1 samples, 0.06%)</title><rect x="779.5" y="1251.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.5" y="1262.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.aroundReceive (41 samples, 2.41%)</title><rect x="780.2" y="1443.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.2" y="1454.0">io..</text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (41 samples, 2.41%)</title><rect x="780.2" y="1427.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.2" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (41 samples, 2.41%)</title><rect x="780.2" y="1411.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.2" y="1422.0">ak..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.akka$actor$Timers$$super$aroundReceive (41 samples, 2.41%)</title><rect x="780.2" y="1395.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.2" y="1406.0">io..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (41 samples, 2.41%)</title><rect x="780.2" y="1379.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.2" y="1390.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (41 samples, 2.41%)</title><rect x="780.2" y="1363.0" width="28.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.2" y="1374.0">ak..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$anonfun$receive$1.applyOrElse (3 samples, 0.18%)</title><rect x="780.2" y="1347.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.2" y="1358.0"></text>
</g>
<g>
<title>akka/pattern/PromiseActorRef.$bang (1 samples, 0.06%)</title><rect x="780.2" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.2" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.06%)</title><rect x="780.2" y="1315.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.2" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="780.2" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.2" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="780.2" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.2" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.06%)</title><rect x="780.2" y="1267.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.06%)</title><rect x="780.2" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="780.2" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="780.2" y="1219.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.2" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.06%)</title><rect x="780.2" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.2" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.06%)</title><rect x="780.2" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.2" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="780.2" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="780.2" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="780.2" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="780.2" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="780.2" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="780.2" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="780.2" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="780.2" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="780.2" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="780.2" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.2" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="780.2" y="1011.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="783.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (1 samples, 0.06%)</title><rect x="780.9" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (1 samples, 0.06%)</title><rect x="780.9" y="1315.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (1 samples, 0.06%)</title><rect x="780.9" y="1299.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (1 samples, 0.06%)</title><rect x="780.9" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (1 samples, 0.06%)</title><rect x="780.9" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.apply (1 samples, 0.06%)</title><rect x="781.6" y="1331.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.apply$ (1 samples, 0.06%)</title><rect x="781.6" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SetOps.apply (1 samples, 0.06%)</title><rect x="781.6" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.contains (1 samples, 0.06%)</title><rect x="781.6" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.6" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="781.6" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="781.6" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="781.6" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.6" y="1246.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.unhandled (38 samples, 2.24%)</title><rect x="782.3" y="1347.0" width="26.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.3" y="1358.0">i..</text>
</g>
<g>
<title>akka/actor/Actor.unhandled$ (38 samples, 2.24%)</title><rect x="782.3" y="1331.0" width="26.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.3" y="1342.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.unhandled (38 samples, 2.24%)</title><rect x="782.3" y="1315.0" width="26.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="785.3" y="1326.0">a..</text>
</g>
<g>
<title>akka/event/EventStream.publish (38 samples, 2.24%)</title><rect x="782.3" y="1299.0" width="26.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.3" y="1310.0">a..</text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (38 samples, 2.24%)</title><rect x="782.3" y="1283.0" width="26.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.3" y="1294.0">a..</text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (38 samples, 2.24%)</title><rect x="782.3" y="1267.0" width="26.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.3" y="1278.0">a..</text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.apply (1 samples, 0.06%)</title><rect x="782.3" y="1251.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (2 samples, 0.12%)</title><rect x="783.0" y="1251.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (35 samples, 2.06%)</title><rect x="784.4" y="1251.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.4" y="1262.0">s..</text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/432430300.apply (35 samples, 2.06%)</title><rect x="784.4" y="1235.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.4" y="1246.0">a..</text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (35 samples, 2.06%)</title><rect x="784.4" y="1219.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.4" y="1230.0">a..</text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (35 samples, 2.06%)</title><rect x="784.4" y="1203.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.4" y="1214.0">a..</text>
</g>
<g>
<title>akka/event/EventStream.publish (35 samples, 2.06%)</title><rect x="784.4" y="1187.0" width="24.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.4" y="1198.0">a..</text>
</g>
<g>
<title>akka/event/EventStream.publish (35 samples, 2.06%)</title><rect x="784.4" y="1171.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.4" y="1182.0">a..</text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (34 samples, 2.00%)</title><rect x="785.1" y="1155.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.1" y="1166.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (34 samples, 2.00%)</title><rect x="785.1" y="1139.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.1" y="1150.0">a..</text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (34 samples, 2.00%)</title><rect x="785.1" y="1123.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.1" y="1134.0">a..</text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (34 samples, 2.00%)</title><rect x="785.1" y="1107.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.1" y="1118.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (34 samples, 2.00%)</title><rect x="785.1" y="1091.0" width="23.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.1" y="1102.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (34 samples, 2.00%)</title><rect x="785.1" y="1075.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.1" y="1086.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (34 samples, 2.00%)</title><rect x="785.1" y="1059.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.1" y="1070.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (34 samples, 2.00%)</title><rect x="785.1" y="1043.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.1" y="1054.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (34 samples, 2.00%)</title><rect x="785.1" y="1027.0" width="23.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="1038.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (34 samples, 2.00%)</title><rect x="785.1" y="1011.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.1" y="1022.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (34 samples, 2.00%)</title><rect x="785.1" y="995.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.1" y="1006.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (34 samples, 2.00%)</title><rect x="785.1" y="979.0" width="23.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.1" y="990.0">a..</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (34 samples, 2.00%)</title><rect x="785.1" y="963.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.1" y="974.0">a..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (34 samples, 2.00%)</title><rect x="785.1" y="947.0" width="23.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.1" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (34 samples, 2.00%)</title><rect x="785.1" y="931.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.1" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (34 samples, 2.00%)</title><rect x="785.1" y="915.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.1" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (34 samples, 2.00%)</title><rect x="785.1" y="899.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.1" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 2.00%)</title><rect x="785.1" y="883.0" width="23.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.1" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 1.88%)</title><rect x="786.5" y="867.0" width="22.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.5" y="878.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.18%)</title><rect x="786.5" y="851.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="789.5" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="787.2" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="790.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.06%)</title><rect x="787.9" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="790.9" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (29 samples, 1.71%)</title><rect x="788.6" y="851.0" width="20.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="791.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.47%)</title><rect x="791.3" y="835.0" width="17.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="794.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 1.47%)</title><rect x="791.3" y="819.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="794.3" y="830.0"></text>
</g>
<g>
<title>sys_futex (25 samples, 1.47%)</title><rect x="791.3" y="803.0" width="17.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.3" y="814.0"></text>
</g>
<g>
<title>do_futex (25 samples, 1.47%)</title><rect x="791.3" y="787.0" width="17.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 1.47%)</title><rect x="791.3" y="771.0" width="17.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="794.3" y="782.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 1.41%)</title><rect x="792.0" y="755.0" width="16.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="795.0" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 1.41%)</title><rect x="792.0" y="739.0" width="16.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="795.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 1.41%)</title><rect x="792.0" y="723.0" width="16.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="795.0" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (9 samples, 0.53%)</title><rect x="808.7" y="1475.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.7" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (7 samples, 0.41%)</title><rect x="810.1" y="1459.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (7 samples, 0.41%)</title><rect x="810.1" y="1443.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (7 samples, 0.41%)</title><rect x="810.1" y="1427.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (7 samples, 0.41%)</title><rect x="810.1" y="1411.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.1" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (24 samples, 1.41%)</title><rect x="815.0" y="1475.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.0" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (24 samples, 1.41%)</title><rect x="815.0" y="1459.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.0" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (24 samples, 1.41%)</title><rect x="815.0" y="1443.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (1 samples, 0.06%)</title><rect x="815.0" y="1427.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (1 samples, 0.06%)</title><rect x="815.0" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (1 samples, 0.06%)</title><rect x="815.0" y="1395.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (1 samples, 0.06%)</title><rect x="815.0" y="1379.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (1 samples, 0.06%)</title><rect x="815.7" y="1427.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.waitingForChildrenOrNull (1 samples, 0.06%)</title><rect x="815.7" y="1411.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull$ (1 samples, 0.06%)</title><rect x="815.7" y="1395.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull (1 samples, 0.06%)</title><rect x="815.7" y="1379.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (1 samples, 0.06%)</title><rect x="815.7" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (1 samples, 0.06%)</title><rect x="815.7" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (1 samples, 0.06%)</title><rect x="815.7" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (1 samples, 0.06%)</title><rect x="816.3" y="1427.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.3" y="1438.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.06%)</title><rect x="816.3" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendAllToDeadLetters$1 (1 samples, 0.06%)</title><rect x="816.3" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (1 samples, 0.06%)</title><rect x="817.0" y="1427.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (1 samples, 0.06%)</title><rect x="817.0" y="1411.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (1 samples, 0.06%)</title><rect x="817.0" y="1395.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (1 samples, 0.06%)</title><rect x="817.0" y="1379.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (1 samples, 0.06%)</title><rect x="817.0" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.06%)</title><rect x="817.0" y="1347.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.06%)</title><rect x="817.0" y="1331.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (1 samples, 0.06%)</title><rect x="817.0" y="1315.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (20 samples, 1.18%)</title><rect x="817.7" y="1427.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (20 samples, 1.18%)</title><rect x="817.7" y="1411.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (20 samples, 1.18%)</title><rect x="817.7" y="1395.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (19 samples, 1.12%)</title><rect x="818.4" y="1379.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (2 samples, 0.12%)</title><rect x="818.4" y="1363.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.4" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (2 samples, 0.12%)</title><rect x="818.4" y="1347.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.4" y="1358.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="819.1" y="1331.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.1" y="1342.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="819.1" y="1315.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="822.1" y="1326.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="819.1" y="1299.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="822.1" y="1310.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="819.1" y="1283.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="822.1" y="1294.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="819.1" y="1267.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.1" y="1278.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="819.1" y="1251.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.1" y="1262.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="819.1" y="1235.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="822.1" y="1246.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="819.1" y="1219.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (2 samples, 0.12%)</title><rect x="819.8" y="1363.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (2 samples, 0.12%)</title><rect x="819.8" y="1347.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.8" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (2 samples, 0.12%)</title><rect x="819.8" y="1331.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (1 samples, 0.06%)</title><rect x="820.5" y="1315.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (1 samples, 0.06%)</title><rect x="820.5" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (7 samples, 0.41%)</title><rect x="821.2" y="1363.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (7 samples, 0.41%)</title><rect x="821.2" y="1347.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (7 samples, 0.41%)</title><rect x="821.2" y="1331.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (7 samples, 0.41%)</title><rect x="821.2" y="1315.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (7 samples, 0.41%)</title><rect x="821.2" y="1299.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.41%)</title><rect x="821.2" y="1283.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.41%)</title><rect x="821.2" y="1267.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.41%)</title><rect x="821.2" y="1251.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.41%)</title><rect x="821.2" y="1235.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.41%)</title><rect x="821.2" y="1219.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.41%)</title><rect x="821.2" y="1203.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.41%)</title><rect x="821.2" y="1187.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.41%)</title><rect x="821.2" y="1171.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.41%)</title><rect x="821.2" y="1155.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.41%)</title><rect x="821.2" y="1139.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.41%)</title><rect x="821.2" y="1123.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.2" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.41%)</title><rect x="821.2" y="1107.0" width="4.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="824.2" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.35%)</title><rect x="821.9" y="1091.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="824.9" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.35%)</title><rect x="821.9" y="1075.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.9" y="1086.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.35%)</title><rect x="821.9" y="1059.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="824.9" y="1070.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.35%)</title><rect x="821.9" y="1043.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.9" y="1054.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.35%)</title><rect x="821.9" y="1027.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="824.9" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="822.6" y="1011.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="825.6" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="822.6" y="995.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="825.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.29%)</title><rect x="822.6" y="979.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="825.6" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (3 samples, 0.18%)</title><rect x="826.1" y="1363.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.1" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (3 samples, 0.18%)</title><rect x="826.1" y="1347.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.1" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (2 samples, 0.12%)</title><rect x="826.8" y="1331.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (2 samples, 0.12%)</title><rect x="826.8" y="1315.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (2 samples, 0.12%)</title><rect x="826.8" y="1299.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (2 samples, 0.12%)</title><rect x="826.8" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1$$anon$2.enqueue (1 samples, 0.06%)</title><rect x="826.8" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (1 samples, 0.06%)</title><rect x="826.8" y="1251.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.8" y="1262.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemoteDeadLetterActorRef.$bang (1 samples, 0.06%)</title><rect x="826.8" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (1 samples, 0.06%)</title><rect x="826.8" y="1219.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.specialHandle (1 samples, 0.06%)</title><rect x="826.8" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/EmptyLocalActorRef.specialHandle (1 samples, 0.06%)</title><rect x="826.8" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/EmptyLocalActorRef.publishSupressedDeadLetter (1 samples, 0.06%)</title><rect x="826.8" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.8" y="1182.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (1 samples, 0.06%)</title><rect x="826.8" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.8" y="1166.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (1 samples, 0.06%)</title><rect x="826.8" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (1 samples, 0.06%)</title><rect x="827.5" y="1267.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.5" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (1 samples, 0.06%)</title><rect x="827.5" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.5" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (1 samples, 0.06%)</title><rect x="827.5" y="1235.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.06%)</title><rect x="827.5" y="1219.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.5" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (3 samples, 0.18%)</title><rect x="828.2" y="1363.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (3 samples, 0.18%)</title><rect x="828.2" y="1347.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (3 samples, 0.18%)</title><rect x="828.2" y="1331.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (3 samples, 0.18%)</title><rect x="828.2" y="1315.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (2 samples, 0.12%)</title><rect x="828.2" y="1299.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.2" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.12%)</title><rect x="828.2" y="1283.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.2" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1076/1930358118.apply (2 samples, 0.12%)</title><rect x="828.2" y="1267.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.2" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (2 samples, 0.12%)</title><rect x="828.2" y="1251.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.2" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (2 samples, 0.12%)</title><rect x="828.2" y="1235.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (2 samples, 0.12%)</title><rect x="828.2" y="1219.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.2" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1077/2000331396.apply (2 samples, 0.12%)</title><rect x="828.2" y="1203.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.2" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (2 samples, 0.12%)</title><rect x="828.2" y="1187.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.2" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (2 samples, 0.12%)</title><rect x="828.2" y="1171.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (2 samples, 0.12%)</title><rect x="828.2" y="1155.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$546/1953226430.apply (2 samples, 0.12%)</title><rect x="828.2" y="1139.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (2 samples, 0.12%)</title><rect x="828.2" y="1123.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (2 samples, 0.12%)</title><rect x="828.2" y="1107.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.12%)</title><rect x="828.2" y="1091.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.12%)</title><rect x="828.2" y="1075.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.12%)</title><rect x="828.2" y="1059.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$540/188321725.apply (2 samples, 0.12%)</title><rect x="828.2" y="1043.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.12%)</title><rect x="828.2" y="1027.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.12%)</title><rect x="828.2" y="1011.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.12%)</title><rect x="828.2" y="995.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="828.2" y="979.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.12%)</title><rect x="828.2" y="963.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.2" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.12%)</title><rect x="828.2" y="947.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.12%)</title><rect x="828.2" y="931.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.2" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.12%)</title><rect x="828.2" y="915.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.2" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.12%)</title><rect x="828.2" y="899.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.2" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.12%)</title><rect x="828.2" y="883.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.2" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.12%)</title><rect x="828.2" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.2" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="828.2" y="851.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.2" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.12%)</title><rect x="828.2" y="835.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.2" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.12%)</title><rect x="828.2" y="819.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.2" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.12%)</title><rect x="828.2" y="803.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="828.2" y="787.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="828.2" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.12%)</title><rect x="828.2" y="755.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="828.2" y="739.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="828.2" y="723.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="828.2" y="707.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.2" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="828.2" y="691.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="831.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="828.2" y="675.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="831.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="828.2" y="659.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="831.2" y="670.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="828.2" y="643.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.2" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="828.2" y="627.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="828.2" y="611.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="831.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="828.2" y="595.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="831.2" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="828.2" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="831.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="828.2" y="563.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.2" y="574.0"></text>
</g>
<g>
<title>scala/Option.toList (1 samples, 0.06%)</title><rect x="829.5" y="1299.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (1 samples, 0.06%)</title><rect x="829.5" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.5" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (1 samples, 0.06%)</title><rect x="829.5" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1338823963.invoke_MT (1 samples, 0.06%)</title><rect x="829.5" y="1251.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.checkCustomized (1 samples, 0.06%)</title><rect x="829.5" y="1235.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (2 samples, 0.12%)</title><rect x="830.2" y="1363.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (2 samples, 0.12%)</title><rect x="830.2" y="1347.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (2 samples, 0.12%)</title><rect x="830.2" y="1331.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (2 samples, 0.12%)</title><rect x="830.2" y="1315.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (2 samples, 0.12%)</title><rect x="830.2" y="1299.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="830.2" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.12%)</title><rect x="830.2" y="1267.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="833.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (2 samples, 0.12%)</title><rect x="830.2" y="1251.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="830.2" y="1235.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="830.2" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="830.2" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.2" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="830.2" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="830.9" y="1219.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (1 samples, 0.06%)</title><rect x="830.9" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (1 samples, 0.06%)</title><rect x="830.9" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (1 samples, 0.06%)</title><rect x="830.9" y="1171.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (1 samples, 0.06%)</title><rect x="830.9" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (1 samples, 0.06%)</title><rect x="831.6" y="1475.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox$default$2 (2 samples, 0.12%)</title><rect x="832.3" y="1491.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.3" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dispatcher (2 samples, 0.12%)</title><rect x="832.3" y="1475.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.3" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (2 samples, 0.12%)</title><rect x="832.3" y="1459.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.setDone (2 samples, 0.12%)</title><rect x="833.7" y="1523.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.7" y="1534.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (1 samples, 0.06%)</title><rect x="833.7" y="1507.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.7" y="1518.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="834.4" y="1507.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="837.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.41%)</title><rect x="835.1" y="1555.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.41%)</title><rect x="835.1" y="1539.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.41%)</title><rect x="835.1" y="1523.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.1" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.41%)</title><rect x="835.1" y="1507.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="838.1" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.35%)</title><rect x="835.8" y="1491.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.8" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.35%)</title><rect x="835.8" y="1475.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.8" y="1486.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.35%)</title><rect x="835.8" y="1459.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="838.8" y="1470.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.35%)</title><rect x="835.8" y="1443.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.8" y="1454.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.35%)</title><rect x="835.8" y="1427.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.8" y="1438.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.35%)</title><rect x="835.8" y="1411.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.8" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.35%)</title><rect x="835.8" y="1395.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.8" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.35%)</title><rect x="835.8" y="1379.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 3.59%)</title><rect x="840.0" y="1571.0" width="42.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.0" y="1582.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 3.53%)</title><rect x="840.7" y="1555.0" width="41.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.7" y="1566.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (21 samples, 1.24%)</title><rect x="842.0" y="1539.0" width="14.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="845.0" y="1550.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.12%)</title><rect x="843.4" y="1523.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="846.4" y="1534.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="844.8" y="1523.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="847.8" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.24%)</title><rect x="845.5" y="1523.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="848.5" y="1534.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="846.9" y="1507.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="849.9" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="847.6" y="1507.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="850.6" y="1518.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.12%)</title><rect x="848.3" y="1523.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="851.3" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="849.7" y="1523.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="852.7" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.29%)</title><rect x="850.4" y="1523.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="853.4" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="852.5" y="1507.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="855.5" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="852.5" y="1491.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="855.5" y="1502.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="853.2" y="1475.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.2" y="1486.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="853.2" y="1459.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="856.2" y="1470.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="853.2" y="1443.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.2" y="1454.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="853.2" y="1427.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.2" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="853.8" y="1523.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="856.8" y="1534.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.06%)</title><rect x="854.5" y="1523.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="857.5" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_wait (2 samples, 0.12%)</title><rect x="855.2" y="1523.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="858.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 2.18%)</title><rect x="856.6" y="1539.0" width="25.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="859.6" y="1550.0">[..</text>
</g>
<g>
<title>__pthread_cond_wait (34 samples, 2.00%)</title><rect x="856.6" y="1523.0" width="23.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="859.6" y="1534.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.82%)</title><rect x="858.7" y="1507.0" width="21.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="861.7" y="1518.0">e..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 1.82%)</title><rect x="858.7" y="1491.0" width="21.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="861.7" y="1502.0">d..</text>
</g>
<g>
<title>sys_futex (27 samples, 1.59%)</title><rect x="861.5" y="1475.0" width="18.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="864.5" y="1486.0"></text>
</g>
<g>
<title>do_futex (24 samples, 1.41%)</title><rect x="862.9" y="1459.0" width="16.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="865.9" y="1470.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 1.41%)</title><rect x="862.9" y="1443.0" width="16.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="865.9" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.82%)</title><rect x="863.6" y="1427.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="866.6" y="1438.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.71%)</title><rect x="865.0" y="1411.0" width="8.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.0" y="1422.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.71%)</title><rect x="865.0" y="1395.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.0" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.59%)</title><rect x="866.4" y="1379.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="869.4" y="1390.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (2 samples, 0.12%)</title><rect x="871.9" y="1363.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="874.9" y="1374.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (2 samples, 0.12%)</title><rect x="871.9" y="1347.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="874.9" y="1358.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.12%)</title><rect x="871.9" y="1331.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.9" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.12%)</title><rect x="871.9" y="1315.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="874.9" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.12%)</title><rect x="871.9" y="1299.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="874.9" y="1310.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (2 samples, 0.12%)</title><rect x="871.9" y="1283.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="874.9" y="1294.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="872.6" y="1267.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.6" y="1278.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="872.6" y="1251.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="875.6" y="1262.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="872.6" y="1235.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="875.6" y="1246.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="872.6" y="1219.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.6" y="1230.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="872.6" y="1203.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="875.6" y="1214.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="872.6" y="1187.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="875.6" y="1198.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="872.6" y="1171.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="875.6" y="1182.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="872.6" y="1155.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.6" y="1166.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="872.6" y="1139.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="875.6" y="1150.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="872.6" y="1123.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="875.6" y="1134.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.06%)</title><rect x="872.6" y="1107.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="875.6" y="1118.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.06%)</title><rect x="872.6" y="1091.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="875.6" y="1102.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (1 samples, 0.06%)</title><rect x="872.6" y="1075.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="875.6" y="1086.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="872.6" y="1059.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="875.6" y="1070.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="872.6" y="1043.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="875.6" y="1054.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="872.6" y="1027.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.6" y="1038.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="872.6" y="1011.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="875.6" y="1022.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="872.6" y="995.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="875.6" y="1006.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="872.6" y="979.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.6" y="990.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="872.6" y="963.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.6" y="974.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="872.6" y="947.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="875.6" y="958.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.06%)</title><rect x="872.6" y="931.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="875.6" y="942.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.06%)</title><rect x="872.6" y="915.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="875.6" y="926.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.06%)</title><rect x="872.6" y="899.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="875.6" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.47%)</title><rect x="873.3" y="1427.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.3" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.18%)</title><rect x="876.8" y="1411.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="879.8" y="1422.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.06%)</title><rect x="878.9" y="1427.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="881.9" y="1438.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="879.5" y="1459.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="882.5" y="1470.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="880.2" y="1523.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="883.2" y="1534.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.12%)</title><rect x="880.9" y="1523.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="883.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (36 samples, 2.12%)</title><rect x="882.3" y="1571.0" width="25.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.3" y="1582.0">j..</text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="887.2" y="1555.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="890.2" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 1.18%)</title><rect x="887.9" y="1555.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.9" y="1566.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="887.9" y="1539.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="890.9" y="1550.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.59%)</title><rect x="888.6" y="1539.0" width="6.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="891.6" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="889.3" y="1523.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="892.3" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.24%)</title><rect x="890.0" y="1523.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="893.0" y="1534.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (4 samples, 0.24%)</title><rect x="890.0" y="1507.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="893.0" y="1518.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.18%)</title><rect x="890.7" y="1491.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="893.7" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="892.0" y="1475.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.0" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="892.0" y="1459.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="895.0" y="1470.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="892.7" y="1523.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="895.7" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.12%)</title><rect x="893.4" y="1523.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="896.4" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="894.1" y="1507.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.1" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="894.1" y="1491.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.1" y="1502.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="894.8" y="1523.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="897.8" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.53%)</title><rect x="895.5" y="1539.0" width="6.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="898.5" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.41%)</title><rect x="896.9" y="1523.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.9" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.41%)</title><rect x="896.9" y="1507.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="899.9" y="1518.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.35%)</title><rect x="897.6" y="1491.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.6" y="1502.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.35%)</title><rect x="897.6" y="1475.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.6" y="1486.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.35%)</title><rect x="897.6" y="1459.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.6" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.12%)</title><rect x="897.6" y="1443.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.6" y="1454.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.12%)</title><rect x="897.6" y="1427.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.6" y="1438.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="898.3" y="1411.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.3" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="898.3" y="1395.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.3" y="1406.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.12%)</title><rect x="899.0" y="1443.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="902.0" y="1454.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="899.0" y="1427.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="902.0" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.06%)</title><rect x="899.7" y="1427.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="902.7" y="1438.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.06%)</title><rect x="900.4" y="1443.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="903.4" y="1454.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.06%)</title><rect x="900.4" y="1427.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="903.4" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="900.4" y="1411.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="903.4" y="1422.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.06%)</title><rect x="901.1" y="1443.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="904.1" y="1454.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.06%)</title><rect x="901.1" y="1427.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="904.1" y="1438.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.47%)</title><rect x="901.8" y="1555.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="904.8" y="1566.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.47%)</title><rect x="901.8" y="1539.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="904.8" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="906.6" y="1523.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="909.6" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="906.6" y="1507.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="909.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.12%)</title><rect x="907.3" y="1571.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.3" y="1582.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.12%)</title><rect x="908.7" y="1603.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="911.7" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="908.7" y="1587.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.7" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="908.7" y="1571.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="911.7" y="1582.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.12%)</title><rect x="908.7" y="1555.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="911.7" y="1566.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="908.7" y="1539.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="911.7" y="1550.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="908.7" y="1523.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="911.7" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="908.7" y="1507.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="911.7" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="908.7" y="1491.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="911.7" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="908.7" y="1475.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="910.1" y="1603.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.1" y="1614.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.06%)</title><rect x="910.1" y="1587.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.1" y="1598.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.06%)</title><rect x="910.1" y="1571.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.1" y="1582.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (1 samples, 0.06%)</title><rect x="910.1" y="1555.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.1" y="1566.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="910.1" y="1539.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.1" y="1550.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="910.1" y="1523.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.1" y="1534.0"></text>
</g>
<g>
<title>akka/stream/OutPort.hashCode (1 samples, 0.06%)</title><rect x="910.1" y="1507.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.1" y="1518.0"></text>
</g>
<g>
<title>start_thread (402 samples, 23.66%)</title><rect x="910.8" y="1603.0" width="279.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="913.8" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (402 samples, 23.66%)</title><rect x="910.8" y="1587.0" width="279.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="913.8" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (402 samples, 23.66%)</title><rect x="910.8" y="1571.0" width="279.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="913.8" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.12%)</title><rect x="910.8" y="1555.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="913.8" y="1566.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (2 samples, 0.12%)</title><rect x="910.8" y="1539.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="913.8" y="1550.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 0.12%)</title><rect x="910.8" y="1523.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="913.8" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 0.12%)</title><rect x="910.8" y="1507.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="913.8" y="1518.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (1 samples, 0.06%)</title><rect x="911.5" y="1491.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="914.5" y="1502.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.06%)</title><rect x="911.5" y="1475.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="914.5" y="1486.0"></text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 0.94%)</title><rect x="912.2" y="1555.0" width="11.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="915.2" y="1566.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 0.94%)</title><rect x="912.2" y="1539.0" width="11.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="915.2" y="1550.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.18%)</title><rect x="912.2" y="1523.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="915.2" y="1534.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.18%)</title><rect x="912.2" y="1507.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="915.2" y="1518.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.12%)</title><rect x="912.9" y="1491.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="915.9" y="1502.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="913.6" y="1475.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="916.6" y="1486.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="913.6" y="1459.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="916.6" y="1470.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="913.6" y="1443.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="916.6" y="1454.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="913.6" y="1427.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.6" y="1438.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="913.6" y="1411.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="916.6" y="1422.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="913.6" y="1395.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="916.6" y="1406.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (9 samples, 0.53%)</title><rect x="914.3" y="1523.0" width="6.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="917.3" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (9 samples, 0.53%)</title><rect x="914.3" y="1507.0" width="6.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="917.3" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (9 samples, 0.53%)</title><rect x="914.3" y="1491.0" width="6.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="917.3" y="1502.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (9 samples, 0.53%)</title><rect x="914.3" y="1475.0" width="6.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.3" y="1486.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.53%)</title><rect x="914.3" y="1459.0" width="6.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="917.3" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (9 samples, 0.53%)</title><rect x="914.3" y="1443.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="917.3" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="916.4" y="1427.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="919.4" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.29%)</title><rect x="917.1" y="1427.0" width="3.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="920.1" y="1438.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="919.1" y="1411.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.1" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="919.1" y="1395.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.1" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="919.1" y="1379.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.1" y="1390.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="919.8" y="1411.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="922.8" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.24%)</title><rect x="920.5" y="1523.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="923.5" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.24%)</title><rect x="920.5" y="1507.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="923.5" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.24%)</title><rect x="920.5" y="1491.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="923.5" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.24%)</title><rect x="920.5" y="1475.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="923.5" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.24%)</title><rect x="920.5" y="1459.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="923.5" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.18%)</title><rect x="921.2" y="1443.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="924.2" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="922.6" y="1427.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="925.6" y="1438.0"></text>
</g>
<g>
<title>JavaThread::run() (382 samples, 22.48%)</title><rect x="923.3" y="1555.0" width="265.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="926.3" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (382 samples, 22.48%)</title><rect x="923.3" y="1539.0" width="265.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.3" y="1550.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (375 samples, 22.07%)</title><rect x="923.3" y="1523.0" width="260.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="926.3" y="1534.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (375 samples, 22.07%)</title><rect x="923.3" y="1507.0" width="260.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="926.3" y="1518.0">CompileBroker::invoke_compiler_on_m..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (368 samples, 21.66%)</title><rect x="923.3" y="1491.0" width="255.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="926.3" y="1502.0">C2Compiler::compile_method(ciEnv*,..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (368 samples, 21.66%)</title><rect x="923.3" y="1475.0" width="255.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="926.3" y="1486.0">Compile::Compile(ciEnv*, C2Compile..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.12%)</title><rect x="923.3" y="1459.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.3" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.12%)</title><rect x="923.3" y="1443.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.3" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.12%)</title><rect x="923.3" y="1427.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.3" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.12%)</title><rect x="923.3" y="1411.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="926.3" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.12%)</title><rect x="923.3" y="1395.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="926.3" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="923.3" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="926.3" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="923.3" y="1363.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.3" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="923.3" y="1347.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="926.3" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="923.3" y="1331.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="926.3" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="923.3" y="1315.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="926.3" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="923.3" y="1299.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="926.3" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="923.3" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.3" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="923.3" y="1267.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="926.3" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="923.3" y="1251.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="926.3" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="923.3" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="926.3" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="923.3" y="1219.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="926.3" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="923.3" y="1203.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="926.3" y="1214.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="923.3" y="1187.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="926.3" y="1198.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="923.3" y="1171.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="926.3" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="924.0" y="1379.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="927.0" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="924.0" y="1363.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="927.0" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="924.0" y="1347.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.0" y="1358.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="924.0" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="927.0" y="1342.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (224 samples, 13.18%)</title><rect x="924.7" y="1459.0" width="155.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.7" y="1470.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (8 samples, 0.47%)</title><rect x="924.7" y="1443.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="927.7" y="1454.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (5 samples, 0.29%)</title><rect x="924.7" y="1427.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="927.7" y="1438.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.12%)</title><rect x="926.8" y="1411.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="929.8" y="1422.0"></text>
</g>
<g>
<title>Dict::operator[](void const*) const (1 samples, 0.06%)</title><rect x="926.8" y="1395.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="929.8" y="1406.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.06%)</title><rect x="927.5" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="930.5" y="1406.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.18%)</title><rect x="928.2" y="1427.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="931.2" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.12%)</title><rect x="928.2" y="1411.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="931.2" y="1422.0"></text>
</g>
<g>
<title>Matcher::is_short_branch_offset(int, int, int) (1 samples, 0.06%)</title><rect x="928.9" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="931.9" y="1406.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.06%)</title><rect x="929.6" y="1411.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="932.6" y="1422.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (10 samples, 0.59%)</title><rect x="930.2" y="1443.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="933.2" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.12%)</title><rect x="933.0" y="1427.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="936.0" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="933.7" y="1411.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="936.7" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="933.7" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="936.7" y="1406.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (4 samples, 0.24%)</title><rect x="934.4" y="1427.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="937.4" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::add_non_safepoint(int) (1 samples, 0.06%)</title><rect x="935.1" y="1411.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="938.1" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.12%)</title><rect x="935.8" y="1411.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="938.8" y="1422.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="935.8" y="1395.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="938.8" y="1406.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.06%)</title><rect x="936.5" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="939.5" y="1406.0"></text>
</g>
<g>
<title>Matcher::match() (19 samples, 1.12%)</title><rect x="937.2" y="1443.0" width="13.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="940.2" y="1454.0"></text>
</g>
<g>
<title>ConNode::Opcode() const (1 samples, 0.06%)</title><rect x="937.2" y="1427.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="940.2" y="1438.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (2 samples, 0.12%)</title><rect x="937.9" y="1427.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="940.9" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (15 samples, 0.88%)</title><rect x="939.3" y="1427.0" width="10.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="942.3" y="1438.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (6 samples, 0.35%)</title><rect x="940.7" y="1411.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="943.7" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.06%)</title><rect x="944.8" y="1411.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="947.8" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.06%)</title><rect x="944.8" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="947.8" y="1406.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="944.8" y="1379.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="947.8" y="1390.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (6 samples, 0.35%)</title><rect x="945.5" y="1411.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="948.5" y="1422.0"></text>
</g>
<g>
<title>ConvI2LNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="945.5" y="1395.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="948.5" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.18%)</title><rect x="946.2" y="1395.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="949.2" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.18%)</title><rect x="946.2" y="1379.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="949.2" y="1390.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="947.6" y="1363.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="950.6" y="1374.0"></text>
</g>
<g>
<title>State::_sub_Op_ConI(Node const*) (1 samples, 0.06%)</title><rect x="947.6" y="1347.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="950.6" y="1358.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.12%)</title><rect x="948.3" y="1395.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="951.3" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="948.3" y="1379.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="951.3" y="1390.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (1 samples, 0.06%)</title><rect x="948.3" y="1363.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="951.3" y="1374.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.06%)</title><rect x="949.0" y="1379.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="952.0" y="1390.0"></text>
</g>
<g>
<title>RegionNode::Opcode() const (1 samples, 0.06%)</title><rect x="949.7" y="1427.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="952.7" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.06%)</title><rect x="950.4" y="1443.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="953.4" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.06%)</title><rect x="950.4" y="1427.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="953.4" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (21 samples, 1.24%)</title><rect x="951.1" y="1443.0" width="14.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="954.1" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (21 samples, 1.24%)</title><rect x="951.1" y="1427.0" width="14.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="954.1" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.06%)</title><rect x="951.1" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="954.1" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.06%)</title><rect x="951.1" y="1395.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="954.1" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.24%)</title><rect x="951.8" y="1411.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="954.8" y="1422.0"></text>
</g>
<g>
<title>MachNode::memory_inputs(Node*&amp;, Node*&amp;) const (1 samples, 0.06%)</title><rect x="951.8" y="1395.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="954.8" y="1406.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.12%)</title><rect x="952.5" y="1395.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="955.5" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.06%)</title><rect x="953.9" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="956.9" y="1406.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.06%)</title><rect x="953.9" y="1379.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="956.9" y="1390.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="953.9" y="1363.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="956.9" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (4 samples, 0.24%)</title><rect x="954.6" y="1411.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="957.6" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.06%)</title><rect x="955.3" y="1395.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="958.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="955.9" y="1395.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="958.9" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.06%)</title><rect x="956.6" y="1395.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="959.6" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.06%)</title><rect x="956.6" y="1379.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="959.6" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.06%)</title><rect x="957.3" y="1411.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="960.3" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (2 samples, 0.12%)</title><rect x="958.0" y="1411.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="961.0" y="1422.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.06%)</title><rect x="958.7" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="961.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.24%)</title><rect x="959.4" y="1411.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="962.4" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="960.8" y="1395.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="963.8" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="961.5" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="964.5" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.24%)</title><rect x="962.2" y="1411.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="965.2" y="1422.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.06%)</title><rect x="962.9" y="1395.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="965.9" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="963.6" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="966.6" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.06%)</title><rect x="964.3" y="1395.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="967.3" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="964.3" y="1379.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="967.3" y="1390.0"></text>
</g>
<g>
<title>RegionNode::pinned() const (1 samples, 0.06%)</title><rect x="965.0" y="1411.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="968.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (165 samples, 9.71%)</title><rect x="965.7" y="1443.0" width="114.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.7" y="1454.0">PhaseChaitin::..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.12%)</title><rect x="965.7" y="1427.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="968.7" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="967.1" y="1427.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="970.1" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="967.8" y="1427.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.8" y="1438.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="968.4" y="1427.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="971.4" y="1438.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.06%)</title><rect x="969.1" y="1427.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="972.1" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (5 samples, 0.29%)</title><rect x="969.8" y="1427.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="972.8" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (5 samples, 0.29%)</title><rect x="973.3" y="1427.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="976.3" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="974.0" y="1411.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="977.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.06%)</title><rect x="975.4" y="1411.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="978.4" y="1422.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="975.4" y="1395.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="978.4" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="976.1" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (5 samples, 0.29%)</title><rect x="976.8" y="1427.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="979.8" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="976.8" y="1411.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="979.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.18%)</title><rect x="978.2" y="1411.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="981.2" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="979.6" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="982.6" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (20 samples, 1.18%)</title><rect x="980.3" y="1427.0" width="13.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="983.3" y="1438.0"></text>
</g>
<g>
<title>Block::find_node(Node const*) const (1 samples, 0.06%)</title><rect x="992.1" y="1411.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="995.1" y="1422.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.06%)</title><rect x="992.8" y="1411.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="995.8" y="1422.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.06%)</title><rect x="993.4" y="1411.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (35 samples, 2.06%)</title><rect x="994.1" y="1427.0" width="24.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="997.1" y="1438.0">P..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.06%)</title><rect x="995.5" y="1411.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="998.5" y="1422.0"></text>
</g>
<g>
<title>MachIdealNode::rule() const (1 samples, 0.06%)</title><rect x="996.2" y="1411.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="999.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (5 samples, 0.29%)</title><rect x="996.9" y="1411.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="999.9" y="1422.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.06%)</title><rect x="999.0" y="1395.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.0" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.06%)</title><rect x="999.7" y="1395.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (11 samples, 0.65%)</title><rect x="1000.4" y="1411.0" width="7.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1003.4" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="1004.6" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1007.6" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.24%)</title><rect x="1005.3" y="1395.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1008.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (10 samples, 0.59%)</title><rect x="1008.0" y="1411.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1011.0" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.29%)</title><rect x="1010.1" y="1395.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1013.1" y="1406.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.12%)</title><rect x="1013.6" y="1395.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1016.6" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (3 samples, 0.18%)</title><rect x="1015.0" y="1411.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.0" y="1422.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1017.1" y="1411.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1020.1" y="1422.0"></text>
</g>
<g>
<title>loadNKlassNode::rule() const (1 samples, 0.06%)</title><rect x="1017.8" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.8" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.06%)</title><rect x="1018.5" y="1427.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1021.5" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.06%)</title><rect x="1018.5" y="1411.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1021.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.06%)</title><rect x="1019.1" y="1427.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.1" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.06%)</title><rect x="1019.8" y="1427.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1022.8" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (21 samples, 1.24%)</title><rect x="1020.5" y="1427.0" width="14.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1023.5" y="1438.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="1026.8" y="1411.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1029.8" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.35%)</title><rect x="1027.5" y="1411.0" width="4.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1030.5" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.06%)</title><rect x="1031.6" y="1411.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1034.6" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="1032.3" y="1411.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1035.3" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.06%)</title><rect x="1033.0" y="1411.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.0" y="1422.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.06%)</title><rect x="1033.7" y="1411.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1036.7" y="1422.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (1 samples, 0.06%)</title><rect x="1034.4" y="1411.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.4" y="1422.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (1 samples, 0.06%)</title><rect x="1034.4" y="1395.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.4" y="1406.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="1034.4" y="1379.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.4" y="1390.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1034.4" y="1363.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.4" y="1374.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="1034.4" y="1347.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.4" y="1358.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (1 samples, 0.06%)</title><rect x="1034.4" y="1331.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.4" y="1342.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="1034.4" y="1315.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1037.4" y="1326.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="1034.4" y="1299.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.4" y="1310.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="1034.4" y="1283.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1037.4" y="1294.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="1034.4" y="1267.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1037.4" y="1278.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="1034.4" y="1251.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.4" y="1262.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="1034.4" y="1235.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.4" y="1246.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="1034.4" y="1219.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1037.4" y="1230.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="1034.4" y="1203.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1037.4" y="1214.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="1034.4" y="1187.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1037.4" y="1198.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="1034.4" y="1171.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.4" y="1182.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="1034.4" y="1155.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1037.4" y="1166.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="1034.4" y="1139.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1037.4" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="1034.4" y="1123.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.4" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="1034.4" y="1107.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.4" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="1034.4" y="1091.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.4" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (7 samples, 0.41%)</title><rect x="1035.1" y="1427.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.1" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.18%)</title><rect x="1037.9" y="1411.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1040.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.12%)</title><rect x="1040.0" y="1427.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1043.0" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (27 samples, 1.59%)</title><rect x="1041.4" y="1427.0" width="18.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1044.4" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (13 samples, 0.77%)</title><rect x="1049.0" y="1411.0" width="9.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1052.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1057.3" y="1395.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1060.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="1057.3" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1060.3" y="1390.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.18%)</title><rect x="1058.0" y="1411.0" width="2.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1061.0" y="1422.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (10 samples, 0.59%)</title><rect x="1060.1" y="1427.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1063.1" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.06%)</title><rect x="1060.1" y="1411.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.1" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.06%)</title><rect x="1060.8" y="1411.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1063.8" y="1422.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (8 samples, 0.47%)</title><rect x="1061.5" y="1411.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.5" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (4 samples, 0.24%)</title><rect x="1061.5" y="1395.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1064.5" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (4 samples, 0.24%)</title><rect x="1064.3" y="1395.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1067.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (5 samples, 0.29%)</title><rect x="1067.1" y="1427.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1070.1" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.18%)</title><rect x="1068.5" y="1411.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.18%)</title><rect x="1070.5" y="1427.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1073.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.06%)</title><rect x="1072.6" y="1427.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1075.6" y="1438.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="1072.6" y="1411.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1075.6" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.53%)</title><rect x="1073.3" y="1427.0" width="6.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.3" y="1438.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="1076.8" y="1411.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1079.8" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.18%)</title><rect x="1077.5" y="1411.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1080.5" y="1422.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="1078.9" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.9" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="1079.6" y="1427.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1082.6" y="1438.0"></text>
</g>
<g>
<title>Compile::Optimize() (91 samples, 5.36%)</title><rect x="1080.3" y="1459.0" width="63.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.3" y="1470.0">Compile..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.06%)</title><rect x="1080.3" y="1443.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.3" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.06%)</title><rect x="1080.3" y="1427.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1083.3" y="1438.0"></text>
</g>
<g>
<title>CallNode::has_non_debug_use(Node*) (1 samples, 0.06%)</title><rect x="1080.3" y="1411.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.3" y="1422.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (4 samples, 0.24%)</title><rect x="1081.0" y="1443.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.0" y="1454.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (2 samples, 0.12%)</title><rect x="1081.0" y="1427.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1084.0" y="1438.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.12%)</title><rect x="1081.0" y="1411.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1084.0" y="1422.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.12%)</title><rect x="1081.0" y="1395.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1084.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.12%)</title><rect x="1082.3" y="1427.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1085.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.12%)</title><rect x="1082.3" y="1411.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.3" y="1422.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1082.3" y="1395.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1085.3" y="1406.0"></text>
</g>
<g>
<title>IfNode::search_identical(int) (1 samples, 0.06%)</title><rect x="1082.3" y="1379.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1085.3" y="1390.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1083.0" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.0" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (1 samples, 0.06%)</title><rect x="1083.0" y="1379.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.0" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.0" y="1363.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.0" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.0" y="1347.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.0" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.0" y="1331.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1086.0" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.0" y="1315.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.0" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.0" y="1299.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.0" y="1310.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1083.0" y="1283.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.0" y="1294.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1083.0" y="1267.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1086.0" y="1278.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (2 samples, 0.12%)</title><rect x="1083.7" y="1443.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.7" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="1083.7" y="1427.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1086.7" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="1083.7" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1086.7" y="1422.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1083.7" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.7" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (1 samples, 0.06%)</title><rect x="1083.7" y="1379.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1086.7" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1363.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.7" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1347.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.7" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1331.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1086.7" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1315.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1086.7" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1299.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.7" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1283.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.7" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.7" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1251.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1086.7" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1086.7" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1219.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.7" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1086.7" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1187.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.7" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.7" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1155.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.7" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1086.7" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1086.7" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.7" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1091.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1086.7" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1075.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1086.7" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.7" y="1070.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1083.7" y="1043.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1086.7" y="1054.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1083.7" y="1027.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.7" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (1 samples, 0.06%)</title><rect x="1084.4" y="1427.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1087.4" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (5 samples, 0.29%)</title><rect x="1085.1" y="1443.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1088.1" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (5 samples, 0.29%)</title><rect x="1085.1" y="1427.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.1" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.06%)</title><rect x="1085.1" y="1411.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.1" y="1422.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.06%)</title><rect x="1085.1" y="1395.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1088.1" y="1406.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.06%)</title><rect x="1085.1" y="1379.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1088.1" y="1390.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.06%)</title><rect x="1085.1" y="1363.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1088.1" y="1374.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.06%)</title><rect x="1085.1" y="1347.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.1" y="1358.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.06%)</title><rect x="1085.1" y="1331.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.1" y="1342.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.06%)</title><rect x="1085.1" y="1315.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1088.1" y="1326.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.06%)</title><rect x="1085.1" y="1299.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1088.1" y="1310.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.06%)</title><rect x="1085.1" y="1283.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.1" y="1294.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.06%)</title><rect x="1085.1" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.1" y="1278.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.06%)</title><rect x="1085.1" y="1251.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.1" y="1262.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1085.1" y="1235.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1088.1" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1085.1" y="1219.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.1" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1085.1" y="1203.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.1" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1085.1" y="1187.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.1" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1085.1" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.1" y="1182.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1085.1" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1088.1" y="1166.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1085.1" y="1139.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.1" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1085.1" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1088.1" y="1134.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="1085.1" y="1107.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1088.1" y="1118.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="1085.1" y="1091.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1088.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1085.1" y="1075.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1088.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1085.1" y="1059.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1088.1" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1085.8" y="1411.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.8" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1085.8" y="1395.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.8" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (3 samples, 0.18%)</title><rect x="1086.5" y="1411.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.5" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.18%)</title><rect x="1086.5" y="1395.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.5" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1379.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1089.5" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1363.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.5" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1347.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.5" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1331.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.5" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1315.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.5" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1299.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.5" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1283.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.5" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1267.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.5" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1251.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.5" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1235.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.5" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1219.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1089.5" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1089.5" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1187.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1089.5" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1171.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.5" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.5" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.5" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.5" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1107.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.5" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.5" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.5" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1059.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.5" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1043.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.5" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1027.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1089.5" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="1011.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.5" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="995.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.5" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.5" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="963.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.5" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="947.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.5" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="931.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1089.5" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="915.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.5" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.5" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.5" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.5" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1089.5" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1089.5" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="819.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.5" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.5" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="787.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.5" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1086.5" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.5" y="782.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.240] (1 samples, 0.06%)</title><rect x="1086.5" y="755.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1089.5" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="1087.2" y="1379.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1090.2" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="1087.2" y="1363.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.2" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1347.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.2" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1331.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1090.2" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1315.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1090.2" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1299.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1090.2" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1283.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1090.2" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1267.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.2" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1251.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1090.2" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1235.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.2" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1219.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.2" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1203.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.2" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1187.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.2" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1090.2" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1155.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.2" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1139.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.2" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.2" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.2" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1091.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.2" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1075.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.2" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.2" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1090.2" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1027.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.2" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.2" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.2" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="979.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.2" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="963.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.2" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="947.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.2" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.2" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="915.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.2" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="899.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1090.2" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="883.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1090.2" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="867.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.2" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.2" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.2" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.2" y="846.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="1087.2" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.2" y="830.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="1087.2" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1090.2" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1347.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.9" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1331.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1090.9" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1315.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.9" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1299.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1090.9" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1283.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.9" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1267.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.9" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1251.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.9" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.9" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1219.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1090.9" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1203.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.9" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1187.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.9" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1171.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.9" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1155.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.9" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.06%)</title><rect x="1087.9" y="1139.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.9" y="1150.0"></text>
</g>
<g>
<title>PhiNode::make(Node*, Node*, Type const*, TypePtr const*) (1 samples, 0.06%)</title><rect x="1087.9" y="1123.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1090.9" y="1134.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (8 samples, 0.47%)</title><rect x="1088.6" y="1443.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1091.6" y="1454.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1091.4" y="1427.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1094.4" y="1438.0"></text>
</g>
<g>
<title>CallNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1092.1" y="1427.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1095.1" y="1438.0"></text>
</g>
<g>
<title>LoadBNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1092.8" y="1427.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1095.8" y="1438.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="1092.8" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1095.8" y="1422.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.06%)</title><rect x="1092.8" y="1395.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.8" y="1406.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.06%)</title><rect x="1092.8" y="1379.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1095.8" y="1390.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1093.5" y="1427.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1096.5" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.06%)</title><rect x="1094.2" y="1443.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.2" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.06%)</title><rect x="1094.2" y="1427.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.2" y="1438.0"></text>
</g>
<g>
<title>TypeLong::singleton() const (1 samples, 0.06%)</title><rect x="1094.2" y="1411.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1097.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (45 samples, 2.65%)</title><rect x="1094.8" y="1443.0" width="31.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.8" y="1454.0">Ph..</text>
</g>
<g>
<title>Compile::print_method(CompilerPhaseType, int) [clone .isra.194] [clone .constprop.195] (2 samples, 0.12%)</title><rect x="1094.8" y="1427.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.8" y="1438.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.06%)</title><rect x="1095.5" y="1411.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.5" y="1422.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1096.2" y="1427.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1099.2" y="1438.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1096.2" y="1411.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1099.2" y="1422.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1096.2" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1099.2" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1096.2" y="1379.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1099.2" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1096.2" y="1363.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.2" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.06%)</title><rect x="1096.2" y="1347.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.2" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.06%)</title><rect x="1096.2" y="1331.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1099.2" y="1342.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="1096.2" y="1315.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1099.2" y="1326.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="1096.9" y="1427.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.9" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.06%)</title><rect x="1096.9" y="1411.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1099.9" y="1422.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.06%)</title><rect x="1096.9" y="1395.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.9" y="1406.0"></text>
</g>
<g>
<title>MemBarAcquireNode::Opcode() const (1 samples, 0.06%)</title><rect x="1097.6" y="1427.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.6" y="1438.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="1098.3" y="1427.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1101.3" y="1438.0"></text>
</g>
<g>
<title>PCTableNode::pinned() const (1 samples, 0.06%)</title><rect x="1099.0" y="1427.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1102.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (5 samples, 0.29%)</title><rect x="1099.7" y="1427.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1102.7" y="1438.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1102.5" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.18%)</title><rect x="1103.2" y="1427.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1106.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1104.6" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (19 samples, 1.12%)</title><rect x="1105.3" y="1427.0" width="13.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1108.3" y="1438.0"></text>
</g>
<g>
<title>Opaque1Node::Opcode() const (1 samples, 0.06%)</title><rect x="1108.0" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (14 samples, 0.82%)</title><rect x="1108.7" y="1411.0" width="9.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1111.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (12 samples, 0.71%)</title><rect x="1109.4" y="1395.0" width="8.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1110.8" y="1379.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1113.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (9 samples, 0.53%)</title><rect x="1111.5" y="1379.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1114.5" y="1390.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="1117.8" y="1395.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1120.8" y="1406.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.06%)</title><rect x="1117.8" y="1379.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.06%)</title><rect x="1118.5" y="1427.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (7 samples, 0.41%)</title><rect x="1119.2" y="1427.0" width="4.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1122.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="1119.9" y="1411.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1122.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::handle_use(Node*, Node*, small_cache*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1119.9" y="1395.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::spinup(Node*, Node*, Node*, Node*, Node*, small_cache*) [clone .part.41] (1 samples, 0.06%)</title><rect x="1119.9" y="1379.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.9" y="1390.0"></text>
</g>
<g>
<title>cmpkey(void const*, void const*) (1 samples, 0.06%)</title><rect x="1119.9" y="1363.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1122.9" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (5 samples, 0.29%)</title><rect x="1120.5" y="1411.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.5" y="1422.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="1120.5" y="1395.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.5" y="1406.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="1120.5" y="1379.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.5" y="1390.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="1120.5" y="1363.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.5" y="1374.0"></text>
</g>
<g>
<title>TypeAryPtr::make(TypePtr::PTR, ciObject*, TypeAry const*, ciKlass*, bool, int, int, TypePtr const*, int, bool) (1 samples, 0.06%)</title><rect x="1120.5" y="1347.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.5" y="1358.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1120.5" y="1331.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.5" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.12%)</title><rect x="1121.2" y="1395.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1121.9" y="1379.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.9" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.06%)</title><rect x="1122.6" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1122.6" y="1379.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.6" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1123.3" y="1395.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1126.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1123.3" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.3" y="1390.0"></text>
</g>
<g>
<title>DecodeNNode::Opcode() const (1 samples, 0.06%)</title><rect x="1123.3" y="1363.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.3" y="1374.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.06%)</title><rect x="1124.0" y="1427.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.0" y="1438.0"></text>
</g>
<g>
<title>RegionNode::pinned() const (1 samples, 0.06%)</title><rect x="1124.7" y="1427.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.7" y="1438.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1125.4" y="1427.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.4" y="1438.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.06%)</title><rect x="1125.4" y="1411.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (19 samples, 1.12%)</title><rect x="1126.1" y="1443.0" width="13.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.1" y="1454.0"></text>
</g>
<g>
<title>Node::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1126.1" y="1427.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.1" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (18 samples, 1.06%)</title><rect x="1126.8" y="1427.0" width="12.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.8" y="1438.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.12%)</title><rect x="1127.5" y="1411.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1127.5" y="1395.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1127.5" y="1379.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.5" y="1390.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1127.5" y="1363.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.5" y="1374.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="1128.2" y="1395.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1131.2" y="1406.0"></text>
</g>
<g>
<title>TypePtr::singleton() const (1 samples, 0.06%)</title><rect x="1128.2" y="1379.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.2" y="1390.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1128.9" y="1411.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.9" y="1422.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.06%)</title><rect x="1128.9" y="1395.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.9" y="1406.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.06%)</title><rect x="1128.9" y="1379.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.9" y="1390.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1129.6" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.6" y="1422.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.06%)</title><rect x="1130.3" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.12%)</title><rect x="1131.0" y="1411.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.0" y="1422.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.06%)</title><rect x="1131.0" y="1395.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.0" y="1406.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.06%)</title><rect x="1131.7" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.7" y="1406.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1132.4" y="1411.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.4" y="1422.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1132.4" y="1395.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.4" y="1406.0"></text>
</g>
<g>
<title>MemNode::optimize_simple_memory_chain(Node*, TypeOopPtr const*, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1132.4" y="1379.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1135.4" y="1390.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1133.0" y="1411.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.0" y="1422.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1133.0" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.0" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (8 samples, 0.47%)</title><rect x="1133.7" y="1411.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.7" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (8 samples, 0.47%)</title><rect x="1133.7" y="1395.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.7" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.41%)</title><rect x="1134.4" y="1379.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.4" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.41%)</title><rect x="1134.4" y="1363.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.4" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.35%)</title><rect x="1134.4" y="1347.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.4" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.29%)</title><rect x="1134.4" y="1331.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.4" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.29%)</title><rect x="1134.4" y="1315.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1137.4" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1299.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.4" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1283.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.4" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1267.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.4" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1251.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.4" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1235.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.4" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1219.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.4" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1203.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.4" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.24%)</title><rect x="1134.4" y="1187.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.4" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.18%)</title><rect x="1134.4" y="1171.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.4" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.18%)</title><rect x="1134.4" y="1155.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.4" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.18%)</title><rect x="1134.4" y="1139.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1137.4" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.12%)</title><rect x="1134.4" y="1123.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.4" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.12%)</title><rect x="1134.4" y="1107.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1137.4" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1134.4" y="1091.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.4" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1134.4" y="1075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.4" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1134.4" y="1059.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.4" y="1070.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1134.4" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1137.4" y="1054.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1134.4" y="1027.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.4" y="1038.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1135.1" y="1091.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.1" y="1102.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1135.1" y="1075.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.1" y="1086.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1135.8" y="1123.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.8" y="1134.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1135.8" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.8" y="1118.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1136.5" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1139.5" y="1182.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1136.5" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.5" y="1166.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1137.2" y="1299.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.2" y="1310.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1137.2" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.2" y="1294.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1137.9" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.9" y="1342.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1137.9" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.9" y="1326.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1138.6" y="1347.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.6" y="1358.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1138.6" y="1331.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.6" y="1342.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (4 samples, 0.24%)</title><rect x="1139.3" y="1443.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.3" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.24%)</title><rect x="1139.3" y="1427.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.24%)</title><rect x="1139.3" y="1411.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.3" y="1422.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1139.3" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1139.3" y="1379.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1139.3" y="1363.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.3" y="1374.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1139.3" y="1347.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.3" y="1358.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="1140.0" y="1395.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.06%)</title><rect x="1140.7" y="1395.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.7" y="1406.0"></text>
</g>
<g>
<title>TypeLong::hash() const (1 samples, 0.06%)</title><rect x="1141.4" y="1395.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.4" y="1406.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="1142.1" y="1443.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.1" y="1454.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="1142.1" y="1427.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.1" y="1438.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1142.1" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.1" y="1422.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.06%)</title><rect x="1142.8" y="1443.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.8" y="1454.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (2 samples, 0.12%)</title><rect x="1143.5" y="1459.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.5" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.12%)</title><rect x="1143.5" y="1443.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.5" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1143.5" y="1427.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.5" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1143.5" y="1411.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1143.5" y="1395.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.5" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1143.5" y="1379.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.5" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1143.5" y="1363.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.5" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1143.5" y="1347.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.5" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1143.5" y="1331.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.5" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1143.5" y="1315.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1143.5" y="1299.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1143.5" y="1283.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1143.5" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1143.5" y="1251.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.5" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1143.5" y="1235.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.5" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1143.5" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1143.5" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1143.5" y="1187.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1143.5" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.5" y="1182.0"></text>
</g>
<g>
<title>CmpINode::sub(Type const*, Type const*) const (1 samples, 0.06%)</title><rect x="1143.5" y="1155.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1146.5" y="1166.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (1 samples, 0.06%)</title><rect x="1144.2" y="1331.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.2" y="1342.0"></text>
</g>
<g>
<title>Compile::rethrow_exceptions(JVMState*) (1 samples, 0.06%)</title><rect x="1144.9" y="1459.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.9" y="1470.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.06%)</title><rect x="1144.9" y="1443.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.9" y="1454.0"></text>
</g>
<g>
<title>PhiNode::slice_memory(TypePtr const*) const (1 samples, 0.06%)</title><rect x="1144.9" y="1427.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.9" y="1438.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="1144.9" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.9" y="1422.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1144.9" y="1395.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.9" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (43 samples, 2.53%)</title><rect x="1145.6" y="1459.0" width="29.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.6" y="1470.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (43 samples, 2.53%)</title><rect x="1145.6" y="1443.0" width="29.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.6" y="1454.0">Pa..</text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.06%)</title><rect x="1145.6" y="1427.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.6" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (42 samples, 2.47%)</title><rect x="1146.2" y="1427.0" width="29.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.2" y="1438.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (42 samples, 2.47%)</title><rect x="1146.2" y="1411.0" width="29.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.2" y="1422.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (42 samples, 2.47%)</title><rect x="1146.2" y="1395.0" width="29.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.2" y="1406.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (41 samples, 2.41%)</title><rect x="1146.2" y="1379.0" width="28.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.2" y="1390.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1146.2" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.2" y="1374.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1146.2" y="1347.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.2" y="1358.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1146.2" y="1331.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.2" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1146.2" y="1315.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.2" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1146.2" y="1299.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.2" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1146.2" y="1283.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.2" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1146.2" y="1267.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.2" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1146.2" y="1251.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.2" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1146.2" y="1235.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.2" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1146.2" y="1219.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.2" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1146.2" y="1203.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.2" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1146.2" y="1187.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.2" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (36 samples, 2.12%)</title><rect x="1146.9" y="1363.0" width="25.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1149.9" y="1374.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (36 samples, 2.12%)</title><rect x="1146.9" y="1347.0" width="25.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.9" y="1358.0">P..</text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.06%)</title><rect x="1146.9" y="1331.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.9" y="1342.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1146.9" y="1315.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.9" y="1326.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.06%)</title><rect x="1146.9" y="1299.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.9" y="1310.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.06%)</title><rect x="1146.9" y="1283.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.9" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (34 samples, 2.00%)</title><rect x="1147.6" y="1331.0" width="23.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.6" y="1342.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (34 samples, 2.00%)</title><rect x="1147.6" y="1315.0" width="23.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.6" y="1326.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (34 samples, 2.00%)</title><rect x="1147.6" y="1299.0" width="23.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="1310.0">P..</text>
</g>
<g>
<title>Parse::do_call() (32 samples, 1.88%)</title><rect x="1147.6" y="1283.0" width="22.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.6" y="1294.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1147.6" y="1267.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.6" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1147.6" y="1251.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.6" y="1262.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1147.6" y="1235.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.6" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1147.6" y="1219.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.6" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1147.6" y="1203.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.6" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1147.6" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.6" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1147.6" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1147.6" y="1155.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::block_at(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) [clone .constprop.160] (1 samples, 0.06%)</title><rect x="1147.6" y="1139.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="1150.0"></text>
</g>
<g>
<title>ciType::make(BasicType) (1 samples, 0.06%)</title><rect x="1147.6" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.6" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (24 samples, 1.41%)</title><rect x="1148.3" y="1267.0" width="16.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.3" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (24 samples, 1.41%)</title><rect x="1148.3" y="1251.0" width="16.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.3" y="1262.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1148.3" y="1235.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.3" y="1246.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1148.3" y="1219.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="1230.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1148.3" y="1203.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.3" y="1214.0"></text>
</g>
<g>
<title>G1BarrierSetC2::is_gc_barrier_node(Node*) const (1 samples, 0.06%)</title><rect x="1148.3" y="1187.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (23 samples, 1.35%)</title><rect x="1149.0" y="1235.0" width="16.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (23 samples, 1.35%)</title><rect x="1149.0" y="1219.0" width="16.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (23 samples, 1.35%)</title><rect x="1149.0" y="1203.0" width="16.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.0" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 1.24%)</title><rect x="1149.0" y="1187.0" width="14.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.0" y="1198.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1149.0" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.0" y="1182.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1149.0" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.0" y="1166.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1149.0" y="1139.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.0" y="1150.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.06%)</title><rect x="1149.0" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.0" y="1134.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1149.0" y="1107.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.0" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1149.0" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.0" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (1 samples, 0.06%)</title><rect x="1149.0" y="1075.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.0" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (19 samples, 1.12%)</title><rect x="1149.7" y="1171.0" width="13.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.7" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 1.06%)</title><rect x="1150.4" y="1155.0" width="12.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.4" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 1.06%)</title><rect x="1150.4" y="1139.0" width="12.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 1.06%)</title><rect x="1150.4" y="1123.0" width="12.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 1.06%)</title><rect x="1150.4" y="1107.0" width="12.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 1.06%)</title><rect x="1150.4" y="1091.0" width="12.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.4" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1150.4" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1150.4" y="1059.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1150.4" y="1043.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1150.4" y="1027.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1150.4" y="1011.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1150.4" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.4" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1150.4" y="979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.4" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1150.4" y="963.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1150.4" y="947.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="958.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1150.4" y="931.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1150.4" y="915.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.4" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1150.4" y="899.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="910.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1150.4" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1150.4" y="867.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="878.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1150.4" y="851.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.4" y="862.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1150.4" y="835.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="846.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="1150.4" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="830.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1150.4" y="803.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.4" y="814.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1150.4" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.88%)</title><rect x="1151.1" y="1075.0" width="10.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.1" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.88%)</title><rect x="1151.1" y="1059.0" width="10.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.1" y="1070.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1151.1" y="1043.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.1" y="1054.0"></text>
</g>
<g>
<title>TypeOopPtr::klass() const (1 samples, 0.06%)</title><rect x="1151.1" y="1027.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.82%)</title><rect x="1151.8" y="1043.0" width="9.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.82%)</title><rect x="1151.8" y="1027.0" width="9.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="1151.8" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.8" y="1022.0"></text>
</g>
<g>
<title>SafePointNode::set_next_exception(SafePointNode*) (1 samples, 0.06%)</title><rect x="1151.8" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.77%)</title><rect x="1152.5" y="1011.0" width="9.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.77%)</title><rect x="1152.5" y="995.0" width="9.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.5" y="1006.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.12%)</title><rect x="1152.5" y="979.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.5" y="990.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.12%)</title><rect x="1152.5" y="963.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.5" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.12%)</title><rect x="1152.5" y="947.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.5" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.12%)</title><rect x="1152.5" y="931.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.12%)</title><rect x="1152.5" y="915.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.5" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::clone_loop_heads(ciTypeFlow::Loop*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1152.5" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::is_clonable_exit(ciTypeFlow::Loop*) (1 samples, 0.06%)</title><rect x="1152.5" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.5" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1153.2" y="899.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.2" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1153.2" y="883.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.2" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1153.2" y="867.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.2" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1153.2" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.2" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1153.2" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.2" y="846.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1153.2" y="819.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.2" y="830.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1153.2" y="803.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.2" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1153.2" y="787.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.2" y="798.0"></text>
</g>
<g>
<title>ciEnv::check_klass_accessibility(ciKlass*, Klass*) (1 samples, 0.06%)</title><rect x="1153.2" y="771.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.2" y="782.0"></text>
</g>
<g>
<title>Reflection::verify_class_access(Klass const*, InstanceKlass const*, bool) (1 samples, 0.06%)</title><rect x="1153.2" y="755.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.2" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::is_same_class_package(Klass const*) const (1 samples, 0.06%)</title><rect x="1153.2" y="739.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.2" y="750.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.06%)</title><rect x="1153.2" y="723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.65%)</title><rect x="1153.9" y="979.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.9" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.65%)</title><rect x="1153.9" y="963.0" width="7.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.65%)</title><rect x="1153.9" y="947.0" width="7.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.65%)</title><rect x="1153.9" y="931.0" width="7.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.65%)</title><rect x="1153.9" y="915.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.53%)</title><rect x="1153.9" y="899.0" width="6.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1153.9" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.9" y="894.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1153.9" y="867.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.9" y="878.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1153.9" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1153.9" y="835.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.9" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1153.9" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.9" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1153.9" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.9" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1153.9" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1153.9" y="771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="782.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="1154.6" y="883.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.6" y="894.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="1154.6" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.6" y="878.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1154.6" y="851.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.6" y="862.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1154.6" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.6" y="846.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="1154.6" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.6" y="830.0"></text>
</g>
<g>
<title>TypeFunc::eq(Type const*) const (1 samples, 0.06%)</title><rect x="1154.6" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.6" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.41%)</title><rect x="1155.3" y="883.0" width="4.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.3" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.41%)</title><rect x="1155.3" y="867.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.41%)</title><rect x="1155.3" y="851.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.41%)</title><rect x="1155.3" y="835.0" width="4.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.41%)</title><rect x="1155.3" y="819.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.41%)</title><rect x="1155.3" y="803.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.41%)</title><rect x="1155.3" y="787.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.41%)</title><rect x="1155.3" y="771.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.3" y="782.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.06%)</title><rect x="1155.3" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.3" y="766.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1155.3" y="739.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.3" y="750.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="1155.3" y="723.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.29%)</title><rect x="1156.0" y="755.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.29%)</title><rect x="1156.0" y="739.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.29%)</title><rect x="1156.0" y="723.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.29%)</title><rect x="1156.0" y="707.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.29%)</title><rect x="1156.0" y="691.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.29%)</title><rect x="1156.0" y="675.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.29%)</title><rect x="1156.0" y="659.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.29%)</title><rect x="1156.0" y="643.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.29%)</title><rect x="1156.0" y="627.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.29%)</title><rect x="1156.0" y="611.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.29%)</title><rect x="1156.0" y="595.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.0" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.29%)</title><rect x="1156.0" y="579.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.0" y="590.0"></text>
</g>
<g>
<title>Node::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1156.0" y="563.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1156.7" y="563.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1156.7" y="547.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1156.7" y="531.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.7" y="515.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.7" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.7" y="499.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.7" y="510.0"></text>
</g>
<g>
<title>GraphKit::transfer_exceptions_into_jvms() (1 samples, 0.06%)</title><rect x="1156.7" y="483.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.7" y="494.0"></text>
</g>
<g>
<title>Node::add_prec(Node*) (1 samples, 0.06%)</title><rect x="1156.7" y="467.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.7" y="478.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="1156.7" y="451.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1159.7" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1157.4" y="483.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1157.4" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1157.4" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="1157.4" y="435.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.4" y="446.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.06%)</title><rect x="1157.4" y="419.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.4" y="430.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.06%)</title><rect x="1157.4" y="403.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.4" y="414.0"></text>
</g>
<g>
<title>SafePointNode::bottom_type() const (1 samples, 0.06%)</title><rect x="1157.4" y="387.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1158.1" y="515.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1158.1" y="499.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.1" y="510.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1158.1" y="483.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.1" y="494.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1158.1" y="467.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.1" y="478.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1158.1" y="451.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.1" y="462.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1158.1" y="435.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.1" y="446.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1158.1" y="419.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.1" y="430.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1158.1" y="403.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.1" y="414.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1158.1" y="387.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.1" y="398.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1158.1" y="371.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.1" y="382.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1158.1" y="355.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1158.7" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.7" y="574.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1158.7" y="547.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.7" y="558.0"></text>
</g>
<g>
<title>AndINode::mul_opcode() const (1 samples, 0.06%)</title><rect x="1158.7" y="531.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.7" y="542.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.06%)</title><rect x="1159.4" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="766.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="1159.4" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1160.1" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1160.1" y="883.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.1" y="894.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1160.1" y="867.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.1" y="878.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1160.1" y="851.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.1" y="862.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1160.1" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.1" y="846.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="1160.1" y="819.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.1" y="830.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.06%)</title><rect x="1160.1" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.06%)</title><rect x="1160.8" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.8" y="910.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.06%)</title><rect x="1160.8" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="894.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.06%)</title><rect x="1160.8" y="867.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.8" y="878.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.06%)</title><rect x="1160.8" y="851.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.8" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1161.5" y="1075.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.5" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1161.5" y="1059.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1161.5" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1161.5" y="1027.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1161.5" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1161.5" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1161.5" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1161.5" y="963.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.5" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1161.5" y="947.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1161.5" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1161.5" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1161.5" y="899.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1161.5" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.5" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1161.5" y="867.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1161.5" y="851.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1161.5" y="835.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1161.5" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1161.5" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1161.5" y="787.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.5" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1161.5" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1161.5" y="755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1161.5" y="739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1161.5" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1161.5" y="707.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="718.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.06%)</title><rect x="1161.5" y="691.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.5" y="702.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.06%)</title><rect x="1161.5" y="675.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.5" y="686.0"></text>
</g>
<g>
<title>GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*) (1 samples, 0.06%)</title><rect x="1161.5" y="659.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.5" y="670.0"></text>
</g>
<g>
<title>Compile::constrained_convI2L(PhaseGVN*, Node*, TypeInt const*, Node*) (1 samples, 0.06%)</title><rect x="1161.5" y="643.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.5" y="654.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1161.5" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.5" y="638.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="1161.5" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.5" y="622.0"></text>
</g>
<g>
<title>CastIINode::Opcode() const (1 samples, 0.06%)</title><rect x="1161.5" y="595.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.5" y="606.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.06%)</title><rect x="1162.2" y="1075.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.2" y="1086.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.06%)</title><rect x="1162.2" y="1059.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.2" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1162.2" y="1043.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.2" y="1054.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1162.2" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.2" y="1038.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1162.2" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.2" y="1022.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1162.2" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.2" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1162.2" y="979.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.2" y="990.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="1162.2" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.2" y="974.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="1162.2" y="947.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1165.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1162.2" y="931.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1165.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1162.2" y="915.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1165.2" y="926.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1162.9" y="1171.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.9" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1162.9" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.9" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1162.9" y="1139.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1162.9" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1162.9" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1162.9" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1162.9" y="1075.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.9" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1162.9" y="1059.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.9" y="1070.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1162.9" y="1043.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.9" y="1054.0"></text>
</g>
<g>
<title>GraphKit::transfer_exceptions_into_jvms() (1 samples, 0.06%)</title><rect x="1162.9" y="1027.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.9" y="1038.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="1162.9" y="1011.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.9" y="1022.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (2 samples, 0.12%)</title><rect x="1163.6" y="1187.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.6" y="1198.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.06%)</title><rect x="1164.3" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.3" y="1182.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.06%)</title><rect x="1164.3" y="1155.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.3" y="1166.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1164.3" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.3" y="1150.0"></text>
</g>
<g>
<title>LoadNKlassNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1164.3" y="1123.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.3" y="1134.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="1164.3" y="1107.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1167.3" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.35%)</title><rect x="1165.0" y="1267.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.0" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.35%)</title><rect x="1165.0" y="1251.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.0" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.35%)</title><rect x="1165.0" y="1235.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.35%)</title><rect x="1165.0" y="1219.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.35%)</title><rect x="1165.0" y="1203.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.0" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.35%)</title><rect x="1165.0" y="1187.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.0" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.35%)</title><rect x="1165.0" y="1171.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.0" y="1182.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1165.0" y="1155.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.0" y="1166.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1165.0" y="1139.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.0" y="1150.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1165.0" y="1123.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.0" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1165.0" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.0" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1165.0" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.0" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1165.0" y="1075.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.0" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1165.0" y="1059.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.0" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1165.0" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.0" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1165.0" y="1027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.0" y="1038.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1165.0" y="1011.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.0" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1165.0" y="995.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.0" y="1006.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1165.0" y="979.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.0" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1165.0" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.0" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1165.0" y="947.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.0" y="958.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="1165.0" y="931.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.0" y="942.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="1165.0" y="915.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1168.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1165.0" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1165.0" y="883.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1168.0" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.29%)</title><rect x="1165.7" y="1155.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.7" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.29%)</title><rect x="1165.7" y="1139.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.29%)</title><rect x="1165.7" y="1123.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.29%)</title><rect x="1165.7" y="1107.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.29%)</title><rect x="1165.7" y="1091.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.29%)</title><rect x="1165.7" y="1075.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.7" y="1086.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="1165.7" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.7" y="1070.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1165.7" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.7" y="1054.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1165.7" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.7" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.24%)</title><rect x="1166.4" y="1059.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.24%)</title><rect x="1166.4" y="1043.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.24%)</title><rect x="1166.4" y="1027.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.24%)</title><rect x="1166.4" y="1011.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.24%)</title><rect x="1166.4" y="995.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.24%)</title><rect x="1166.4" y="979.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.24%)</title><rect x="1166.4" y="963.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.4" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.24%)</title><rect x="1166.4" y="947.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.24%)</title><rect x="1166.4" y="931.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.24%)</title><rect x="1166.4" y="915.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.24%)</title><rect x="1166.4" y="899.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.24%)</title><rect x="1166.4" y="883.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.4" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.24%)</title><rect x="1166.4" y="867.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.4" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.24%)</title><rect x="1166.4" y="851.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.24%)</title><rect x="1166.4" y="835.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.24%)</title><rect x="1166.4" y="819.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.24%)</title><rect x="1166.4" y="803.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.24%)</title><rect x="1166.4" y="787.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.24%)</title><rect x="1166.4" y="771.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.4" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.24%)</title><rect x="1166.4" y="755.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.24%)</title><rect x="1166.4" y="739.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.24%)</title><rect x="1166.4" y="723.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.24%)</title><rect x="1166.4" y="707.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1166.4" y="691.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.4" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1166.4" y="675.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.4" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1166.4" y="659.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1166.4" y="643.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1166.4" y="627.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1166.4" y="611.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1166.4" y="595.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.4" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1166.4" y="579.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.4" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1166.4" y="563.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.4" y="574.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1166.4" y="547.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.4" y="558.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1166.4" y="531.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.4" y="542.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1166.4" y="515.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.4" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1166.4" y="499.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.4" y="510.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1166.4" y="483.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.4" y="494.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1166.4" y="467.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.4" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1166.4" y="451.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.4" y="462.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, LinkInfo const&amp;, methodHandle const&amp;, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1166.4" y="435.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.4" y="446.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1166.4" y="419.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1167.1" y="547.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1167.1" y="531.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1167.1" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1167.1" y="499.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.1" y="510.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1167.8" y="579.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1168.5" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.5" y="702.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1168.5" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.5" y="686.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="1168.5" y="659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.5" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1169.2" y="1267.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.2" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1169.2" y="1251.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.2" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1169.2" y="1235.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.2" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1169.2" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.2" y="1230.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.06%)</title><rect x="1169.9" y="1283.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.9" y="1294.0"></text>
</g>
<g>
<title>ConNode::hash() const (1 samples, 0.06%)</title><rect x="1169.9" y="1267.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1170.6" y="1283.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1170.6" y="1267.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.6" y="1278.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1170.6" y="1251.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.6" y="1262.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1170.6" y="1235.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.6" y="1246.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1170.6" y="1219.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.6" y="1230.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="1170.6" y="1203.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.6" y="1214.0"></text>
</g>
<g>
<title>IdealKit::end_if() (1 samples, 0.06%)</title><rect x="1170.6" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.6" y="1198.0"></text>
</g>
<g>
<title>IdealKit::goto_(Node*, bool) (1 samples, 0.06%)</title><rect x="1170.6" y="1171.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.6" y="1182.0"></text>
</g>
<g>
<title>IdealKit::do_memory_merge(Node*, Node*) (1 samples, 0.06%)</title><rect x="1170.6" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1171.2" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.2" y="1342.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1171.2" y="1315.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.2" y="1326.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1171.2" y="1299.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.2" y="1310.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.06%)</title><rect x="1171.2" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.2" y="1294.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1171.9" y="1363.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1171.9" y="1347.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.9" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1171.9" y="1331.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.9" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1171.9" y="1315.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1171.9" y="1299.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.9" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1171.9" y="1283.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.9" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1171.9" y="1267.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.9" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1171.9" y="1251.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.9" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1171.9" y="1235.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1171.9" y="1219.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1171.9" y="1203.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1171.9" y="1187.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1171.9" y="1171.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.9" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1171.9" y="1155.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1171.9" y="1139.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1171.9" y="1123.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1171.9" y="1107.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1171.9" y="1091.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1171.9" y="1075.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="1171.9" y="1059.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="1171.9" y="1043.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="1171.9" y="1027.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="1171.9" y="1011.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="1171.9" y="995.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="1171.9" y="979.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.9" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1171.9" y="963.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1171.9" y="947.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1171.9" y="931.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1171.9" y="915.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1171.9" y="899.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.9" y="910.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1171.9" y="883.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.9" y="894.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.06%)</title><rect x="1171.9" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.9" y="878.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) [clone .constprop.195] (1 samples, 0.06%)</title><rect x="1171.9" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1172.6" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.6" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1172.6" y="867.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.6" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1172.6" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1172.6" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1172.6" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1172.6" y="803.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.6" y="814.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.06%)</title><rect x="1172.6" y="787.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="798.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.06%)</title><rect x="1172.6" y="771.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.6" y="782.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.06%)</title><rect x="1172.6" y="755.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.6" y="766.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1172.6" y="739.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.6" y="750.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1172.6" y="723.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.6" y="734.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1172.6" y="707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.6" y="718.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.06%)</title><rect x="1172.6" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.6" y="702.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1173.3" y="963.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.3" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1173.3" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.3" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1173.3" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1173.3" y="915.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1173.3" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1173.3" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1173.3" y="867.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.3" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1173.3" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.3" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1173.3" y="835.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1173.3" y="819.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.3" y="830.0"></text>
</g>
<g>
<title>MergeMemNode::set_base_memory(Node*) (1 samples, 0.06%)</title><rect x="1173.3" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.3" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1174.0" y="1363.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.0" y="1374.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1174.0" y="1347.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.0" y="1358.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1174.0" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.0" y="1342.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1174.0" y="1315.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.0" y="1326.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1174.0" y="1299.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.0" y="1310.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1174.7" y="1379.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1174.7" y="1363.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.7" y="1374.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1174.7" y="1347.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.7" y="1358.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1174.7" y="1331.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.7" y="1342.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1174.7" y="1315.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.7" y="1326.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="1174.7" y="1299.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.7" y="1310.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1174.7" y="1283.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.7" y="1294.0"></text>
</g>
<g>
<title>AddLNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="1174.7" y="1267.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.7" y="1278.0"></text>
</g>
<g>
<title>TypeLong::make(long, long, int) (1 samples, 0.06%)</title><rect x="1174.7" y="1251.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.7" y="1262.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.18%)</title><rect x="1175.4" y="1459.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.4" y="1470.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1176.1" y="1443.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.1" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="1176.8" y="1443.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.8" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (2 samples, 0.12%)</title><rect x="1177.5" y="1459.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.5" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.12%)</title><rect x="1177.5" y="1443.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.5" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.06%)</title><rect x="1177.5" y="1427.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.5" y="1438.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*, bool) (1 samples, 0.06%)</title><rect x="1177.5" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.5" y="1422.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.06%)</title><rect x="1178.2" y="1427.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.2" y="1438.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.06%)</title><rect x="1178.2" y="1411.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.2" y="1422.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.06%)</title><rect x="1178.2" y="1395.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.2" y="1406.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (7 samples, 0.41%)</title><rect x="1178.9" y="1491.0" width="4.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.9" y="1502.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (7 samples, 0.41%)</title><rect x="1178.9" y="1475.0" width="4.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.9" y="1486.0"></text>
</g>
<g>
<title>Compilation::compile_method() (7 samples, 0.41%)</title><rect x="1178.9" y="1459.0" width="4.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.9" y="1470.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (6 samples, 0.35%)</title><rect x="1178.9" y="1443.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.9" y="1454.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.12%)</title><rect x="1178.9" y="1427.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.9" y="1438.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.12%)</title><rect x="1178.9" y="1411.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.9" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.12%)</title><rect x="1178.9" y="1395.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.9" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.12%)</title><rect x="1178.9" y="1379.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.9" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.12%)</title><rect x="1178.9" y="1363.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.9" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.12%)</title><rect x="1178.9" y="1347.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.06%)</title><rect x="1178.9" y="1331.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.9" y="1342.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.06%)</title><rect x="1178.9" y="1315.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.9" y="1326.0"></text>
</g>
<g>
<title>ObjectType::as_ObjectType() (1 samples, 0.06%)</title><rect x="1178.9" y="1299.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="1310.0"></text>
</g>
<g>
<title>ObjectType::base() const (1 samples, 0.06%)</title><rect x="1179.6" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.6" y="1342.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.06%)</title><rect x="1180.3" y="1427.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.3" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.06%)</title><rect x="1180.3" y="1411.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.3" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.06%)</title><rect x="1180.3" y="1395.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="1406.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.18%)</title><rect x="1181.0" y="1427.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.0" y="1438.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.06%)</title><rect x="1181.0" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.0" y="1422.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1181.0" y="1395.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.0" y="1406.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (1 samples, 0.06%)</title><rect x="1181.0" y="1379.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.0" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::rlock_result(Instruction*, BasicType) (1 samples, 0.06%)</title><rect x="1181.0" y="1363.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.0" y="1374.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.12%)</title><rect x="1181.7" y="1411.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.7" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (2 samples, 0.12%)</title><rect x="1181.7" y="1395.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.7" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (2 samples, 0.12%)</title><rect x="1181.7" y="1379.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.7" y="1390.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.06%)</title><rect x="1181.7" y="1363.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.7" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.06%)</title><rect x="1181.7" y="1347.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.7" y="1358.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (1 samples, 0.06%)</title><rect x="1181.7" y="1331.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.7" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::no_allocation_possible(Interval*) (1 samples, 0.06%)</title><rect x="1182.4" y="1363.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.4" y="1374.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.06%)</title><rect x="1183.1" y="1443.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.1" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.06%)</title><rect x="1183.1" y="1427.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.1" y="1438.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (1 samples, 0.06%)</title><rect x="1183.1" y="1411.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.1" y="1422.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (1 samples, 0.06%)</title><rect x="1183.1" y="1395.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.1" y="1406.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (2 samples, 0.12%)</title><rect x="1183.7" y="1523.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.7" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.12%)</title><rect x="1183.7" y="1507.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.7" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.12%)</title><rect x="1183.7" y="1491.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.7" y="1502.0"></text>
</g>
<g>
<title>nmethod::is_unloaded() const (1 samples, 0.06%)</title><rect x="1183.7" y="1475.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.7" y="1486.0"></text>
</g>
<g>
<title>nmethod::total_size() const (1 samples, 0.06%)</title><rect x="1184.4" y="1475.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="1486.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (5 samples, 0.29%)</title><rect x="1185.1" y="1523.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (5 samples, 0.29%)</title><rect x="1185.1" y="1507.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="1518.0"></text>
</g>
<g>
<title>CodeCache::remove(void const*, _jmethodID*) (1 samples, 0.06%)</title><rect x="1185.1" y="1491.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.1" y="1502.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (4 samples, 0.24%)</title><rect x="1185.8" y="1491.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="1502.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.12%)</title><rect x="1185.8" y="1475.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.8" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.12%)</title><rect x="1185.8" y="1459.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.8" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.06%)</title><rect x="1185.8" y="1443.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="1454.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1186.5" y="1443.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.5" y="1454.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.12%)</title><rect x="1187.2" y="1475.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1190.2" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.12%)</title><rect x="1187.2" y="1459.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.2" y="1470.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.12%)</title><rect x="1188.6" y="1555.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.6" y="1566.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.12%)</title><rect x="1188.6" y="1539.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.6" y="1550.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.06%)</title><rect x="1188.6" y="1523.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.6" y="1534.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.06%)</title><rect x="1188.6" y="1507.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.6" y="1518.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1188.6" y="1491.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1191.6" y="1502.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1188.6" y="1475.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.6" y="1486.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1188.6" y="1459.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1191.6" y="1470.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1188.6" y="1443.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.6" y="1454.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1188.6" y="1427.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.6" y="1438.0"></text>
</g>
<g>
<title>do_wp_page (1 samples, 0.06%)</title><rect x="1188.6" y="1411.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.6" y="1422.0"></text>
</g>
<g>
<title>do_page_mkwrite (1 samples, 0.06%)</title><rect x="1188.6" y="1395.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.6" y="1406.0"></text>
</g>
<g>
<title>ext4_convert_inline_data (1 samples, 0.06%)</title><rect x="1188.6" y="1379.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1191.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1189.3" y="1523.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.3" y="1534.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="1189.3" y="1507.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1192.3" y="1518.0"></text>
</g>
</g>
</svg>
