akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
  }

  remote {

    artery {
      transport = tcp

      canonical.hostname = "127.0.0.1"
      canonical.hostname = ${?HOSTNAME}
      canonical.port     = 2552

    }
  }

  cluster {

    rapid {

      use-consistent-hash-broadcasting = false

      # broadcasters override this via the JVM parameters
      act-as-consistent-hash-broadcaster = false

      # For regular nodes and broadcasting nodes, there's no need to create large batches as there shouldn't be that many
      # edge DOWN alerts
      batching-window = 100 millis

      messaging {
        # This is way beyond what it should be (it should be 1 second)
        # But we're running this at scale on small machines and at 10000 nodes the largest message reach 1MB
        # Additionally, the broadcasting scheme in use will involve at 3 hops for most messages, adding to the latency
        # Therefore we are being patient
        default-timeout = 1 second
        default-retries = 5
      }
    }
  }

  http {
    server {
      enable-http2 = false
      max-connections = 100000
      idle-timeout = 15 s
    }
    client {
      idle-timeout = 15 s
    }
  }

  coordinated-shutdown.exit-jvm = on

}

